[{"content":" Category Concept 题目 B,C 提升能力 作图、信息检索 ","date":"2023-12-09T13:31:45+08:00","permalink":"https://downeyflyfan.com/p/%E6%95%B0%E6%A8%A1/","title":"数模"},{"content":"Quality 和S参数、工作频率的关系 Category Concept 参数 对S参数的影响 耦合间隙 间隙越小,耦合越强 耦合器臂长度 影响相位,从而影响S参数的幅度; 也影响阻抗匹配 耦合器臂宽度 $R = \\dfrac{ \\pho l }{ S }$, 与特征阻抗成反比，影响阻抗匹配和正反向传输系数, 太窄电流损失会很大 交叉臂长度 长的交叉臂自感和互感较大, 耦合更强 耦合器厚度 厚度越小，耦合系数越大 阻抗调节 接地\n改变耦合方式、耦合距离\n改变线宽\n电长度和频率 Category Concept Frequency $\\lambda$ $28GHz$ $1cm$ 90度相位差的实现 利用传输线的电长度差异。例如branch-line Coupler,通过四分之一个波长的电长度差,可以实现90度相位差。\n利用环形和直形传输线的电长度和耦合因子差异。例如环形杂散耦合器和桥式耦合器。\n在筛选器和耦合器的结构中引入交叉耦合。交叉耦合等效于在两个路径中引入了90度相移。\n在微带线路中,利用偶极子和零偶极子模式的耦合,可以产生90度相位差。\n耦合方式 Category Concept 平行耦合 效果更好，耦合更强,会产生差模和共模信号, 没有方向性 完全垂直耦合 仅产生差模信号, 耦合更弱，会产生串扰, 有方向性，隔离度好 错位垂直耦合 耦合相对完全垂直更弱，但是串扰更少 交叉耦合 通过电磁感应进行耦合，耦合效果更强, 产生90度相移 $C_p, L_p$会造成能量损失 $$ \\begin{gather} \\begin{aligned} Z \u0026amp;= R + j \\omega (L - \\frac{ 1 }{C}) \\\\ C \u0026amp;= \\frac{ Q }{ 4 \\pi \\varepsilon d } \\\\ L \u0026amp;= \\frac{ d \\Phi }{ dI } \\\\ \u0026amp;= L_1 + L_2 + 2M \\end{aligned} \\end{gather} $$\n","date":"2023-12-01T16:14:41+08:00","permalink":"https://downeyflyfan.com/p/3.-coupler/","title":"3. Coupler"},{"content":"Representation of Reflect Coefficient on Complex Plane 反射系数的表示 $$ \\begin{gather} \\begin{aligned} \\Gamma(x\u0026rsquo;) \u0026amp;= | \\Gamma_L| e^{j ( \\phi_L - 2 \\beta x\u0026rsquo;)} \\\\ \u0026amp;= \\Gamma_r + j \\Gamma_i \\end{aligned} \\end{gather} $$\n等反射系数圆 Smith Graph 的半径是$|\\Gamma_L|$, 因此同一个也就是等反射系数圆\n半径为1的圆是单位反射圆\n电刻度圆 $$ \\begin{gather} \\begin{aligned} \\phi \u0026amp;= \\phi_L - 2 \\beta x\u0026rsquo; \\\\ \u0026amp;= \\phi_L - \\frac{ 4 \\pi }{ \\lambda } x' \\end{aligned} \\end{gather} $$\n转一圈对应$x\u0026rsquo; = \\dfrac{ \\lambda }{ 2 }$, 因为$\\Gamma_L$是周期为$\\dfrac{ \\lambda }{2}$的函数 Smith Chart Normalized Impedance $$ \\begin{gather} \\begin{aligned} Z_{in} (x\u0026rsquo;) \u0026amp;= \\frac{ Z_{in}(x\u0026rsquo;) }{ Z_0 } \\\\ \u0026amp;= Z_0 \\frac{ 1 + \\Gamma(x\u0026rsquo;) }{ 1 - \\Gamma(x\u0026rsquo;) } \\\\ \u0026amp;= \\frac{ 1 - \\Gamma_r^2 - \\Gamma_i^2 }{ (1 - \\Gamma_r)^2 + \\Gamma_i^2 } + j \\frac{ 2 \\Gamma_i }{ (1 - \\Gamma_r)^2 + \\Gamma_i^2} \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} R \u0026amp;= \\frac{ 1 - \\Gamma_r^2 - \\Gamma_i^2 }{ (1 - \\Gamma_r)^2 + \\Gamma_i^2 } \\\\ X \u0026amp;= \\frac{ 2 \\Gamma_i }{ (1 - \\Gamma_r)^2 + \\Gamma_i^2} \\end{aligned} \\end{gather} $$\n等电阻圆 \u0026amp; 等电抗圆 根据方程4可以得出等电阻圆和等电抗圆 $$ \\begin{gather} \\begin{aligned} (\\Gamma_r - \\frac{ r }{ 1 + r })^2 + \\Gamma_i^2 \u0026amp;= ( \\frac{ 1 }{ 1 + r })^2 \\\\ ( \\Gamma_r - 1)^2 + ( \\Gamma_i - \\frac{ 1 }{ X }) \u0026amp;= (\\frac{ 1 }{ X })^2 \\end{aligned} \\end{gather} $$\nCategory Concept 等电阻圆 圆心在实轴上，半径为$\\dfrac{ 1 }{ r }$ 等电抗圆 圆心在$\\Gamma_r = 1$上，半径为$\\dfrac{ 1 }{ X }$ Even/Odd Mode Introduction 项目 Even Mode Odd Mode 电流 $I_1 = I_2$ $I_1 = - I_2$ $\\varepsilon_{re}$ 更大 更小 驱动 共模驱动 差分驱动 最终的参数应该是$\\dfrac{ Z_e + Z_o }{ 2 }$ Impedance 名称 概念 $Z_{diff}$ 差分信号沿着差分对传播时受到的阻抗，是每条信号线与返回路径之间阻抗之和。 $Z_{common}$ 共模信号沿传输线传播时收到的阻抗。共模信号是两条信号线的电压平均值，纯共模信号就是差分信号为0时的信号。 $$ \\begin{gather} \\begin{aligned} Z_{diff} \u0026amp;= \\begin{cases} 2 Z_0 \u0026amp; C = 0 \\\\ 2 Z_{odd} \u0026amp; C \\neq 0 \\end{cases} \\\\ Z_{common} \u0026amp;= \\frac{ 1}{ 2 } Z_{even} \\end{aligned} \\end{gather} $$\n若$Z_0 = 50 \\Omega$，那么$Z_0$的Even/Odd部分分别为 $$ \\begin{gather} \\begin{aligned} Z_{0o} \u0026amp;= 50 \\Omega \\\\ Z_{0e} \u0026amp;= 50 \\Omega \\end{aligned} \\end{gather} $$\nVoltage Component $$ \\begin{gather} \\begin{aligned} V_o \u0026amp;= V_{diff} = V_1 - V_2 \\\\ V_e \u0026amp;= V_{common} = \\frac{ V_1 + V_2 }{ 2 } \\\\ V_1 \u0026amp;= V_e + \\frac{ V_o }{ 2 } \\\\ V_2 \u0026amp;= V_e - \\frac{ V_o }{ 2 } \\end{aligned} \\end{gather} $$\n2-Ports Network Low Frequency Impedance \u0026amp; Admittace Parameters $$ \\begin{gather} \\begin{aligned} [V] \u0026amp;= [Z] [i] \\\\ [I] \u0026amp;= [Y] [V] \\\\ [V] \u0026amp;= \\begin{bmatrix} V_1 \\ V_2 \\end{bmatrix} \\\\ [Z] \u0026amp;= \\begin{bmatrix} Z_{11} \u0026amp; Z_{12} \\\\ Z_{21} \u0026amp; Z_{22} \\end{bmatrix} \\\\ [i] \u0026amp;= \\begin{bmatrix} i_1 \\ i_2 \\end{bmatrix} \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} Z_{mn} \u0026amp;= \\begin{cases} \\dfrac{ V_m }{ i_m }|{i_n = 0} \u0026amp; n = m \\\\\\ \\\\ \\dfrac{ V_m }{ i_n }|{i_m = 0} \u0026amp; n \\neq m \\end{cases} \\end{aligned} \\end{gather} $$\nHybrid \u0026amp; Transfer Parameters $$ \\begin{gather} \\begin{aligned} \\begin{bmatrix} v_1\\\\ i_2 \\end{bmatrix} \u0026amp;= \\begin{bmatrix} h_{11} \u0026amp; h_{12}\\\\ h_{21} \u0026amp; h_{22} \\end{bmatrix} \\begin{bmatrix} i_1\\\\ v_2 \\end{bmatrix} \\\\ \\begin{bmatrix} v_1\\\\ i_1 \\end{bmatrix} \u0026amp;= \\begin{bmatrix} A \u0026amp; B\\\\ C \u0026amp; D \\end{bmatrix} \\begin{bmatrix} v_2\\\\ -i_2 \\end{bmatrix} \\\\ [ABCD] \u0026amp;= \\begin{bmatrix} A \u0026amp; B\\\\ C \u0026amp; D \\end{bmatrix} \\\\ \u0026amp;= \\begin{bmatrix} \\dfrac{ v_1 }{ v_2 } \u0026amp; - \\dfrac{ v_1 }{ i_2 }\\\\ \\dfrac{ i_1 }{ v_2 } \u0026amp; - \\dfrac{ i_1 }{ i_2 } \\end{bmatrix} \\end{aligned} \\end{gather} $$\nTransfer Matrix 串联阻抗$Z$的二端口网络 名称 概念 $v_2 = 0$ $i_1 = -i_2 = \\dfrac{ v_1 }{ Z }$ $i_2 = 0$ $i_1 = -i_2 = 0, v_1 = v_2$ $$ \\begin{gather} \\begin{aligned} [ABCD] \u0026amp;= \\begin{bmatrix} 1 \u0026amp; Z\\\\ 0 \u0026amp; 1 \\end{bmatrix} \\end{aligned} \\end{gather} $$\n并联导纳$Y$的二端口网络 $$ \\begin{gather} \\begin{aligned} [ABCD] \u0026amp;= \\begin{bmatrix} 1 \u0026amp; 0\\\\ Y \u0026amp; 1 \\end{bmatrix} \\end{aligned} \\end{gather} $$\nT型网络 可以看成串联阻抗和并联导纳的Cascade $$ \\begin{gather} \\begin{aligned} [ABCD] \u0026amp;= \\begin{bmatrix} 1 + \\dfrac{ Z_A }{ Z_C } \u0026amp; Z_A + Z_B + \\dfrac{ Z_A Z_B }{ Z_C }\\\\ \\dfrac{ 1 }{ Z_C } \u0026amp; 1 + \\dfrac{ Z_B }{ Z_C } \\end{bmatrix} \\\\ \u0026amp;= \\begin{bmatrix} 1 \u0026amp; Z_A \\\\ 0 \u0026amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 \u0026amp; 0\\\\ \\dfrac{ 1 }{ Z_C } \u0026amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 \u0026amp; Z_B\\\\ 0 \u0026amp; 1 \\end{bmatrix} \\end{aligned} \\end{gather} $$\n$\\pi$型网络 $$ \\begin{gather} \\begin{aligned} [ABCD] \u0026amp;= \\begin{bmatrix} 1 + \\dfrac{ Y_B }{ Y_C } \u0026amp; \\dfrac{ 1 }{ Y_C }\\\\ Y_A + Y_B + \\dfrac{ Y_A Y_B }{ Y_C } \u0026amp; 1 + \\dfrac{ Y_A }{ Y_C } \\end{bmatrix} \\end{aligned} \\end{gather} $$\nUniform Transmission Line 包含了$\\dfrac{ \\lambda }{ 4 }, \\dfrac{ \\lambda }{ 2 }$传输线的$T$矩阵 $$ \\begin{gather} \\begin{aligned} [ABCD] \u0026amp;= \\begin{cases} \\begin{bmatrix} cos( \\beta l) \u0026amp; jZ_0 sin( \\beta l)\\\\ j \\dfrac{ 1 }{ Z_0 } sin( \\beta l) \u0026amp; cos( \\beta l) \\end{bmatrix} \u0026amp; General \\\\ \\begin{bmatrix} 0 \u0026amp; j Z_0 \\\\ \\dfrac{ j }{ Z_0 } \u0026amp; 0 \u0026amp; \\theta = \\dfrac{ \\lambda }{ 4 } \\end{bmatrix} \u0026amp; \\theta = \\dfrac{ \\lambda }{ 4 } \\\\ \\begin{bmatrix} -1 \u0026amp; 0 \\\\ 0 \u0026amp; -1 \\end{bmatrix} \u0026amp; \\theta = \\dfrac{ \\lambda }{ 2 } \\end{cases} \\end{aligned} \\end{gather} $$\nHigh Frequency Scattered Parameter Normalized Parameter Normalized Voltage $$ \\begin{gather} \\begin{aligned} a_1 \u0026amp;= \\frac{ V_1^+ }{ \\sqrt{ Z_{01} } } \\\\ b_1 \u0026amp;= \\frac{ V_1^- }{ \\sqrt{ Z_{01} } } \\\\ a_2 \u0026amp;= \\frac{ V_2^+ }{ \\sqrt{ Z_{02} } } \\\\ b_2 \u0026amp;= \\frac{ V_2^- }{ \\sqrt{ Z_{02} } } \\\\ \\end{aligned} \\end{gather} $$\nNormalized Power $$ \\begin{gather} \\begin{aligned} P(x\u0026rsquo;) \u0026amp;= \\frac{ |V^+(x\u0026rsquo;)|^2 }{ 2Z_0 } \\Big[ 1 - | \\Gamma(x\u0026rsquo;)|^2 \\Big] = P^+(x\u0026rsquo;) - P^-(x\u0026rsquo;) \\\\ P_1 \u0026amp;= \\frac{ 1 }{ 2 } ( |a_1|^2 - |b_1|^2 ) \\\\ P_2 \u0026amp;= \\frac{ 1 }{ 2 } ( |a_2|^2 - |b_2|^2 ) \\end{aligned} \\end{gather} $$\nS Parameter $$ \\begin{gather} \\begin{aligned} [b] \u0026amp;= [S] [a] \\\\ [S] \u0026amp;= \\begin{bmatrix} S_{11} \u0026amp; S_{12}\\\\ S_{21} \u0026amp; S_{22} \\end{bmatrix} \\\\ \u0026amp;= \\begin{bmatrix} \\dfrac{ b_1 }{ a_1 }|{a_2 = 0} \u0026amp; \\dfrac{ b_1 }{ a_2 }|{a_1 = 0} \\\\ \\dfrac{ b_2 }{ a_1 }|{a_2 =0} \u0026amp; \\dfrac{ b_2 }{ a_2 }|{a_1 = 0} \\end{bmatrix} \\end{aligned} \\end{gather} $$\n4-Ports Network Schematic 名称 概念 $P_1$ Input Power $P_{in}$ $P_2$ Forward Power $P_f$ $P_3$ Reflected Power $P_r$ $P_4$ Coupled Power $P_c$ Factors 名称 概念 Coupling Factor $C = 10 \\cdot lg( \\dfrac{ P_i }{ P_c })$ Directivity $D = 10 \\cdot lg( \\dfrac{ P_f }{ P_r})$ Isolation $I = 10 \\cdot lg( \\dfrac{ P_i }{ P_r })$，隔离输入与反射，输出与耦合 S Parameter Analysis In Idealized Case Idealized Case 名称 概念 4 Ports are Matched $S_{11} = S_{22} = S_{33} = S_{44} = 0$ It follows the property of symmetry $S_{ij} = S_{ji}$ 1 \u0026amp; 3, 2 \u0026amp; 4 are isolated $S_{13} = S_{31} = S_{24} = S_{42} = 0$ Equal Forward Power $S_{12} = S_{34} = P$ Equal Coupled Power $S_{14} = S_{23} = Q$ Lossless $[S] \\cdot [S]^* = I$ 对应端口阻抗相同 $Z_{ij} = Z_{ji}$ S Matrix $$ \\begin{gather} \\begin{aligned} [S] \u0026amp;= \\begin{bmatrix} 0 \u0026amp; P \u0026amp; 0 \u0026amp; Q \\\\ P \u0026amp; 0 \u0026amp; Q \u0026amp; 0 \\\\ 0 \u0026amp; Q \u0026amp; 0 \u0026amp; P \\\\ Q \u0026amp; 0 \u0026amp; P \u0026amp; 0 \\end{bmatrix} \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} \\because [S] \\cdot [S]^* \u0026amp;= I \\\\ \\therefore P^2 + Q^2 \u0026amp;= 1 \\end{aligned} \\end{gather} $$\nS Parameter of Idealized Couplers Branch-Line Coupler $$ \\begin{gather} \\begin{aligned} [S] \u0026amp;= \\begin{bmatrix} 0 \u0026amp; -\\dfrac{ j }{ \\sqrt{ 2 } } \u0026amp; - \\dfrac{ 1 }{ \\sqrt{ 2 }} \u0026amp; 0 \\\\\n\\dfrac{ j }{ \\sqrt{ 2 } } \u0026amp; 0 \u0026amp; 0 \u0026amp; - \\dfrac{ 1 }{ \\sqrt{ 2 } } \\\\ \\dfrac{ 1 }{ \\sqrt{ 2 } } \u0026amp; 0 \u0026amp; 0 \u0026amp; - \\dfrac{ j }{ \\sqrt{ 2 } } \\\\ 0 \u0026amp; - \\dfrac{ 1 }{ \\sqrt{ 2 } } \u0026amp; - \\dfrac{ j }{ \\sqrt{ 2 } } \u0026amp; 0 \\end{bmatrix} \\end{aligned} \\end{gather} $$ Rat-Race Coupler (180-degree Hybrid Coupler) $$ \\begin{gather} \\begin{aligned} [S] \u0026amp;= - \\frac{ j }{ \\sqrt{ 2 } } \\begin{bmatrix} 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 0 \\\\ 1 \u0026amp; 0 \u0026amp; 0 \u0026amp; -1 \\\\ 1 \u0026amp; 0 \u0026amp; 0 \u0026amp; 1 \\\\ 0 \u0026amp; -1 \u0026amp; 1 \u0026amp; 0 \\end{bmatrix} \\end{aligned} \\end{gather} $$\nAppendix 电抗 $$ \\begin{gather} \\begin{aligned} X_C \u0026amp;= -\\frac{ 1 }{ \\omega C } \\\\ X_L \u0026amp;= \\omega L \\end{aligned} \\end{gather} $$\nQ值 $$ \\begin{gather} \\begin{aligned} Q \u0026amp;= \\frac{ E_{store} }{ E_{loss} } \\end{aligned} \\end{gather} $$\n越高，表示品质越好 ","date":"2023-11-29T16:14:41+08:00","permalink":"https://downeyflyfan.com/p/2.-smith-graph-rf-network/","title":"2. Smith Graph \u0026 RF Network"},{"content":"Cadence Virtuoso 字体调整 1 2 hiSetFont(\u0026#34;ciw\u0026#34; ?size 20) # 修改text文字大小为20 hiSetFont(\u0026#34;label\u0026#34; ?size 20) # 修改Toolbar文字大小为20 ADE 名称 概念 Do Noise (Yes/No) 考虑Thermal/Shot Noise, $T \\uparrow \\longrightarrow $ Carrier Motions $\\uparrow \\longrightarrow$; Carriers 穿过 Barrier产生随机噪声 YP 交流信号分析 ZM Impedance Matrix, $\\begin{bmatrix} Z_{11} \\ Z_{12} \\ Z_{21} \\ Z_{22} \\end{bmatrix}$ Appendix 人工传输线 传输特性：人工传输线具有特定的传输特性，如传输速度、带宽、传输损耗、传输延迟和噪声等。这些特性直接影响信号的传输质量和可靠性。\n阻抗匹配：为了最大限度地减少信号反射和传输损耗，人工传输线需要与连接的设备之间的阻抗进行匹配。阻抗不匹配会导致信号反射和信号失真。\n传输模式：人工传输线可以支持不同的传输模式，如单端传输和差分传输。差分传输常用于抑制噪声和提高信号抗干扰能力。\n传输介质：人工传输线可以采用不同的传输介质，包括金属导线（如铜线）、光纤和空气介质等。每种介质都有其特定的传输特性和应用领域。\n传输线理论：人工传输线的行为可以通过传输线理论进行建模和分析。传输线理论考虑了电磁波在传输线上的传播、反射、折射和衰减等现象，以帮助设计和优化传输线的性能。\n师兄的项目 2-18GHz 硅基功率放大器 Peaking inductor $C_{GS}$, $C_L$ Intra-Stack Coupling 低功耗抗干扰FSK 调制调解器 谐波抑制器 前馈线性化 Short Academic Phrases 名称 定义 ATL(Active Transistor Level) 分为4个等级，等级越高，晶体管的参数越详细 PAE(Power Added Efficiency) 输出和输入之间的功率转化效率(%) Stack Distributed Power Amplifier Refactoring Logic/Layout/Time-Sequence/Power Consumption Refactoring Process Corner 工艺角描述了芯片在不同工艺条件下的性能变化情况。这些条件包括工艺偏移、温度变化和电压变化 DRC Design Rule Check，检查最短距离, 线宽, 层间距离, 射频规则, 器件尺寸、延伸规则 PEX Parasitic Extraction, 提取寄生参数，功能更强大 RCX Resistance Capacitance Extraction, 是Mentor的另一款寄生参数提取工具 BGR Bandgap Reference, 带隙基准电压源,输出电压精度高，且稳定 CMN/CLN/CRN CMOS Mobile Normal, CMOS Logic Normal，CMOS Radio Frequency Normal，三种台积电工艺 PDK Process Design Kit, 设计套件 GDSII Graphic Data System II，IC的实际版图信息 isolation zero(零点) 传输函数零点 FBW(Fractional Bandwidth) 带宽相对于中心频率的比率: $\\dfrac{ \\omega_{B}}{ \\omega_{C} } \\times 100%$ $\\dfrac{\\lambda_0}{ 4 }$ Transmission Line 传输线的电长度为90度,即电线物理长度为$\\dfrac{ 1 }{ 4 } \\lambda$。在线性的传输线中,λ/4长度会产生一个电压和电流逆变换 Signal Condition Circuit 处理传感器输出信号，改善信号质量的电路 IMD3 Integral MoDel Level 3, 第三代晶体管模型，考虑了温度、Body effect, 功率变化等更多因素 FETX Pulse Negative Far End CrossTalk Pulse，测试数字通信系统的测试信号 TCC Thermal Cutoff Current, 不同温度条件下的最大电流 VCC Voltage at Common Collector, 电源电压 VEE 负电源电压 Relative Impedance Bandwidth 工作频率范围相对于中心频率的百分比 SEL Single Element Lock, 通过一个latch实现锁存功能 CID Current Identification Code, 用二进制标识不同电流 DPD Digital Pre-Distortion, 数字预失真 QAM Quadrature Amplitude Modulation (IQ-Based Modulation), 正交调幅 APSK Amplitude Phase Shifting Keying SOI Silicon on Insulator, 在绝缘体上制造芯片，减小了晶体管之间的寄生效应，有PD-SOI(Partial), FD-SOI, FinFET CPW Coplanar Waveguide, 共面波导，适用于高频传输线 波段 C(4 -8GHz), Ku(12 -18GHz), Ka(26.5-40GHz),Q(33-50GHz), V(40-75GHz) 当前目标 \u0026amp; 问题 目标 小尺寸差分电桥 问题 阻抗调解（大了，小了？） 当前行动 串并联结构可以降低插损 ","date":"2023-11-29T13:10:26+08:00","permalink":"https://downeyflyfan.com/p/a1-fragmentray-knowledge/","title":"A1 Fragmentray Knowledge"},{"content":"Basic Concepts 频谱划分 \u0026amp; 无线通信系统的工作频率 Radio Frequency \u0026amp; Microwave 比较 分类 Radio Frequency Microwave 频率 $30MHz - 100GHz+$ $300MHz - 3000GHz$ 优点 速度快，频率高，带宽大，尺寸小 缺点 成本高，功率小，辐射损耗大 定义 电路尺寸和波长可以想比拟时，称为射频电路 特点 Distributed Parameters Skin Effect Skin Effect 电流高度集中在导体表面，增加电阻\nCategory Concept $\\mu$ 磁导率 $\\rho$ 电阻率 $\\sigma = \\dfrac{ 1 }{ \\rho }$ 电导率 Skin Depth $$ \\begin{gather} \\begin{aligned} \\delta \u0026amp;= \\frac{ 1 }{ \\sqrt{ \\pi f \\mu \\sigma } } \\end{aligned} \\end{gather} $$\nRadio Frequency Resistance 以半径为$a$, 长为$l$的圆柱形导体为例 $$ \\begin{gather} \\begin{aligned} R_{DC} \u0026amp;= \\frac{ l }{ \\pi a^2 \\sigma} \\\\ R_{RF} \u0026amp;= \\frac{ a }{ 2 \\delta } R_{DC} \\\\ \u0026amp;= \\frac{ \\sqrt{ \\pi f \\mu/ \\sigma} l}{ 2 \\pi a} \\end{aligned} \\end{gather} $$\nTransmission Line Structure Basic Concepts 名称 概念 Wavelength $\\lambda = \\dfrac{ c }{ \\sqrt{ \\varepsilon_r} f_0 }$ Electric Length $G= \\dfrac{ l}{ \\lambda } = \\dfrac{ lf }{ v_p }$ Phase Velocity $v_p = f \\lambda = \\dfrac{ \\omega }{ \\beta } = \\dfrac{ c }{ \\sqrt{\\varepsilon_r \\mu_r }}, f = \\sqrt{ \\varepsilon_r} f_0$ Phase Shift $\\phi = 2 \\pi \\dfrac{ l }{ \\lambda }$ Normalized Frequency $f_N =$ 常见频率波长转换 $2.4GHz \\longleftrightarrow \\lambda= 12.5cm \\ 5GHz \\longleftrightarrow \\lambda = 6cm \\ 10GHz \\longleftrightarrow \\lambda = 3cm$ 构成与分类 电性能分类 Category Concept TEM(横电磁波) 电/磁场都与传播方向垂直 TE 电场与传播方向垂直 TM 磁场与传播方向垂直 带状线/微带线 Transmission Line Function Telegrapher\u0026rsquo;s Equation $$ \\begin{gather} \\begin{aligned} \\frac{ \\partial V(x,t) }{ \\partial x } = - (R + j \\omega L) I(x) \\\\ \\frac{ \\partial I(x,t) }{ \\partial x } = - (G + j \\omega C) V(x) \\end{aligned} \\end{gather} $$\nWave Equation for a homogeneous Transmission Line Wave Equation $$ \\begin{gather} \\begin{aligned} 0 \u0026amp;= \\frac{ \\partial^2 V }{ \\partial x^2 } - \\gamma^2 V \\\\ 0 \u0026amp;= \\frac{ \\partial^2 I }{ \\partial x^2 } - \\gamma^2 I \\end{aligned} \\end{gather} $$\nTransmission Constant 当$L,C, \\omega \\neq 0$时 $$ \\begin{gather} \\begin{aligned} \\gamma \u0026amp;= \\sqrt{ (R + j \\omega L)(G + j \\omega C) } = \\alpha + j \\beta \\\\ \\mathbb { Re } ( \\gamma) \u0026amp;= \\alpha = (a^2 + b^2)^{1/4} cos( \\phi) \\\\ \\mathbb { Im }( \\gamma) \u0026amp;= \\beta = (a^2 + b^2)^{1/4}sin( \\phi) \\\\ a \u0026amp;= RG - \\omega^2 LC = \\omega^2 LC \\Big[ ( \\frac{ R }{ \\omega L}) ( \\frac{ G }{ \\omega C }) - 1) \\Big] \\\\ b \u0026amp;= \\omega C R + \\omega L G = \\omega^2 LC ( \\frac{ R }{ \\omega L } + \\frac{ G }{ \\omega C }) \\\\ \\phi \u0026amp;= tan^{-1}( \\frac{ b }{ a }) \\end{aligned} \\end{gather} $$\nSolution in General Case In General Case $$ \\begin{gather} \\begin{aligned} V(x) \u0026amp;= A_1 e^{- \\gamma x} + A_2 e^{ \\gamma x} \\\\ I(x) \u0026amp;= \\frac{ 1 }{ Z_0 }(A_1 e^{- \\gamma x} - A_2 e^{ \\gamma x}) \\\\ Z_0 \u0026amp;= \\sqrt{ \\dfrac{ R + j \\omega L }{ G + j \\omega C } } \\end{aligned} \\end{gather} $$\nin Idealized Case $R, G = 0$, 通常都认为是无损耗线 $$ \\begin{gather} \\begin{aligned} V(x) \u0026amp;= A_1 e^{- j \\beta x} +A_2 e^{j \\beta x} \\\\ I(x) \u0026amp;= \\frac{ 1 }{ Z_0 } (A_1 e^{- j \\beta x} - A_2 e^{j \\beta x}) \\\\ Z_0 \u0026amp;= \\sqrt{ \\dfrac{ L }{ C } } \\end{aligned} \\end{gather} $$\nIncident \u0026amp; Reflected Traveling Wave $$ \\begin{gather} \\begin{aligned} v(x,t) \u0026amp;= \\mathbb{ Re } \\Big\\lbrace v(x) e^{j \\omega t} \\Big\\rbrace \\\\ \u0026amp;= \\mathbb { Re } \\Big\\lbrace A_1 e^{j( \\omega t - \\beta x) } + A_2 e^{j ( \\omega t + \\beta x)} \\Big\\rbrace \\\\ \u0026amp;= A_1 cos( \\omega t - \\beta x) + A_2 cos ( \\omega t + \\beta x) \\\\ \u0026amp;= A_1 cos[ \\beta( \\frac{ \\omega }{ \\beta }t - x )] + A_2 cos[ \\beta( \\frac{ \\omega }{ \\beta }t + x )] \\\\ \u0026amp;= A_1 cos[ \\beta(x -v_p t)]+ A_2 cos [ \\beta(x + v_p t)] \\\\ I(x,t) \u0026amp;= \\frac{ 1 }{ Z_0 } \\Big\\lbrace A_1 cos[ \\beta(x -v_p t)] - A_2 cos [ \\beta(x + v_p t)] \\Big\\rbrace \\end{aligned} \\end{gather} $$\n$v(x,t)$和$i(x,t)$都是入射行波和反射行波的线性叠加 Boundary Conditions of Transmission Lines Known End Ports (最常见) Variable Value $V(l)$ $V_2$ $I(l)$ $I_2$ $l$ Transmission Line 总长度 $x'$ $l-x$ 将$V_2, I_2$代入方程7 $$ \\begin{gather} \\begin{aligned} A_1 \u0026amp;= \\frac{ V_2 + I_2 Z_0 }{ 2 } e^{j \\beta l} \\\\ A_2 \u0026amp;= \\frac{ V_2 - I_2 Z_0 }{ 2 } e^{-j \\beta l} \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} V(x\u0026rsquo;) \u0026amp;= \\frac{ V_2 + I_2 Z_0 }{ 2 } e^{ j \\beta x\u0026rsquo;} + \\frac{ V_2 - I_2 Z_0 }{ 2 } e^{ - j \\beta x\u0026rsquo;} \\\\ \u0026amp;= V_2 cos ( \\beta x\u0026rsquo;) + j I_2 Z_0 sin( \\beta x\u0026rsquo;) \\\\ \u0026amp;= V^+(x\u0026rsquo;) + V^-(x\u0026rsquo;) \\\\ \u0026amp;= V_2 ^+ e^{ j \\beta x\u0026rsquo;} ( 1 + \\Gamma_L e^{- j 2 \\beta x\u0026rsquo;}) \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} I(x\u0026rsquo;) \u0026amp;= \\frac{ V_2 + I_2 Z_0 }{ 2Z_0 } e^{j \\beta x\u0026rsquo;} - \\frac{ V_2 - I_2 Z_0 }{ 2Z_0 } e^{ - j \\beta x\u0026rsquo;} \\\\ \u0026amp;= I_2 cos ( \\beta x\u0026rsquo;) - j \\frac{ V_2 }{ Z_0 } sin( \\beta x\u0026rsquo;) \\\\ \u0026amp;= I^+(x\u0026rsquo;) - I^-(x\u0026rsquo;) \\\\ \u0026amp;= I_2 ^+ e^{j \\beta x\u0026rsquo;} ( 1 - \\Gamma_L e^{-j 2 \\beta x\u0026rsquo;}) \\end{aligned} \\end{gather} $$\nKnown Initial Ports $$ \\begin{gather} \\begin{aligned} A_1 \u0026amp;= \\frac{ V_1 + I_1 Z_0 }{ 2 } \\\\ A_2 \u0026amp;= \\frac{ V_1 - I_1 Z_0 }{ 2 } \\\\ V(x) \u0026amp;= V_1 cos( \\beta x) + j I_1 Z_0 sin ( \\beta x) \\\\ I(x) \u0026amp;= I_1 cos( \\beta x) - j \\frac{ V_1 }{ Z_0 } sin ( \\beta z) \\end{aligned} \\end{gather} $$\nBasic Parameters of Transmission Line !!! Characteristic Impedance 入射电压/入射电流\n$$ \\begin{gather} \\begin{aligned} Z_0 \u0026amp;= \\sqrt{ \\dfrac{ R + j \\omega L }{ G + j \\omega C } } \\\\ \u0026amp;\\approx \\sqrt{ \\dfrac{ L }{ C } } \\end{aligned} \\end{gather} $$\nReflect Coefficient 定义 反射电压/入射电压 $$ \\begin{gather} \\begin{aligned} \\Gamma(x\u0026rsquo;) \u0026amp;= \\frac{ V^-(x\u0026rsquo;) }{ V^+(x\u0026rsquo;) } = - \\frac{ I^-(x\u0026rsquo;) }{ I^+(x\u0026rsquo;) } \\\\ \u0026amp;= \\Gamma_L e^{-j 2 \\beta x\u0026rsquo;} \\\\ \u0026amp;= | \\Gamma_L | e^{ j (\\phi_L - 2 \\beta x\u0026rsquo;)} \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} \\Gamma_L \u0026amp;= \\frac{ V_2^- }{ V_2^+ } \\\\ \u0026amp;= \\frac{ V_2 - I_2 Z_0 }{ V_2 + I_2 Z_0 } \\\\ \u0026amp;= \\frac{ Z_L - Z_0 }{ Z_L + Z_0 } \\\\ \u0026amp;= | \\Gamma_L | e^{j \\phi L} \\end{aligned} \\end{gather} $$\n结论 无损耗均匀传输线上任一点反射波与入射波振幅之比为常数\n$\\Gamma(x\u0026rsquo;)$的周期为$\\dfrac{ \\lambda }{ 2 }$\nVSWR (Voltage Standing Wave Ratio) $$ \\begin{gather} \\begin{aligned} VSWR \u0026amp;= \\rho = \\frac{ |V_{max}| }{|V_{min}|} \\\\ \u0026amp;= \\frac{ 1 + | \\Gamma_L | }{ 1 - | \\Gamma_L | } \\\\ K \u0026amp;= \\frac{ 1 }{ \\rho } = \\frac{ |V_{min} |}{|V_{max}|} \\\\ \u0026amp;= \\frac{ 1 - | \\Gamma_L | }{ 1 + | \\Gamma_L | } \\end{aligned} \\end{gather} $$\nCategory Concept $|\\Gamma_L| = 0$ 行波状态，$Z_L = Z_0 = Z_{in}$, 阻抗匹配, $\\rho = 1, K = 1$, 各个点的电压/电流同幅同相 $|\\Gamma_L| = 1$ 驻波状态, $\\rho = \\infin, K = 0$ $0 \u0026lt;|\\Gamma_L| \u0026lt; 1$ 行驻波状态, $1 \u0026lt; \\rho \u0026lt; \\infin ,1 \u0026lt; K \u0026lt; \\infin$ Input Impedance 任意一点的电压$V(x)$与电流$I(x)$值之比\n$$ \\begin{gather} \\begin{aligned} Z_{in}(x\u0026rsquo;) \u0026amp;= \\frac{ V(x\u0026rsquo;) }{ I(x\u0026rsquo;) } \\\\ \u0026amp;= Z_0 \\dfrac{ Z_L + j Z_0 tan (\\beta x\u0026rsquo;) }{ Z_0 + j Z_L tan( \\beta x\u0026rsquo;)} \\\\ \u0026amp;= Z_0 \\frac{ 1 + \\Gamma(x\u0026rsquo;) }{ 1 - \\Gamma(x\u0026rsquo;) } \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} Z_L \u0026amp;= Z_0 \\frac{ 1 + \\Gamma_L }{1 0 \\Gamma_L } \\end{aligned} \\end{gather} $$\n当$Z_L = Z_0$时, $Z_{in} = Z_0$ Transmission Power $$ \\begin{gather} \\begin{aligned} P(x\u0026rsquo;) \u0026amp;= \\frac{ 1 }{ 2 } Re \\Big\\lbrace V(x) I^*(x) \\Big\\rbrace \\\\ \u0026amp;= \\frac{ |V^+(x\u0026rsquo;)|^2 }{2 Z_0} 2 Z_0 \\Big[ 1 - | \\Gamma(x\u0026rsquo;)|^2 \\Big] \\\\ \u0026amp;= \\frac{ | V^+(x\u0026rsquo;) |^2 }{ 2 Z_0 } - \\frac{ |V^-(x\u0026rsquo;)|^2 }{ 2 Z_0} \\\\ \u0026amp;= P^+(x\u0026rsquo;) - P^-(x\u0026rsquo;) \\end{aligned} \\end{gather} $$\n传输功率 = 入射功率 - 反射功率 Signal Power \u0026amp; On-Load Transmission Line Transmission Line With Load and Signal Source 4 Reflected Coefficient $$ \\begin{gather} \\begin{aligned} \\Gamma_{in} \u0026amp;= \\frac{ Z_{in} - Z_0 }{ Z_{in} + Z_0} = \\Gamma_L e^{-j 2 \\beta l} \\\\ \\Gamma_{S} \u0026amp;= \\frac{ Z_S - Z_0 }{ Z_S + Z_0 } \\\\ \\Gamma_{out} \u0026amp;= \\Gamma_S e^{-j 2 \\beta l} \\end{aligned} \\end{gather} $$\nTransmission Coefficient $$ \\begin{gather} \\begin{aligned} T_{in} \u0026amp;= 1 + \\Gamma_{in} = \\frac{ 2 Z_{in} }{ Z_{in} + Z_0 } \\\\ T_L \u0026amp;= 1 + \\Gamma_L = \\frac{ 2 Z_L }{ Z_L + Z_0 } \\end{aligned} \\end{gather} $$\nPower of Transmission Line $$ \\begin{gather} \\begin{aligned} V_{in} \u0026amp;= V_{in}^+ + V_{in}^- \\\\ \u0026amp;= V_{in}^+ ( 1 + \\Gamma_{in}) \\\\ \u0026amp;= V_S \\frac{ Z_S }{ Z_{in} + Z_S } \\\\ V_{in}^+ \u0026amp;= \\frac{ V_S }{ 2 } \\frac{ 1 - \\Gamma_S }{ 1 - \\Gamma_S \\Gamma_{in} } \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} P_{in} \u0026amp;= \\frac{ |V_{in}|^2 }{ 2 Z_0 } \\Big[ 1 - | \\Gamma_{in} |^2 \\Big] \\\\ \u0026amp;= \\frac{ |V_S|^2 }{ 8 Z_0 } \\frac{ | 1 - \\Gamma_S|^2 }{ |1 - \\Gamma_S \\Gamma_{in} |^2} ( 1 - | \\Gamma_{in}|^2 ) \\end{aligned} \\end{gather} $$\nConjuction Match \u0026amp; Losses Conjuction Match of Signal Source $$ \\begin{aligned} P_{in} \u0026amp;= \\frac{ 1 }{ 2 } R_{in} I \\cdot I^* \\\\ \u0026amp;= \\frac{ 1 }{ 2 } R_{in} \\frac{ V_S^2 }{ (R_S + R_{in})^2 + (X_{in} + X_S)^2 } \\\\ When \\ X_{in} \u0026amp;= - X_S \\\\ P_{in \\ max} \u0026amp;= \\frac{ R_{in} V_S^2 }{ 2 (R_S + R_{in})^2 } \\\\ \\frac{ \\partial P_{in} }{ \\partial R_{in} } \u0026amp;= \\frac{ V_S^2 }{ 2 } \\frac{ R_S - R_{in} }{ (R_S + R_{in})^3 } \\\\ hen \\ R_S \u0026amp;= R_{in} \\\\ P_{in} \u0026amp;= \\frac{ V_S^2 }{ 8 R_S } \\end{aligned} $$\n所以信号换功率输出最大的条件为$Z_{in} = Z_S^*$ Return Loss \u0026amp; Insertion Loss $$ \\begin{gather} \\begin{aligned} RL \u0026amp;= - 10 lg \\Big( \\frac{P_{in}^- }{ P_{in}^+ } \\Big) \\\\ \u0026amp;= -10 lg | \\Gamma_{in} |^2 \\\\ \u0026amp;= -20 lg | \\Gamma_{in} | dB \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} IL \u0026amp;= -10 lg \\Big( \\frac{ P_{in}^+ - P_{in}^- }{ P_{in}^+ } \\Big) \\\\ \u0026amp;= -10 lg ( 1 - |\\Gamma_{in}|^2 ) dB \\end{aligned} \\end{gather} $$\nMicrostrip 分类 名称 概念 (a) 全部填充空气 (b) 全部填充介质r (c) 真实物理结构 (d) 全部填充等效介质re 介质公式 $$ \\begin{gather} \\begin{aligned} \\varepsilon_{re} \u0026amp;= \\begin{cases} \\dfrac{ \\varepsilon_r + 1 }{ 2 } \\dfrac{ \\varepsilon_r - 1 }{ 2 } \\Big[ (2 + \\dfrac{ 12 }{ W })^{-1/2} + 0.041 (1 - \\dfrac{ W }{ h })^2 \\Big] \u0026amp; W \\le h \\\\ \\dfrac{ \\varepsilon_r + 1 }{ 2 } \\dfrac{ \\varepsilon_r -1 }{ 2 } ( 1 + 12 \\dfrac{ h }{ W })^{-1/2} \u0026amp; W \\ge h \\end{cases} \\\\ Z_0 \u0026amp;= \\begin{cases} \\dfrac{ 60 }{ \\sqrt{ \\varepsilon_{re} } } ln \\Big( \\dfrac{ 8h }{ W } + \\dfrac{ W }{ 4h } \\Big) \u0026amp; W \\le h \\\\ \\dfrac{ 120 \\pi }{ \\sqrt{ \\varepsilon_{re} } \\Big[ \\dfrac{ W }{ h } + 1.393 + 0.667 ln \\Big( \\dfrac{ W }{ h } + 1.444 \\Big) \\Big]} \u0026amp; W \\ge h \\end{cases} \\\\ \\frac{ W}{ h } \u0026amp;= \\begin{cases} \\dfrac{ 8 e^{A} }{ e^{2A} - 2} \u0026amp; \\dfrac{ W }{ h} \\le 2 \\\\ \\dfrac{ 2 }{ \\pi } \\Big\\lbrace B - 1 -ln (2B -1) + \\dfrac{ \\varepsilon_r -1 }{ 2 \\varepsilon_r } \\Big[ ln(B - 1) + 0.39 - \\dfrac{ 0.61 }{ \\varepsilon_r } \\Big]\\Big\\rbrace \u0026amp; \\dfrac{ W }{ h } \\ge 2 \\end{cases} \\\\ A \u0026amp;= \\frac{ Z_0 }{ 60 } \\sqrt{ \\frac{ \\varepsilon_r + 1 }{ 2 } } + \\frac{ \\varepsilon_r - 1 }{ \\varepsilon_r + 1 } \\Big( 0.23 + \\frac{ 0.11 }{ \\varepsilon_r } \\Big) \\\\ B \u0026amp;= \\frac{ 377 \\pi }{ 2 Z_0 \\sqrt{ \\varepsilon_r } } \\end{aligned} \\end{gather} $$\nAppendix 部分微分方程解法 Triogonometric Function Formulas $$ \\begin{gather} \\begin{aligned} tanh(x) \u0026amp;= \\frac{ e^x - e^{-x} }{ e^x + e^{-x}} \\\\ atans2(x) \u0026amp;= \\begin{cases} tan^{-1}( \\dfrac{ y }{ x }) \u0026amp; x \u0026gt; 0 \\\\ tan^{-1}( \\dfrac{ y }{ x }) + \\pi \u0026amp; x \u0026lt; 0, y \\ge 0 \\\\ tan^{-1}( \\dfrac{ y }{ x }) - \\pi \u0026amp; x \u0026lt; 0, y \u0026lt; 0 \\\\ Error \u0026amp; x = 0, y =0 \\end{cases} \\end{aligned} \\end{gather} $$\nVoltage Wave \u0026amp; Standing Wave States 驻波由反射波产生，不传递能量\n行波可以传递能量\n本篇博客的一些符号定义 $1,2$表示始端，$+,-$表示入射和反射 ","date":"2023-11-29T10:34:14+08:00","permalink":"https://downeyflyfan.com/p/1.-transmission-line/","title":"1. Transmission Line"},{"content":"Laplace Transform Definition $$ \\begin{gather} \\begin{aligned} X(s) \u0026amp;= \\int_{ - \\infin }^{ \\infin } x(t) e^{- s t} dt \\\\ s \u0026amp;= \\alpha + j \\omega \\end{aligned} \\end{gather} $$\nRelations with Fourier Transform 当$\\alpha = 0$时, $X(s)$就是$x(t)$的傅立叶变换 $$ \\begin{gather} \\begin{aligned} X(j \\omega) \u0026amp;= \\int_{ - \\infin }^{ \\infin } x(t) e^{-j \\omega t} dt \\end{aligned} \\end{gather} $$\n当$\\alpha \\neq 0$时, $X(s)$是$x(t)$乘以实信号$e^{ \\alpha t}$之后的傅立叶变换 $$ \\begin{gather} \\begin{aligned} X(s) \u0026amp;= \\int_{ - \\infin }^{ \\infin } [x(t) e^{- \\alpha t}] e^{-j \\omega t} \\end{aligned} \\end{gather} $$\nROC (Region of Convergence) Rational Laplace Transform ROC是由使得$X(s)$收敛的$s$组成的\n只要$x(t)$是复指数信号的线性组合，$X(s)$就是有理的, $N(s)$和$D(s)$也可以用它们的根来表示 $$ \\begin{gather} \\begin{aligned} X(s) \u0026amp;= \\frac{ N(s) }{ D(s) } \\end{aligned} \\end{gather} $$\nProperties $X(s)$收敛的条件是 $$ \\begin{gather} \\begin{aligned} |\\int_{ - \\infin }^{ \\infin } x(t) e^{- \\alpha t} dt| \u0026lt; \\infin \\end{aligned} \\end{gather} $$\nROC由$\\alpha$而不是$\\omega$决定 有理拉普拉斯变换的收敛域没有极点， 边界由极点定义(没有极点就没有边界)\nAppendix Conjugation Formulas $$ \\begin{gather} \\begin{aligned} (AB)^* \u0026amp;= A^B^ \\\\ (A^B)^ \u0026amp;= AB^* \\end{aligned} \\end{gather} $$\nFinite Duration $f(t)$在$[0,T]$上有值，其他区域为$0$\n收敛函数的收敛域必包含$j \\omega$\nSigularity Function \u0026amp; Laplace Transform $$ \\begin{gather} \\begin{aligned} u_k(t) \u0026amp;\\overset{ \\mathcal{L} }{ \\longleftrightarrow } s^k \\\\ u_0(t) \u0026amp;= \\delta (t) \\overset{ \\mathcal{L} }{ \\longleftrightarrow } 1 = s^0 \\\\ u_{-1}(t) \u0026amp;= u(t) \\overset{ \\mathcal{L} }{ \\longleftrightarrow } s^{-1} = \\frac{ 1 }{ s } \\end{aligned} \\end{gather} $$\n","date":"2023-11-27T10:22:11+08:00","permalink":"https://downeyflyfan.com/p/9-10.-laplace-z-transform/","title":"9-10. Laplace \u0026 Z Transform"},{"content":"1st-Order Filters RC/CR (LPF/HPF) $$ \\begin{gather} \\begin{aligned} \\omega_c \u0026amp;= \\frac{ 1 }{ RC } \\end{aligned} \\end{gather} $$\n2nd-Order LPF ","date":"2023-11-25T14:25:03+08:00","permalink":"https://downeyflyfan.com/p/a2-filter/","title":"A2 Filter"},{"content":"Nyquist Sampling Theorem Impulse Train Sampling $$ \\begin{gather} \\begin{aligned} p(t) \u0026amp;= \\sum_{ n = - \\infin }^{ \\infin } \\delta (t - n T) \\\\ x_p(t) \u0026amp;= x(t) p(t) \\\\ \u0026amp;= \\sum_{ n = - \\infin }^{ \\infin } x(nT) \\delta (t - n T) \\\\ X_P(j \\omega) \u0026amp;= \\frac{ 1 }{ 2 \\pi } \\int_{ - \\infin }^{ \\infin } X( j \\omega) P ( j ( \\omega - \\theta)) d \\theta \\\\ \u0026amp;= \\frac{ 1 }{ T } \\sum_{ n = - \\infin }^{ \\infin } X(j ( \\omega - k \\omega_s)) \\\\ \\omega_s \u0026amp;= \\frac{ 2 \\pi }{ T} \\end{aligned} \\end{gather} $$\nNyquist Sampling Theorem 如果$X(j \\omega ) = 0, \\omega \u0026gt; | \\omega_M |$, 那么对于$\\omega_s \u0026gt; 2 | \\omega_M|$, $x(t)$ 就唯一的由其样本$x(nT)$ 所确定, $2 \\omega_M$ 被称作Nyquist Rate\nInterpolation Zero-Order Hold 下次采样之前保持住上次采样结果\nLinear Interpolation (One-Order Hold) 将相邻采样点用直线连接\n对于LPF $$ \\begin{gather} \\begin{aligned} x_r(t) \u0026amp;= \\sum_{ n = - \\infin }^{ \\infin } x(n T) \\delta (t - nT) \\\\ \u0026amp;= \\sum_{ n = - \\infin }^{ \\infin } x(nT) \\frac{ \\omega_c T }{ \\pi } \\frac{ sin ( \\omega_c (t - nT)) }{ \\omega_c (t - n T)} \\end{aligned} \\end{gather} $$\nHigh-Order Hold $\\omega_c \u0026lt; 2\\omega_M$, 信号重叠，发生 Under-Sampling\nReconstruction Filter $$ \\begin{gather} \\begin{aligned} h(t) \u0026amp;= h_o(t) * h_r(t) \\overset{ FT }{ \\longleftrightarrow } H_o(j \\omega) H_r(j \\omega) = H(j \\omega) \\end{aligned} \\end{gather} $$\nD-T Processs for C-T Signals Method 间隔从$T$变成$n$ $$ \\begin{gather} \\begin{aligned} x_d[n] \u0026amp;= x_c(t)* p(nT) \\\\ \u0026amp;= x_c(nT) \\end{aligned} \\end{gather} $$\n几个傅立叶变换的关系 $$ \\begin{aligned} x_c(t) \u0026amp;\\overset{ FT }{ \\longleftrightarrow } X_c(j \\omega) \\\\ y_c(t) \u0026amp;\\overset{ FT }{ \\longleftrightarrow } Y_c(j \\omega) \\\\ x_d[n] \u0026amp;\\overset{ FT }{ \\longleftrightarrow } X_d(e^{j \\Omega}) \\\\ y_d[n] \u0026amp;\\overset{ FT }{ \\longleftrightarrow } Y_d(e^{j \\Omega}) \\end{aligned} $$\n$$ \\begin{gather} \\begin{aligned} x_p(t) \u0026amp;= \\sum_{ n = - \\infin }^{ \\infin } x_c(nT) \\delta (t - nT) \\overset{ FT }{ \\longleftrightarrow } X_p (j \\omega)= \\sum_{ n = - \\infin }^{ \\infin } x_c(nT) e^{- j \\omega nT} \\\\ X_d(e^{j \\Omega}) \u0026amp;= \\sum_{ n = - \\infin }^{ \\infin } x_d[n] e^{- j \\Omega n} = \\sum_{ - \\infin }^{ \\infin } x_c(n T) e^{-j \\Omega n} \\\\ \u0026amp;= X_p(j \\frac{ \\Omega }{ T }) \\\\ \u0026amp;= \\frac{ 1 }{ T } \\sum_{ k = - \\infin }^{ \\infin } X_c(j \\frac{ \\Omega - 2 \\pi k }{ T }) \\end{aligned} \\end{gather} $$\nFiltering Complex Expotential \u0026amp; Sinusoidal Modulation Complex Expotential Modulation Modulation \u0026amp; Fourier Transfer $$ \\begin{gather} \\begin{aligned} c(t) \u0026amp;= e^{j( \\omega_c t + \\theta_c)} \\\\ y(t) \u0026amp;= x(t) c(t) \\end{aligned} \\end{gather} $$\n$$ \\begin{gather} \\begin{aligned} Y(j \\omega) \u0026amp;= \\frac{ 1 }{ 2\\pi } \\int_{ - \\infin }^{ \\infin } X(j \\theta) C(j( \\theta - \\omega)) d \\theta \\\\ C(j \\omega) \u0026amp;= 2\\pi \\delta ( \\omega - \\omega_c) \\\\ Y(j \\omega) \u0026amp;= X(j \\omega - j \\omega_c) \\end{aligned} \\end{gather} $$\nModulation \u0026amp; Demodulation 如果 $\\theta_c = 0$ $$ \\begin{gather} \\begin{aligned} y(t) \u0026amp;= x(t) e^{j \\omega_c t} \\\\ x(t) \u0026amp;= y(t) e^{-j \\omega_c t} \\end{aligned} \\end{gather} $$\nSinusoidal Modulation $$ \\begin{gather} \\begin{aligned} c(t) \u0026amp;= cos( \\omega_c t + \\theta_c) \\\\ c(j \\omega) \u0026amp;= \\pi [ \\delta ( \\omega - \\omega_c) + \\delta ( \\omega + \\omega_c)] \\\\ Y(j \\omega) \u0026amp;= \\frac{ 1 }{ 2 } [ X(j \\omega - j \\omega_c) + X(j \\omega + j \\omega_c)] \\\\ \\end{aligned} \\end{gather} $$\nSinusoidal Amplitude Demodulation Sync Demodulation In Phase $$ \\begin{gather} \\begin{aligned} y(t) \u0026amp;= x(t) cos( \\omega_c t) \\\\ w(t) \u0026amp;= y(t) cos(- \\omega_c t) \\\\ \u0026amp;= x(t) cos^2( \\omega_c t) \\\\ \u0026amp;= \\frac{ 1 }{ 2 } x(t) + \\frac{ 1 }{ 2 } x(t)cos(2 \\omega_c t) \\end{aligned} \\end{gather} $$\nOut of Phase For Complex Signals $$ \\begin{gather} \\begin{aligned} y(t) \u0026amp;= e^{j ( \\omega_c t+ \\theta_c)} x(t) \\\\ w(t) \u0026amp;= e^{-j ( \\omega_c t + \\phi_c)} y(t) \\\\ \u0026amp;= e^{j ( \\theta_c - \\phi_c)} x(t) \\end{aligned} \\end{gather} $$\nFor Sinusoidal Signals $$ \\begin{gather} \\begin{aligned} w(t) \u0026amp;= cos( \\omega_c t + \\theta_c) cos( \\omega_c t + \\phi_c) x(t) \\\\ \u0026amp;= \\frac{ 1 }{ 2 } cos( \\theta_c - \\phi_c) x(t) + \\frac{ 1 }{2 } cos( 2 \\omega_c t + \\phi_c + \\theta_c) \\end{aligned} \\end{gather} $$\nAsync $x(t)$总是正的 $$ \\begin{gather} \\begin{aligned} y(t) \u0026amp;= x(t) + A \\\\ |x(t)| \u0026amp;\\le K \\\\ A \u0026amp;\\ge K \\\\ m \u0026amp;= \\frac{ K }{A} \\end{aligned} \\end{gather} $$\n$m$越大，信号质量越好 ","date":"2023-11-08T11:10:57+08:00","permalink":"https://downeyflyfan.com/p/7-8.-sampling-communication-system/","title":"7-8. Sampling \u0026 Communication System"},{"content":"Layers in TSMC65nm Metal Structure Purpose Purpose 解释 Ivs 模拟芯片当前区域的当前消耗 Pin 分析引脚处的电压 drw(drawing) 绘制布局的物理层 dm 两个布图形状之间的最小距离 BSW BackSide Windowing BSD Backside Deposition Landscape UI Category Concept AV ALL Visable NV None Visable AS All Select NS None Select 版图图层和物理图层的关系 Category Concept PMOS 必须画一个NWell $N^+/ P^+$ Active + n/p select (选择性参杂) Gate-Oxide 不显示 Poly 在Gate-Oxid上方, 在有源区上方的Poly才是栅极 介质层(Contact) 金属层通过contact和晶体管连接才形成相应的极 Metal 与Source、GND连接的线 Components in TSMC65nm Resistance Category Concept rm 标准电阻 rm\u0026hellip;a 用于高密度互连的电阻 rm\u0026hellip;z 大电阻 Passive Components On-Chip Capacitor Introduction It stores energy in electric field\n名称 概念 A Overlapping Area d Separation electric constant $\\varepsilon_0 = 8.854 \\times 106{-12} F m^{-1}$ dielectric constant $\\varepsilon_r$ $$ \\begin{gather} \\begin{aligned} C \u0026amp;= \\varepsilon_0 \\varepsilon_r \\frac{ A }{ d } \\end{aligned} \\end{gather} $$\nCategory MiM (Metal-Insulator-Metal) 加上Contact, 目的是减小$d$, 增加电容大小 MoM (Metal-Oxide-Metal) 通过给不同的金属加上正负电，产生电容\n氧化物可能附着在上层/下层金属，也有可能作为一个独立的介电层\n不容易建模和预测\nPiP (Poly-Insulator-Poly) MOS (MOSFET Capacitor) $C_{ox} - V_{dc}$ Varactor On-Chip Inductor Basic Inductor $$ \\begin{gather} \\begin{aligned} L \u0026amp;= \\mu_0 \\frac{ N^2 A }{ l } \\\\ \\mu_0 \u0026amp;= 4\\pi \\times 10^{-7} \\end{aligned} \\end{gather} $$\nOn-Chip Inductor Ideal Inductor is Circular Characteristic ","date":"2023-11-08T09:30:33+08:00","permalink":"https://downeyflyfan.com/p/a1-layout/","title":"A1 Layout"},{"content":"Introduction Characteristic of Feedback Circuit Gain Sensitivity $$ \\begin{equation} \\frac{ Y }{ X } = \\begin{cases} \\dfrac{ A }{ 1 + A \\beta } \\\\ \\dfrac{ 1 }{ \\beta } \u0026amp; A \\beta \\gg 1 \\end{cases} \\end{equation} $$\n$A \\beta$ Loop gain $A$ 越大，电路就越准确 Band Width $$ \\begin{aligned} A_v \u0026amp;= \\frac{ A(s) }{ 1 + A(s) \\beta } \\\\ \u0026amp;= \\frac{ \\dfrac{ A_0 }{ 1 + A_0 \\beta } }{ 1 + \\dfrac{ s }{ (1 + A \\beta) \\omega_0} } \\end{aligned} $$\n$3dB$带宽 增加了$A \\beta$ 增益 减小 Non-Linear Reduction Types of Amplifiers Feedback Structure V-V Feedback Circuit Impedence Output Impedence $$ \\begin{aligned} V_F \u0026amp;= \\beta V_X \\\\ V_e \u0026amp;= - \\beta V_X \\\\ V_M \u0026amp;= - A_0 \\beta V_X \\\\ R_{out} \u0026amp;= \\frac{ V_X - V_M }{ I_X } \\end{aligned} $$\n$$ \\begin{equation} \\frac{ V_X }{ I_X } = \\frac{ R_{out} }{ 1 + A \\beta} \\end{equation} $$\nInput Impedence $$ \\begin{aligned} V_e \u0026amp;= I_X R_{in} \\\\ V_F \u0026amp;= A_0 \\beta V_e \\\\ V_e \u0026amp;= V_X - V_F \\end{aligned} $$\n$$ \\begin{equation} \\frac{ V_X }{ I_X } = (1 + A_0 \\beta) R_{in} \\end{equation} $$\nOther Feedback Strcuture \u0026amp; Summary Types $V_{in}$ $V_{out}$ $V-V$(Voltage) $( 1 + A \\beta) R_{in}$ $\\dfrac{ R_{out}}{ 1 + A \\beta }$ $V-I$(Transconductance) $( 1 + A \\beta) R_{in}$ $( 1 + A \\beta) R_{out}$ $I-V$(Transresistance) $\\dfrac{ R_{in}}{ 1 + A \\beta }$ $\\dfrac{ R_{out}}{ 1 + A \\beta }$ $I-I$(Current) $\\dfrac{ R_{in}}{ 1 + A \\beta }$ $( 1 + A \\beta) R_{out}$ Feedback Influecing Noise $$ \\begin{aligned} V_{out} \u0026amp;= (V_{in} - \\beta V_{out} + V_n) A \\\\ \\therefore V_{out} \u0026amp;= \\frac{ A }{ 1 + A \\beta } ( V_{in} + V_n) \\end{aligned} $$\n","date":"2023-10-16T14:40:31+08:00","permalink":"https://downeyflyfan.com/p/8.-feedback/","title":"8. Feedback"},{"content":"MOS Structuroe PMOS Second-Order Effect Body Effect $V_B \\downarrow, Q_d \\uparrow \\Longrightarrow V_{TH} \\uparrow$ Channal Length Modulation $$ \\begin{equation} r_o = \\frac{ 1 }{ \\lambda I_D } \\end{equation} $$\nSubthreshold Conduction $$ \\begin{equation} \\begin{aligned} g_{mb} \u0026amp;= \\frac{ \\partial I_D }{ \\partial V_{SB} } \\\\ \u0026amp;= k_n V_{OV} ( - \\frac{ \\partial V_{TH} }{ V_{BS} }) \\\\ \u0026amp;= \\eta g_m \\end{aligned} \\end{equation} $$\nMOS Capacitances ","date":"2023-10-15T20:21:21+08:00","permalink":"https://downeyflyfan.com/p/1-2.basic_device/","title":"1-2.Basic_Device"},{"content":"Representation of Aperiodic Signals 傅立叶级数求解 假设$\\widehat {x}{ ~ } (t)$ 代表$x(t)$ 在一个周期内的函数 $$ \\begin{aligned} \\widehat { a_k }{~} \u0026amp;= \\frac{ 1 }{ T } \\int_{ - T/2 }^{ T / 2} x(t) e^{-jk \\omega t} dt \\end{aligned} $$\n当$T \\longrightarrow \\infin$，信号其实就是非周期信号 $$ \\begin{aligned} a_k \u0026amp;= \\widehat { a_k }{~} = \\frac{ 1 }{ T } \\int_{- \\infin }^{ \\infin } x(t) e^{-jk \\omega t}dt \\end{aligned} $$\nFourier Transform of Aperiodic Signals FT $$ \\begin{gather} \\begin{aligned} x(t) \\overset{ F }{ \\longleftrightarrow }X(j \\omega) \u0026amp;= T a_k = \\int_{ - \\infin }^{ \\infin } x(t) e^{-j \\omega t} dt \\\\ \u0026amp;= \\sum_{ n = - \\infin }^{ \\infin } x[n] e^{-j \\omega n} \\\\ \u0026amp;= |H(j \\omega)| e^{ j\\angle H(j \\omega)} \\end{aligned} \\end{gather} $$\nFT of Aperiodic Signals $$ \\begin{aligned} a_k \u0026amp;= \\frac{ 1 }{ T } X(j k \\omega_0) \\\\ \\therefore \\widehat { x(t) }{ ~ } \u0026amp;= \\sum_{ k }^{ } a_k e^{jk \\omega t} \\\\ \u0026amp;= \\frac{ 1 }{ 2\\pi } \\sum_{ k = - \\infin }^{ \\infin } X(j \\omega_0 t) e^{jk \\omega_0 t} \\omega_0 \\end{aligned} $$\n$$ \\begin{gather} \\begin{aligned} x(t) \u0026amp;= \\frac{ 1 }{ 2 \\pi } \\int_{ - \\infin }^{ \\infin } X(j \\omega) e^{j \\omega t} d \\omega \\\\ x[n] \u0026amp;= \\frac{ 1 }{ 2\\pi } \\int_{ - \\infin }^{ \\infin } X(j \\omega) e^{j \\omega n} d \\omega \\end{aligned} \\end{gather} $$\n存在FT的条件 - Dirichlet Conditions C-T 反例: $x(t) = e^t u(t)$ 没有FT D-T 以下条件满足其一即可 $$ \\begin{gather} \\begin{aligned} \\int_{ - \\infin }^{ \\infin } |x(t)| dt \\le \\infin \\\\ \\int_{ - \\infin }^{ \\infin } |x(t)|^2 dt \\le \\infin \\end{aligned} \\end{gather} $$\nProperties of FT C-T If $x(t)$ is Real $$ \\begin{gather} \\begin{aligned} x(t) \u0026amp;= x_e(t) + x_o(t) \\\\ X(j \\omega) \u0026amp;= X_R(j \\omega) + j X_I ( j \\omega) \\\\ x_e(t) \u0026amp;\\overset{ F }{ \\longleftrightarrow } X_R(j \\omega) = X_e(j \\omega) \\\\ x_o(t) \u0026amp;\\overset{ F }{ \\longleftrightarrow } X_I(j \\omega) = X_o(j \\omega) \\end{aligned} \\end{gather} $$\nFT的反向求法 $$ \\begin{aligned} f(t) = 1 \u0026amp;\\overset{ F }{ \\longleftrightarrow } X(j \\omega) = 2 \\pi \\delta (\\omega) \\\\ FT^{-1} [ 2 \\pi \\delta ( \\omega)] \u0026amp;= \\frac{ 1 }{ 2 \\pi }\\int_{ - \\infin }^{ \\infin } X(j \\omega) e^{j \\omega t} d \\omega = 1 \\end{aligned} $$\n$$ \\begin{gather} \\begin{aligned} \\delta ( \\omega) \u0026amp;= \\frac{ 1 }{ 2 \\pi } \\int_{ - \\infin }^{ \\infin } e^{-j \\omega t} d \\omega \\end{aligned} \\end{gather} $$\n其他性质 D-T Periodicity $$ \\begin{equation} X[e^{j (\\omega + 2 \\pi)}] = X(e^{j \\omega}) \\end{equation} $$\nDuality $X(e^{j \\omega}) \\longleftrightarrow x[n]$\nSinc \u0026amp; Sa Functions $$ \\begin{gathered} \\begin{align} sinc( \\theta) \u0026amp;= \\frac{ sin(\\pi \\theta) }{ \\theta} \\overset{ F }{ \\longleftrightarrow } X(j \\omega) = 2T_1 sinc( \\frac{ \\omega T_1 }{ \\pi }) \\\\ sa( \\phi) \u0026amp;= \\frac{ sin( \\phi) }{ \\phi} \\overset{ F }{ \\longleftrightarrow } X(j \\omega) = 2 T_1 sa( \\omega T_1) \\end{align} \\end{gathered} $$\nFT of Periodic Signals Definition 假设$X(j \\omega) = 2 \\pi \\delta ( \\omega - \\omega_0)$ $$ \\begin{aligned} x(t) \u0026amp;= \\frac{ 1 }{ 2 \\pi }\\int_{ - \\infin }^{ \\infin } X(j \\omega) e^{j \\omega t} \\\\ \u0026amp;= e^{ j \\omega_0 t} \\end{aligned} $$\n再假设 $X(j \\omega) = \\sum_{ k = -\\infin }^{ \\infin } 2 \\pi a_k \\delta ( \\omega - k \\omega_0)$ $$ \\begin{aligned} x(t) \u0026amp;= \\int_{ - \\infin }^{ \\infin } a_k e^{j k \\omega t} \\end{aligned} $$\n因此，周期信号的傅立叶转换为 $$ \\begin{gather} \\begin{aligned} X(j \\omega) \u0026amp;= \\sum_{ k = - \\infin }^{ \\infin } 2 \\pi a_k \\delta ( \\omega - k \\omega_0) \\\\ X(e^{j \\omega}) \u0026amp;= \\sum_{ k= - \\infin }^{ \\infin } 2 \\pi a_k \\delta ( \\omega - k \\frac{ 2 \\pi }{ N }) \\end{aligned} \\end{gather} $$\nFundamental FT \u0026amp; FS System Characterized by LCCDE Frequency Response $$ \\begin{aligned} \\sum_{ k = 0 }^{ K} a_k \\frac{ d^ky}{ dt^k} \u0026amp;= \\sum_{ k = 0}^{ M} b_k \\frac{ d^kx}{ dt^k} \\\\ \\sum_{ k = 0 }^{K} a_k \\cdot F \\lbrace \\frac{ d^k y }{ dt^k} \\rbrace \u0026amp;= \\sum_{ k =0 }^{ M} b_k \\cdot F \\lbrace \\frac{ d^k x }{ dt^k } \\rbrace \\\\ Y(j \\omega) \\sum_{ k = 0 }^{K} a_k (j \\omega)^k \u0026amp;=X(j \\omega) \\sum_{ k = 0 }^{ M} b_k (j \\omega)^k \\end{aligned} $$\n$$ \\begin{equation} H(j \\omega) = \\frac{ Y(j \\omega) }{ X(j \\omega) } = \\frac{ \\sum_{ k = 0 }^{ M}b_k ( j \\omega)^k }{\\sum_{ k = 0 }^{ K }a_k ( j \\omega)^k} \\end{equation} $$\nTime/Frequency Domain Characteristic Magnitude, Phase, Logarithm, Bode Plots $$ \\begin{gather} \\begin{aligned} Y(j \\omega) \u0026amp;= |X(j \\omega) H(j \\omega)| \\\\ \\angle Y(j \\omega) \u0026amp;= \\angle X(j \\omega) + \\angle H(j \\omega) \\\\ lg|Y(j \\omega)| \u0026amp;= lg|H(j \\omega)| + lg|X(j \\omega)| \\end{aligned} \\end{gather} $$\n通常，Phase包含更多的信息\nBode Plots: $20 lg \\Big[ H(j \\omega)| \\Big] - \\omega$\nPhase Shifting \u0026amp; Group Delay 名称 概念 Linear Phase $\\angle H(j \\omega) = k \\omega$ Non-Linear Phase $\\angle H(j \\omega) \\approx- \\phi - \\omega \\alpha$ $$ \\begin{gather} \\begin{aligned} \\angle H(j \\omega) \u0026amp;= \\omega \\cdot t \\\\ \\tau( \\omega) \u0026amp;= - \\frac{ d \\Big\\lbrace \\angle H(j \\omega) \\Big\\rbrace}{ d \\omega } \\end{aligned} \\end{gather} $$\nFilters LPF Introduction $$ \\begin{gather} \\begin{aligned} H(j \\omega) \u0026amp;= \\begin{cases} 1 \u0026amp; \\omega \u0026lt; | \\omega_0 | \\\\ 0 \u0026amp; \\omega \u0026gt; | \\omega_0 | \\end{cases} \\\\ h(t) \u0026amp;= \\frac{ sin( \\omega_c t) }{ \\pi t} \\end{aligned} \\end{gather} $$\n$Casulaity \\longleftrightarrow Real-Time$ Butterworth \u0026amp; Elliptic LPW Appendix Partial-Fraction Expansions Case I $$ \\begin{gather} \\begin{aligned} Y(j \\omega) \u0026amp;= \\frac{ A }{ a + j \\omega } + \\frac{ B }{b + j \\omega} \\\\ \u0026amp;= \\frac{ C }{ (a+ j \\omega) ( b + j \\omega)} \\end{aligned} \\end{gather} $$\nCase II $$ \\begin{gather} \\begin{aligned} G(v) \u0026amp;= \\frac{ A_1 }{ v -p_1 }+ \\frac{ A_2 }{v -p_2} + \\frac{ A_3 }{ v - p_3 } = \\frac{ b_2 v^2 + b_1v + b_0 }{ (v-p_1)(v-p_2)(v-p_3) } \\\\ A_1 \u0026amp;= \\frac{ b^2 v + b_1 v + b_0 }{ (p_1 - p_2)(p_1 - p_3) } \\end{aligned} \\end{gather} $$\nCase III $$ \\begin{gather} \\begin{aligned} G(v) \u0026amp;= \\frac{ A_1 }{ v - p_1 } + \\frac{ A_2 }{ (v - p_1)^2} + \\frac{ A_3 }{ v - p_2} = \\frac{ b_2 v^2 + b_1 v + b_0}{ (v-p_1)^2(v-p_2) }\\\\ A_1 \u0026amp;= \\frac{ d }{ dv } \\Big\\lbrace G(v) \\cdot (v-p_1)^2 \\Big\\rbrace , v = p_1\\\\ A_2 \u0026amp;= G(v) \\cdot (v-p_1)^2 , v = p_1\\\\ A_3 \u0026amp;= G(v) \\cdot (v-p_2), v = p_2 \\end{aligned} \\end{gather} $$\nPlural Modulus $$ \\begin{gather} \\begin{aligned} |\\frac{ A }{ B + jC }| \u0026amp;= \\frac{ |A| }{ \\sqrt{ B^2 + C^2} } \\\\ |\\frac{ 1 }{ 1 + a \\cdot e^{j \\omega} }| \u0026amp;= \\frac{ 1 }{ 1 + a } \\end{aligned} \\end{gather} $$\n","date":"2023-10-08T15:50:17+08:00","permalink":"https://downeyflyfan.com/p/4-6.-ft-time/frequency-domain-characteristic/","title":"4-6. FT, Time/Frequency Domain Characteristic"},{"content":"震荡的条件 (Barkhausen\u0026rsquo;s criteria) 一个系统在$\\omega_0$ 附近Oscillate的充分条件是 $$ \\begin{align} \\angle H(s) \u0026amp;= 180 ^\\circ \\\\ |H(s)| \u0026amp;\\ge 0 \\end{align} $$\nRing Oscillators One-Pole \u0026amp; Two-Pole Feedback System One-Pole 当$\\omega_0 \\longrightarrow \\infin$，Pole会产生$90 ^\\circ$的Phase Shift\nCS Stage 产生$180 ^\\circ$的Phase Shift\n故$\\angle H(s) = 270 ^\\circ$，无法Oscillate\nTwo-Pole $$ \\begin{equation} \\begin{aligned} V_E \u0026amp;= \\frac{R_{on}}{R_{on} + R_D} V_{DD} \\\\ R_{on} \u0026amp;= \\frac{V_E}{I_D} \\\\ I_D \u0026amp;= \\frac{1}{2} k_n (V_E - V_t)^2 \\\\ \\therefore V_E \u0026amp;= \\frac{V_{DD}}{1 + k_n R_D (V_{in} - V_t)} \\end{aligned} \\end{equation} $$\n分析电路 2 CS Stage $\\omega_0 \\longrightarrow 0 \\Longrightarrow \\angle H(s) = 360 ^\\circ$\n根据Equation (3), $V_E \\uparrow \\Longrightarrow V_F \\downarrow \\Longrightarrow V_E \\uparrow \\Longrightarrow M_1 \\ Closed$\n电路增益曲线 Three-Stage Ring Oscillator Oscillating Frequency and Transfer Function $$ \\begin{aligned} \\angle H(s) \u0026amp;= 180 ^\\circ \\\\ \\therefore \\angle H(s){each \\ stage} \u0026amp;= 60 ^\\circ \\\\ \\therefore tan^{-1}\\frac{\\omega{osc}}{\\omega_0} \u0026amp;= 60 ^\\circ \\\\ \\omega_{osc} \u0026amp;= \\sqrt{3} \\omega_0 \\end{aligned} $$\n$$ \\begin{equation} H(s) = -\\frac{A_0^3}{(1 + \\dfrac{s}{\\omega_0})^3} \\end{equation} $$\nLoop Gain = 1 $$ \\begin{aligned} |H(s)| \u0026amp;= 0 \\\\ A_0 \u0026amp;= 2 \\end{aligned} $$\nGain $$ \\begin{align} A_v \u0026amp;= \\frac{H(s)}{1 - H(s)} \\\\ \u0026amp;= - \\frac{A_0^3}{A_0^3 + (1+s/\\omega_0)^3} \\end{align} $$\nTime Delay $$ \\begin{align}\n\\end{align} $$\n","date":"2023-09-20T16:36:38+08:00","permalink":"https://downeyflyfan.com/p/14.-oscillators/","title":"14. Oscillators"},{"content":"单词/词组 连接词 开头 One of the \u0026hellip; 中间(顺承) In addition\nAdditionally\nFurthermore\nBesides\nWhat\u0026rsquo;s more\n\u0026hellip; is also \u0026hellip;\nMoreover\n中间(转折) but\nHowever\nstill\n中间(因果) The aim was to\nAs a result\nIn this way\nThus\nThereby\n引用 Research conducted by \u0026hellip; states/discovers that\nIt was found/discovered that\n就\u0026hellip;而言 In terms of\nWith regard to\nIn respect of\nWith reference to\nAs to\nIn relation to\nWhen it comes to\n结束语 Overall\nGenerally (Speaking)\nIn summary\nOn the whole\n形容词 好与坏 好 advantage\nbenefits\npositive\nuseful characteristic of\n坏 disadvantage\nnegative\ndrawback\nflaw\n多 quite a lot\nA large quantity (number) of\nnumerous\ncountless\nA multitude of\n表示程度的 显著的 大幅度 sharp\nrapid\ndramatic\n稳步的 steady\ngradual\nconsistent\n轻微的 slight\nminimal\nmarginal\n重要 vital\nsignificant\nimportant\ncrucial\nessential\n几乎 大概 nearly\nalmost\nabout\naround\nroughly\napproximately\n原因与结果 原因 As\nResult from\nSince\nDue to\nOn account of\nOwing to\n结果 result in\nconsequently\nCredit to\nattribute to\nlead to\nbring about\n动词 发光 illuminate\nglow\nlighten\n摔 倒 掉 fall(down/into/to)\ndrop\n能够 could/can\nbe able to\nis capable to/of\n做得好 be proficient in\nbe adept at\nbe good at\n增和降 增(ICRGR) increase\nrise to\nreach to\ngrow\nclimb to\n降(fddddr) decrease\ndrop\ndecline\nfall\nreduce\ndownward trend\n损害 destory\ndamage\nhurt\nruin\nbreak\nspoil\n处理 deal with\nhandle\ncope with\n连词 通过 through\nvia\nby\n介词 随着(wtaaf) With the \u0026hellip;\nthanks to \u0026hellip;\nas \u0026hellip;\nalong with\nfollowing\n相反(ICIO) In contrast\nConversely\nIn comparison\nOn the other hand\n常用词组 It is a must for sb to do sth\nBe Bound to 必然会\nThe real looks of ..的真面目\nbe paved with 由..铺成\nSocial Fabric 社会组织\nWriting Academic Discussion Writing 表明观点 While I totally understand what both of you mean, I mostly agree with XXX\nIn my opinion/view\n优缺点句型 the negatives seems to outweigh the positives\nBoth options have real advantages\nSpeaking Person The person influence me greatly is \u0026hellip;, a gentlemen/lady with a number of good qualities\n","date":"2023-09-15T08:46:52+08:00","permalink":"https://downeyflyfan.com/p/%E6%89%98%E7%A6%8F/","title":"托福"},{"content":"电阻色环 第一个环（最左边的环）：代表第一位数字，即阻值的第一位数字。\n第二个环：代表第二位数字，即阻值的第二位数字。\n颜色 数字 黑色 0 棕色 1 红色 2 橙色 3 黄色 4 绿色 5 蓝色 6 紫色 7 灰色 8 白色 9 第三个环：代表乘法因子，用于计算阻值的数量级。 黑色：无\n棕色：$10^1$\n红色：$10^2$\n橙色：$10^3$\n黄色：$10^4$\n绿色：$10^5$\n蓝色：$10^6$\n紫色：$10^7$\n灰色：$10^8$\n白色：$10^9$\n第四个环（最右边的环）：代表容差，即电阻值的允许误差范围。 无色环：±20%\n银色环：±10%\n金色环：±5%\n棕色环：±1%\n红色环：±2%\n绿色环：±0.5%\n蓝色环：±0.25%\n紫色环：±0.10%\n灰色环：±0.05%\n白色环：±10%\n例如，如果电阻色环的顺序为棕色、黑色、红色、金色，那么其阻值为1 0 2乘以10^5，即1020000欧姆，容差为±5%。\n","date":"2023-09-14T10:11:16+08:00","permalink":"https://downeyflyfan.com/p/%E7%94%B5%E5%AD%90%E5%AE%9E%E9%AA%8C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","title":"电子实验基础知识"},{"content":"LTI 对于复指数信号的响应 响应 $$ \\begin{gather} \\begin{aligned} e^{st} \u0026amp;\\longrightarrow H(s) e^{st} \\\\ z^n \u0026amp;\\longrightarrow H(z) z^n \\end{aligned} \\end{gather} $$\n复指数函数是LTI系统的特征函数\n当系统输入为 $e^{st}$时，响应应具有$Ae^{st}$的形式\nTransfer Function $H(z) / H(s)$ Computation 当输入$x(t) = e^{st}, x[n] = z^n$时 $$ \\begin{gather} \\begin{aligned} H(s) \u0026amp;= H(j \\omega)\\int_{ - \\infin }^{ \\infin } h(\\tau) e^{-s \\tau} d\\tau \\\\ H(z) \u0026amp;= H(e^{j \\omega})\\sum_{ k = - \\infin }^{ \\infin } h[k] z^{-k} \\end{aligned} \\end{gather} $$\n当$s$和$z$为一般复数时，$H$为系统函数 Transfer Function and FS (叠加性质) $$ \\begin{gather} \\begin{aligned} y(t) \u0026amp;= [\\sum_{ k = - \\infin }^{ \\infin } a_k H( jk \\omega_0)] x(t) \\\\ y[n] \u0026amp;= [\\sum_{ k = - \\infin }^{ \\infin } a_k H( jk \\omega_0)] x[n] \\end{aligned} \\end{gather} $$\n连续时间周期信号的傅立叶级数表示 成谱波关系的复指数信号的线性组合 一般周期信号的傅立叶级数表示 $$ \\begin{equation} x(t) = \\sum_{k = -\\infin}^{ \\infin} a_ke^{j k \\omega 0 t} = \\sum{k = -\\infin}^{ \\infin} a_ke^{j k \\dfrac{2\\pi}{T} t} \\end{equation} $$\n$k = \\pm N$这两项叫做N次谐波分量 实信号的傅立叶级数表示 实信号的傅立叶级数满足$a_k = a_{-k}^*$ $$ \\begin{aligned} x(t) \u0026amp;= a_0 + \\sum_{k=1}^{ \\infin} \\Big[ a_k e^{j k \\omega _0 t} + a_k e^{-jk \\omega 0 t} \\Big] \\\\ \u0026amp;= a_0 + 2 \\sum{k=1}^{ \\infin} \\mathbb R \\lbrace a_ke^{j k \\omega_0 t} \\rbrace \\end{aligned} $$\n现在，让, $a_k = A_k e^{j\\theta_k}$ $$ \\begin{equation} x(t) = a_0 + 2 \\sum_{k = 1}^{ \\infin} A_k cos(k \\omega _0 t + \\theta_k) \\end{equation} $$\n让$a_k = B_k + jC_k$ $$ \\begin{equation} x(t) = a_0 + 2 \\sum_{k=1}^{ \\infin} \\Big[ B_k cos ( k\\omega_0 t ) -j C_k sin(k \\omega_0 t) \\Big] \\end{equation} $$\n连续时间周期信号傅里叶级数表示的确定 $$ \\begin{equation} a_k = \\frac{1}{T} \\int_{T} e^{-jk \\omega 0 t} x(t) dt = \\frac{1}{T} \\int{T} e^{-jk \\dfrac{2\\pi}{T} t} x(t) dt \\end{equation} $$\n其中, $a_0 = \\dfrac{1}{T} \\int_{T} x(t) dt$, 表示为直流分量 FS Convergence - Diriheli Condition 函数必须在任意时间内绝对可积, 即 $$ \\begin{equation} \\int_T |x(t)| \u0026lt; \\infin \\end{equation} $$\n在任意时间内，函数的最大值和最小值必须是有限的\n在任意时间内，函数必须有有限个不连续点， 且这些点的值必须是有限值\n连续时间周期信号傅立叶级数性质 Paswal\u0026rsquo;s Theorem 周期信号的平均功率 = 各个谐波信号的平均功率之和 $$ \\begin{equation} \\underset{ T \\longrightarrow \\infin }{lim}\\frac{ 1 }{ T }\\int_{ T }^{ } |x(t)|^2 dt = \\int_{ T }^{ } |a_k|^2 dt \\end{equation} $$\n变换性质 $x(t)$ $a_k$ 实偶函数 实偶函数 实奇函数 纯虚奇函数 FS of Some Important Functions Square Wave $$ \\begin{equation} a_k = \\frac{ sin( k \\omega_0 T_1) }{ k \\pi } \\end{equation} $$\nImpulse Train $$ \\begin{equation} x(t) = \\sum_{ k = - \\infin }^{ \\infin } \\delta (t-kT) \\overset{ FS }{ \\longleftrightarrow } a_k = \\frac{ 1 }{T } \\end{equation} $$\nOthers Constant Function $$ \\begin{equation} x(t) = C \\overset{ FS }{ \\longleftrightarrow } a_k = \\begin{cases} 0 \u0026amp; k \\neq 0 \\\\ C \u0026amp; k = 0 \\end{cases} \\end{equation} $$\n离散时间信号的傅立叶级数表示 谐波信号 $$ \\begin{equation} \\begin{aligned} x[n] \u0026amp;= \\sum_{ k=(N) }^{ }a_k e^{jk \\omega_0 n} = \\sum_{ k=(N) }^{ }a_k e^{jk \\dfrac{ 2\\pi }{ N } n} \\end{aligned} \\end{equation} $$\n周期信号 $$ \\begin{align} x[n] \u0026amp;= \\sum_{ k=(N) }^{ }a_k e^{jk \\omega_0 n} = \\sum_{ k=(N) }^{ }a_k e^{jk \\dfrac{ 2\\pi }{ N } n} \\\\ a_k \u0026amp;= \\frac{ 1 }{ N} \\sum_{ k = (N) }^{ } x[n] e^{-j k \\omega_0 n} \\end{align} $$\n性质 Filter Transfer Function Decomposition For a Cascode System $$ \\begin{equation} H(j \\omega) = H_1(j \\omega) H_2(j \\omega) H_3 (j \\omega) = |H_1(j \\omega) H_2(j \\omega) H_3 (j \\omega)| \\cdot e^{j ( \\angle H_1(j \\omega) + \\angle H_2 (j \\omega) + H_3 (j \\omega))} \\end{equation} $$\n","date":"2023-08-31T10:40:58+08:00","permalink":"https://downeyflyfan.com/p/3.-fs-of-periodic-signals/","title":"3. FS of Periodic Signals"},{"content":"离散时不变系统 - 卷积和 用脉冲表示离散时间信号 $$ \\begin{aligned} x[n] \u0026amp;= \\sum_{k = -\\infin}^{\\infin} x[k] \\delta[n-k] \\\\ u[n] \u0026amp;= \\sum_{k=0}^{\\infin} \\delta[n-k] \\end{aligned} $$\n离散卷积定义 $$ \\begin{aligned} y[n] \u0026amp;= \\sum_{-\\infin}^{\\infin}x[k]h[n-k] \\end{aligned} $$\n连续时不变系统 - 卷积积分 用脉冲表示连续时间信号 $$ \\begin{aligned} x(t) \u0026amp;= \\int_{-\\infin}^{+\\infin} x(\\tau) h(t-\\tau) d\\tau \\\\ u(t) \u0026amp;= \\int_{-\\infin}^{\\infin} \\delta(t-\\tau) d\\tau \\end{aligned} $$\n连续卷积定义 $$ \\begin{aligned} y(t) \u0026amp;= \\int_{-\\infin}^{\\infin} x(\\tau)h(t-\\tau) d\\tau \\end{aligned} $$\n卷积 数学表示 $$ \\begin{aligned} y[n] \u0026amp;= \\sum_{ k =-\\infin}^{\\infin}x[k]h[n-k] = x[n]*h[n] \\\\ y(t) \u0026amp;= \\int_{-\\infin}^{\\infin} x(\\tau)h(t-\\tau) d\\tau = x(t) * h(t) \\\\ \\end{aligned} $$\n性质 Commutative Distributive Associative (交换 分配 结合) $$ \\begin{gather} \\begin{aligned} x(t)*h(t) \u0026amp;= h(t)x(t) \\\\ x(t)[h_1(t) + h_2(t)] \u0026amp;= x(t)*h_1(t) + x(t) * h_2(t) \\\\ x(t) * h_1(t) * h_2(t) \u0026amp;= x(t) * (h_1(t) * h_2(t)) \\end{aligned} \\end{gather} $$\n其他性质 若$y(t) = x(t) * h(t)$ $$ \\begin{equation} y(t-k) = x(t-k) * h(t) \\end{equation} $$\n$$ \\begin{equation} y\u0026rsquo;(t) = x\u0026rsquo;(t) * h(t) \\end{equation} $$\n$$ \\begin{equation} y(-t) = x(-t) * h(-t) \\end{equation} $$\n$$ \\begin{equation} y(kt) \\neq x(kt) * h(t) \\end{equation} $$\n$$ \\begin{equation} x(t) * u(t) = \\int_{ - \\infin }^{ t } x( \\tau) d \\tau \\end{equation} $$\n线性时不变系统(LTI)的性质 性质 需要满足的方程 其他特征 Linear $x_3(t) = Ax_1(t) + Bx_2(t) \\Longleftrightarrow y_3(t) = Ay_1(t) + By_2(t)$ Cascode System的先后位置不重要 Time-Inviriant $y(t-t_0) = y_1(t) \\Longleftrightarrow x_(t-t_0) = x_1(t)$ MemoryLess $h[n] = 0, n \\neq 0$ $h[n] = K \\delta [n], n =0$ Invertibility $h[n] * g[n] = \\delta [n]$,分别为原、逆系统的UIR Casuality $h[n] = 0, n \u0026lt; 0$ $y[n] = \\sum_{ k =0 }^{ \\infin } x[n] h[n-k]$ Stability $\\int_{ - \\infin }^{ \\infin } h( \\tau) d \\tau \u0026lt; 0$ Response of a LTI System Unit Impulse Response 输入为$\\delta (t)$时的输出$h(t)$\nCascaded System UIR $$ \\begin{equation} h(n) = h_1(n)*h_2(n) \\end{equation} $$\nUnit Step Response 输入为$u(t)$时的输出$s(t)$\n$$ \\begin{equation} s[n] = u[n] * h[n] = \\sum_{ k = - \\infin }^{ n } h[k] \\end{equation} $$\n$$ \\begin{equation} s(t) = u(t) * h(t) = \\int_{ - \\infin }^{ t } h(\\tau) d \\tau \\end{equation} $$\nCasual LTI System Described by LCCDE Linear Constant-Coefficient Differential and Difference Equation 一阶线性常微分方程的通用解法 一般形式 $$ \\begin{aligned} \\sum_{k=0}^N a_k \\frac{d^ky}{dt} \u0026amp;= \\sum_{k=0}^{M}b_k \\frac{d^k x}{dt} \\end{aligned} $$\n解法 $N = 0$ $$ \\begin{aligned} y(t) \u0026amp;= \\sum_{k=0}^{M}b_k \\frac{d^k x}{dt} \\end{aligned} $$\n$N \\ge 1$ Initial Condition $$ \\begin{aligned} y(t_0) \u0026amp;= \\frac{dy(t_0)}{dt} = \u0026hellip; = \\frac{d^{N-1} y(t_0)}{dt^{N-1}} \\end{aligned} $$\n一阶线性差分方程 形式 (recursive equations) $$ \\begin{aligned} \\sum_{k=0}^N a_k y[n-k] \u0026amp;= \\sum_{k=0}^M b_k x[n-k] \\\\ y[n] \u0026amp;= \\frac{1}{a_0}(\\sum_{k=0}^M b_k x[n-k] - \\sum_{k=1}^N a_k y[n-k]) \\end{aligned} $$\n解法 当 $N=0$， 存在Finite Impulse Response $$ \\begin{aligned} y[n] \u0026amp;= \\frac{b_k}{a_0}\\sum_{k=0}^{M}x[n-k] \\\\ h[n] \u0026amp;= \\begin{cases} \\frac{b_n}{a_0} \u0026amp; 0 \\lt n \\le M \\\\ 0 \u0026amp; otherwise \\end{cases} \\end{aligned} $$\nInfinite Impulse Response Ex. $$ \\begin{aligned} y[n] \u0026amp;= \\frac{1}{2} y[n-1] + K \\delta[n] \\\\ \\therefore y[n] \u0026amp;= 0, n \\le -1 \\\\ \\therefore y[0] \u0026amp;= K \\\\ y[1] \u0026amp;= \\frac{1}{2}K \\\\ y[2] \u0026amp;= (\\frac{1}{2})^2K \\\\ \u0026hellip; \\\\ y[n] \u0026amp;= (\\frac{1}{2})^n K \\end{aligned} $$\n因此，Impulse Response 是 $h[n] = (\\dfrac{1}{2})^n u[n]$ Block Diagram Representations of First-Order Systems Described by Differential and Difference Equations Difference Equations for Discrete-Time $$ \\begin{aligned} y[n] \u0026amp;= -ay[n-1] + bx[n] \\end{aligned} $$\nDifferential Equations for Continuous-Time Block Diagram I $$ \\begin{aligned} \\frac{dy(t)}{dx} + a y(t) \u0026amp;= bx(t) \\\\ \\therefore y(t) \u0026amp;= \\frac{1}{a} [bx(t) - \\frac{dy(t)}{dt}] \\end{aligned} $$\nBlock Diagram II $$ \\begin{aligned} y(t) \u0026amp;= y(t_0) + \\int_{-\\infin}^{t} [bx(\\tau) - ay(\\tau)] d\\tau \\end{aligned} $$\nSingularity Functions $$ \\begin{equation} u_k(t) = \\begin{cases} \\dfrac{ d^k \\delta (t) }{ dt^k } \u0026amp; k \u0026gt; 0 \\\\ \\int_{ - \\infin }^{ t } u_{k+1} ( \\tau) d \\tau \u0026amp; k \\le 0 \\end{cases} \\end{equation} $$\nUnit Doublets and other Singularity Functions $$ \\begin{aligned} \\frac{dx(t)}{dt} \u0026amp;= x(t) *u_1(t) \\\\ \\frac{d^2x(t)}{dt} \u0026amp;= x(t) * u_2(t) \\\\ \u0026hellip; \\\\ \\therefore u_k(t) \u0026amp;= \\underset{k \\ times}{u_1(t) * u_1(t) *..*u_1(t)} \\end{aligned} $$\n微分方程解法回顾 常系数一阶微分方程 形式 $$ \\begin{aligned} a \\frac{dy(x)}{dx} + b y(x) \u0026amp;= cx \\\\ y \u0026amp;= y_h(x) + y_p(x) \\end{aligned} $$\n解法 $y_h(x)$ 先将$y_h(x)$设为和$x$相似的形式，再进行如下步骤: $$ \\begin{aligned} Let \\ c \u0026amp;= 0 \\\\ a\\frac{dy(t)}{dt} + by(t) \u0026amp;= 0 \\Longrightarrow y_h(x) \\\\ \\end{aligned} $$\n$y_p(x)$ 将$y_p(x)$设为$x$的倍数，再代入解 一阶微分方程 形式 $$ \\begin{aligned} \\frac{dy}{dx} + P(x) y \u0026amp;= Q(x) \\\\ \\end{aligned} $$\n解法 $$ \\begin{aligned}\nLet \\ v\u0026rsquo;(x) \u0026amp;= v(x) P(x) \\\\ \\Big[\\frac{1}{v(x)} dv \u0026amp;= P(x)dx \\Longrightarrow v(x) = e^{\\int P(x) dx} \\Big]\\\\ \\therefore \\frac{dy}{dx} v(x) + P(x)v(x) y \u0026amp;=Q(x) v(x) \\\\ y v(x) \u0026amp;= \\int Q(x)v(x) - P(x) v(x) ydx \\\\ yv(x) \u0026amp;= \\int Q(x) v(x) dx - \\int ydv \\\\ y \u0026amp;= \\frac{1}{v(x)} \\int Q(x) v(x) dx (????) \\end{aligned} $$\n常系数二阶微分方程 形式 $$ \\begin{aligned} ay\u0026rsquo;\u0026rsquo; + by\u0026rsquo; + cy \u0026amp;= 0 \\end{aligned} $$\n解法 换成$ay^2 + by + c = 0$，获得解 两个实根 $y = c_1 e^{r_1x} + c_2 e^{r_2 x}$ 一个实根 $y = c_1 e^{rx} +c_2 x e^{rx}$ 两个复数根$r = \\alpha \\pm i \\beta$ $y = e^{\\alpha x} (c_1 \\cos \\beta x + c_2 \\sin \\beta x)$ 重要公式 $$ \\begin{aligned} \\sum_{k=0}^n \\alpha^k \u0026amp;= \\frac{1 - \\alpha^{n+1}}{1 -\\alpha} \\end{aligned} $$\n","date":"2023-08-29T10:16:40+08:00","permalink":"https://downeyflyfan.com/p/2.-lti-system/","title":"2. LTI System"},{"content":"Signal Power \u0026amp; Energy 注: 此处的能量与功率是一个相对值，单位不定 信号分类 Continuous Signal Discrete Signal $x(t)$ $x(n)$ 信号能量与功率 基于信号/功率大小的分类 Finite Power System 能量不是无穷 Finite Energy System $P \\rightarrow 0$ Infinite Power System $P \\rightarrow \\infin, E \\rightarrow \\infin$ 关系 Continuous Signal $$ \\begin{aligned} E_{\\infin} \u0026amp; \\equiv \\underset{t \\rightarrow \\infin}{lim}\\int_{-t}^{t}|x(t)|^2dt \\\\ P_{\\infin} \u0026amp; \\equiv \\underset{t \\rightarrow \\infin}{lim}\\frac{1}{2t} \\int_{-t}^{t}|x(t)|^2dt \\\\ \\end{aligned} $$\nDiscrete Signal $$ \\begin{aligned} E_{\\infin} \u0026amp; \\equiv \\underset{n \\rightarrow \\infin}{lim} \\sum_{-n}^n|x[n]|^2dn \\\\ P_{\\infin} \u0026amp; \\equiv \\underset{n \\rightarrow \\infin}{lim}\\frac{1}{2n + 1} \\sum_{-n}^n |x[n]|^2dn \\\\ \\end{aligned} $$\n独立变量的初级转换 转换类型 $$ \\begin{aligned} x(t) \\longrightarrow x(\\alpha t + \\beta) \\end{aligned} $$\ntime shift 在$\\beta \\neq 0$时平移 time reversal 在$\\alpha \u0026lt;0$时翻转 time scaling 在$|\\alpha| \u0026lt; 1$时stretch, 在$|\\alpha| \u0026gt; 1$时compress 周期信号 奇偶信号 periodic Signals(重要的周期信号求解方法) $x(t) = x(t+T)$ Odd \u0026amp; Evene Signals Even: $x(t) = x(-t)$, Odd: $-x(t) = x(-t)$ 任何信号函数可以拆分成$O(t) + E(t)$ $$ \\begin{aligned} E(x) \u0026amp;= \\frac{1}{2}(x(t) + x(-t)) \\\\ O(x) \u0026amp;= \\frac{1}{2}(x(t) - x(-t)) \\\\ x(t) \u0026amp;= E(x) + O(x) \\end{aligned} $$\n指数信号 连续指数信号 指数 $x(t) = Ce^{at}, C, a \\in \\mathbb C$ 正弦 $x(t) = Acos(\\omega t + \\phi)$ 指数信号的虚数部分必然是周期信号 $$ \\begin{aligned} x(t) \u0026amp;= e^{j\\omega t} \\\\ if \\ t \u0026amp;= 0: \\\\ x(t) \u0026amp;= 1 \\\\ T = 0 \\\\\\ \\\\ elif \\ t \u0026amp;\\neq 0: \\\\ x(t) \u0026amp;= e^{j\\omega t} \\\\ \u0026amp;= cos(\\omega t) + jsin(\\omega t) \\\\ T \u0026amp;= \\frac{2\\pi}{\\omega} \\end{aligned} $$\n指数信号虚数部分的E/P $$ \\begin{aligned} E \u0026amp; = \\int_{-t}^{t}|e^{j\\omega t}|^2dt \\\\ \u0026amp;= 2t \\\\ P \u0026amp;= \\frac{E}{2T} \\\\ \u0026amp;= 1 \\end{aligned} $$\n正弦信号的分解 $$ \\begin{aligned} Acos(\\omega t + \\phi) \u0026amp;= \\frac{A}{2}[e^{j\\omega t}\\cdot e^{j\\phi} + e^{-j\\omega t}\\cdot e^{-j\\phi}] \\\\ \u0026amp;= \\mathbb R\\lbrace e^{j(\\omega t +\\phi)}\\rbrace \\\\ Asin(\\omega t + \\phi) \u0026amp;= \\frac{A}{2}[e^{j\\omega t}\\cdot e^{j\\phi} - e^{-j\\omega t}\\cdot e^{-j\\phi}] \\\\ \u0026amp;= \\mathbb I\\lbrace e^{j(\\omega t +\\phi)}\\rbrace \\\\ \\end{aligned} $$\nharmonically related complex exponentials 这些信号周期$T_i$的最大公约数为$T_0$ $$ \\begin{aligned} T_i \u0026amp;= \\frac{2\\pi}{\\omega_i} \\\\ T_0 \u0026amp;= \\frac{2\\pi}{\\omega_0} \\\\ T_0 \u0026amp;= k T_i \\\\ x(t)_i \u0026amp;= e^{jk\\omega t} \\end{aligned} $$\n考虑虚实结合的指数信号 $$ \\begin{aligned} x(t) \u0026amp;= Ce^{at} \\\\ C\u0026amp;= |C| e^{j \\theta} \\\\ a \u0026amp;= r + j \\omega \\\\ x(t) \u0026amp;= |C|e^{j \\theta} e^{(r + j\\omega) t} \\\\ \u0026amp;= |C|e^{rt} e^{j(\\omega t + \\theta)} \\end{aligned} $$\n当$r = 0$，都是正弦信号\n当$r \\gt 0, r \\lt 0$时\n离散指数信号 $$ \\begin{aligned} x[n] \u0026amp;= C\\alpha^n \\\\ C \u0026amp;= |C| e^{j\\theta} \\\\ \\alpha \u0026amp;= |\\alpha| e^{j\\omega} \\\\ \\therefore x[n] \u0026amp;= |C||\\alpha|^n [cos(\\omega n + \\theta) + jsin(\\omega n + \\theta)] \\end{aligned} $$\n当$\\alpha = 1$，都是正弦信号\n当$\\alpha \\gt 1$, Decay\n当$\\alpha \\gt 1$, Grow\nUnit Impluse \u0026amp; Unit Step Functions discrete unit impluse \u0026amp; unit step functions 方程 $$ \\begin{aligned} \\delta[n] \u0026amp;= \\begin{cases} 0 \u0026amp; n \\ne 0 \\\\ 1 \u0026amp; n = 0 \\end{cases} \\\\ u[n] \u0026amp;= \\begin{cases} 0 \u0026amp; n \\lt 0 \\\\ 1 \u0026amp; n \\ge 0 \\end{cases} \\end{aligned} $$\n两者关系 $$ \\begin{equation} \\delta [n] = u[n] - u[n-1] \\end{equation} $$\n$$ \\begin{equation} u[n] = \\sum_{ k = 0}^{ n} \\delta [n - k] \\end{equation} $$\n脉冲函数的其他属性 $$ \\begin{equation} x[n]\\delta[n] = x[0]\\delta[n] \\end{equation} $$\n$$ \\begin{equation} x[n] \\delta [n- n_0] = x[n_0] \\delta [n - n_0] \\end{equation} $$\n$$ \\begin{equation} \\delta ( \\alpha t) = \\frac{ 1 }{ | \\alpha| } \\delta (t) \\end{equation} $$\n$$ \\begin{equation} x[n] * \\delta [n] = x[n] \\end{equation} $$\nContinuous unit impluse \u0026amp; unit step functions 二者关系 基本关系 $$ \\begin{equation} \\delta (t) = \\frac{ du(t) }{ dt } \\end{equation} $$\n$$ \\begin{equation} u(t) = \\int_{ - \\infin }^{ t } \\delta (\\tau) d\\tau \\end{equation} $$\n令$\\sigma = t - \\tau$ $$ \\begin{equation} \\begin{aligned} u(t) \u0026amp;= \\int_{\\infin}^0\\delta(t-\\sigma)(-d\\sigma) \\\\ \u0026amp;= \\int_0^\\infin \\delta(t-\\sigma)d\\sigma \\end{aligned} \\end{equation} $$\n重要属性 缩放 $$ \\begin{equation} ku(t) = \\int_{-\\infin}^tk\\delta(\\tau)d\\tau \\end{equation} $$\nBasic System Properties 注意: 对于一个系统，输入和输出的时间分别指的是$y(t)$和$x(t)$当中的$t$\nMemory 输出只和当前输入有关，叫做memoryless, 否则就是system with memory\nInvertibility and Inverse System 定义 $x$和$y$一一对应\n图示 Causality 输出仅取决于当前和过去的输入\n若未来的输入可以影响输出，就不是Causality Stability Bounded Input $\\rightarrow$ Bounded Output, $t \\in \\mathbb R$\n特别注意，$\\delta (t)$ Not Bounded(无界) Time Invirance 时间平移不变性 $x(t) \\longrightarrow y(t), x(t-t_0) \\longrightarrow y(t-t_0)$\nLCCDE (Linear Constant Coefficient Equation) Linearity 满足以下条件的系统是线性的\n$$ \\begin{aligned} x_k \u0026amp;\\longrightarrow y_k \\Longrightarrow\\sum_k a_k x_k \u0026amp;\\longrightarrow \\sum_k b_k y_k \\end{aligned} $$\nAppendix Trigonometric Formula 合并 $$ \\begin{gather} \\begin{aligned} asinx + bcosx \u0026amp;= \\sqrt{a^2 + b^2}sin(x + \\phi) \\\\ tan \\phi \u0026amp;= \\dfrac{sinx}{cosx} \\end{aligned} \\end{gather} $$\n三角函数的复指数表达 $$ \\begin{gather} \\begin{aligned} cos(x) \u0026amp;= \\frac{ e^{jx} + e^{-jx}}{ 2 } \\\\ sin(x) \u0026amp;= \\frac{ e^{jx} - e^{-jx}}{ 2j } \\end{aligned} \\end{gather} $$\nPlural Formula $$ \\begin{gather} \\begin{aligned} 1 \u0026amp;= e^{j 2 \\pi n} \\\\ (-1)^n \u0026amp;= e^{j \\pi n} \\\\ j^n \u0026amp;= e^{j \\dfrac{ \\pi }{ 2 } n} \\end{aligned} \\end{gather} $$\n","date":"2023-08-22T15:31:32+08:00","permalink":"https://downeyflyfan.com/p/1.-introduction/","title":"1. Introduction"},{"content":"设置Clash终端代理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 cat \u0026gt; ~/.bash_profile \u0026lt;\u0026lt; EOF function proxy_on() { export http_proxy=http://127.0.0.1:7890 export https_proxy=\\$http_proxy echo -e \u0026#34;终端代理已开启。\u0026#34; } function proxy_off(){ unset http_proxy https_proxy echo -e \u0026#34;终端代理已关闭。\u0026#34; } EOF source ~/.bash_profile proxy_on ","date":"2023-08-17T11:17:28+08:00","permalink":"https://downeyflyfan.com/p/macos%E9%97%AE%E9%A2%98/","title":"MacOS问题"},{"content":"Type I PLL Topology 原理图 Phase Locking: Align the Output Phase of VCO and Phase of the reference\n用LPF除去AC Signal，保留DC signal\n为了定义Phase Lock Condition, 我们需要使得$\\phi_{out} - \\phi_{in}$ 保持不变, 也就是\n$$ \\begin{aligned} \\frac{d\\phi_{out}}{dt} - \\frac{d\\phi_{in}}{\\phi_{in}} \u0026amp;= 0 \\\\ \\omega_{out} \u0026amp;= \\omega_{in} \\end{aligned} $$\n一个简单的PLL 用XOR作PD\n用LC电路作LPF\nPhase Detector I/O关系 $$ \\begin{aligned} \\overline{V_{out}} \u0026amp;= K_{PD}\\Delta \\phi \\\\ Gain \u0026amp;= K_{PD} \\end{aligned} $$\n$K_{PD}$单位为$V/rad$ 实现方式 通过XOR实现Phase Detect 电路和时序图 不同相位差下的时序图和输出电压变化 PFD (Phase/Frequency Detector) 操作 $Q_A$ $Q_B$ UP Pulses Down Pulses 电路图 总体结构 门电路 CMOS电路 效果 当频率很低时，就成了一个PD Charge Pump 结构图 优化 用MOSFET做电流源和开关\n用一个CMOS Pass Gate来达到与$Q_A$相同的delay\nDynamics of CPPLL Is it a Linear System? Transfer Function of PDF/CP/LPF Step Response of PDF/CP/LPF $I_P$为CP电流\n$C_P$为LPF的电容\nTransfer Function $$ \\begin{aligned} V_{out}(t) \u0026amp;= \\frac{I_P}{2\\pi C_P} t \\Delta \\phi u(t) \\\\ \\therefore h(t) \u0026amp;= \\frac{I_P}{2\\pi C_P} u(t) \\\\ \\therefore H(s) \u0026amp;= \\frac{V_{out}(t)}{\\Delta \\phi}(s) \\\\ \u0026amp;= \\frac{I_P}{2\\pi C_P} \\cdot \\frac{1}{s} \\end{aligned} $$\nSimple CPPLL 原理图 电路图 分析 为了稳定电路，增加了一个$R_P$ $$ \\begin{aligned} \\frac{\\Phi_{out}}{\\Phi_{in}}(s)|{open} \u0026amp;= \\frac{I_P}{2\\pi} ({\\frac{1}{sC_P} + R_P}) \\frac{K{VCO}}{s} \\\\ \\therefore H(s) \u0026amp;= \\end{aligned} $$\n优化 增加一个$C_2$以减小Ripple 附录 Gain Crossover 增益（Gain）曲线和相位（Phase）曲线相交的位置\n","date":"2023-07-20T15:18:41+08:00","permalink":"https://downeyflyfan.com/p/15.-phase-locked-loops/","title":"15. Phase-Locked Loops"},{"content":"小的技巧 打包 合并 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # 打包多项特征 根据某项特征排序 tasks = [{\u0026#39;order\u0026#39;: o, \u0026#39;product\u0026#39;: p, \u0026#39;time\u0026#39;: t, \u0026#39;deadline\u0026#39;: d} for o, p, t, d in zip(line_orders, line_product_name, line_standard_time, line_deadline)] tasks = sorted(tasks, key=lambda x: x[\u0026#39;deadline\u0026#39;]) # 合并相同订单 merged_tasks = [] current_order = None current_index = -1 for task in tasks: if task[\u0026#39;order\u0026#39;] == current_order: # 合并相同订单的项 merged_tasks[current_index][\u0026#39;number\u0026#39;] += 1 order_number -=1 else: # 添加新的订单项 current_order = task[\u0026#39;order\u0026#39;] current_index += 1 merged_tasks.append({ \u0026#39;order\u0026#39;: task[\u0026#39;order\u0026#39;], \u0026#39;product\u0026#39;: task[\u0026#39;product\u0026#39;], \u0026#39;time\u0026#39;: task[\u0026#39;time\u0026#39;], \u0026#39;deadline\u0026#39;: task[\u0026#39;deadline\u0026#39;], \u0026#39;number\u0026#39;: 1 }) 输入 + 选择 实现\u0026quot;Space+Enter\u0026quot;输入 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import readline def input_str(): user_input = \u0026#34;\u0026#34; while True: char = input() if char == \u0026#34; \u0026#34;: user_input = user_input.rstrip(\u0026#34; \u0026#34;) break elif char == \u0026#34;q\u0026#34;: user_input = \u0026#34;q\u0026#34; break else: user_input = user_input + char + \u0026#34;\\n\u0026#34; return user_input 模糊搜索选择 1 2 3 4 5 import pyfzf f = pyfzf.FzfPrompt() result = f.prompt([\u0026#39;\u0026#39;,\u0026#39;\u0026#39;]) # 选择功能 function = result[0] pandas 1 2 3 4 5 6 7 8 9 10 11 12 13 # 读取表格 data = pd.read_excel(\u0026#39;example.xlsx\u0026#39;, usecols=\u0026#39;B:F, H:M\u0026#39;) # 提取第一列数据 a = np.array(data.iloc[:, 0]) b = np.array(data.iloc[:, 1]) # 导出数据 data_out = pd.DataFrame({ \u0026#39;第一列数据\u0026#39;: a, \u0026#39;第二列数据\u0026#39;: b }) data_out.to_excel(\u0026#39;导出数据.xlsx\u0026#39;, index=False) 排序 单次排序 1 2 3 4 5 # reverse是降序 默认是升序 # x可以是 x[0], x[\u0026#39;name\u0026#39;], x.value, 根据列表元素确定 sorted_list = sorted(my_list, key=lambda x: x.value, reverse=True) 多重排序 1 sorted_list = sorted(my_list, key=lambda x: (x.A, -x.B)) 问题算法 贪心算法 一种可能的贪心算法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def chosen_suppliers_II(suppliers_A_names, suppliers_A, suppliers_B_names, suppliers_B, suppliers_C_names, suppliers_C): # 将A、B、C的供应商名称和供货量合并到一个列表中 suppliers = list(zip(suppliers_A_names, suppliers_A, [\u0026#39;A\u0026#39;] * len(suppliers_A))) + list(zip(suppliers_B_names, suppliers_B, [\u0026#39;B\u0026#39;] * len(suppliers_B))) + list(zip(suppliers_C_names, suppliers_C, [\u0026#39;C\u0026#39;] * len(suppliers_C))) # 先按照A、B、C, 再按照供货量从大到小对suppliers列表进行排序 suppliers = sorted(suppliers, key=lambda x: (x[2], -x[1])) # 按照A、B、C的顺序选取供应商，并购买其提供的原材料，直到所需量达到要求为止 total_amount = 0 total_productivity = 0 purchased = [] for name, supply, type in suppliers: if supply == 0: # 跳过供应量为0的供应商 continue if total_productivity \u0026gt;= 28200: break purchased_amount = supply total_amount += purchased_amount if type == \u0026#39;A\u0026#39; : total_productivity += purchased_amount/0.6 elif type == \u0026#39;B\u0026#39;: total_productivity += purchased_amount/0.66 else: total_productivity += purchased_amount/0.72 purchased.append((name, purchased_amount)) 动态规划算法 0-1背包问题 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 def knapsack(weights, values, capacity): n = len(weights) # dp[i][j]: 在前 i 个物品中，背包容量为 j 时的最大价值 dp = [[0] * (capacity + 1) for _ in range(n + 1)] for i in range(1, n + 1): for j in range(1, capacity + 1): if weights[i - 1] \u0026lt;= j: dp[i][j] = max(dp[i - 1][j], values[i - 1] + dp[i - 1][j - weights[i - 1]]) else: dp[i][j] = dp[i - 1][j] selected_items = [] i, j = n, capacity while i \u0026gt; 0 and j \u0026gt; 0: if dp[i][j] != dp[i - 1][j]: selected_items.append(i) j -= weights[i - 1] i -= 1 selected_items.reverse() return dp[n][capacity], selected_items # 示例用法 weights = [2, 3, 4, 5, 10, 23, 1, 2, 34, 242, 23, 3] values = [3, 4, 5, 6, 21, 23, 23, 51, 14, 41, 13, 14] capacity = 100 max_value, selected_items = knapsack(weights, values, capacity) print(f\u0026#34;选择第{selected_items}个物体可以获得最大价值为{max_value}\u0026#34;) 调度 时间片(轮转) 需要的已知数据 time_slice: 时间片的长度\ntime_remaining: 该任务还需要多长时间完成\ntime_available: 当前时间片内的剩余时间\n代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 时间片的分配 while time_remaining \u0026gt; 0 # 订单可以在当前时间切片内完成 (更新当前时间和剩下时间) if time_remaining \u0026lt;= time_available: current_time += time_remaining time_remaining = 0 time_available -= time_remaining # 计算超时时间 order_timeout = max(current_time - task[\u0026#39;deadline\u0026#39;], 0) line_timeout += order_timeout # 订单无法在当前时间切片内完成，继续下一个时间切片 else: current_time += time_available time_remaining -= time_available time_available = time_slice EDF + Dynamic Programming + Linear Programmingimport pandas as pd import numpy as np import pulp class ProductLine: def __init__(self, line_id=0, num_workstations=0, total_time=0, orders = []): # 属性: 产线编号、订单信息、工位数、总时间 self.line_id = line_id self.orders = orders self.num_workstations = num_workstations self.total_time = total_time def add_orders(self, item): self.orders.append(item) def __str__(self): orders_str = \u0026#34;\\n\u0026#34;.join(str(order) for order in self.orders) return f\u0026#34;L{self.line_id}, 工位: {self.num_workstations}, 总耗时: {self.total_time}, 订单:\\n{orders_str}\u0026#34; class Order: def __init__(self, order_id, product_name, product_number, ddl, line_id, start_time = 0, finish_time = 0, overtime = 0, total_time = 0, standard_time = []): # 属性: 订单号 产品名称 产品数目 截止时间 对应产线 开始时间 结束时间 超时时间 总用时 产品标准工时 self.order_id = order_id self.product_name= product_name self.product_number = product_number self.standard_time = standard_time self.ddl = ddl self.line_id =line_id self.start_time = start_time self.finish_time = finish_time self.overtime = overtime self.total_time = total_time def add_standard_time(self, item): self.standard_time.append(item) def __str__(self): return f\u0026#34;订单号: {self.order_id}, 总用时: {self.total_time}, 超时时间:{self.overtime}\u0026#34; def read_data(file_path): df = pd.read_excel(file_path, sheet_name = \u0026#34;Sheet1\u0026#34;) orders = df[\u0026#34;生产订单\u0026#34;].to_numpy() products = df[\u0026#34;产品名称\u0026#34;].to_numpy() standard_time = df[\u0026#34;标准工时\u0026#34;].to_numpy() ddls = df[\u0026#34;完工截止时间\u0026#34;].to_numpy() product_lines = df[\u0026#34;产线代码\u0026#34;].to_numpy() tasks = [] # 定义字典，合并、存储所有订单 current_order = None for i in range(len(orders)): # 新订单 if orders[i] != orders[i-1]: # 添加上一个订单到字典 if i != 0: tasks.append(new_order) # 添加新的订单项 current_order = orders[i] new_order = Order(order_id=orders[i], product_name=products[i], product_number=1, ddl = ddls[i], line_id=product_lines[i], start_time = 0, finish_time= 0, overtime= 0, total_time= 0, standard_time=[]) new_order.add_standard_time(standard_time[i]) # 合并相同订单的项 else: new_order.product_number += 1 new_order.add_standard_time(standard_time[i]) return tasks def save_data(file_path, lines): data_out = pd.DataFrame({ \u0026#34;生产订单\u0026#34;: [order.order_id for line in lines for order in line.orders], \u0026#34;开始时间\u0026#34;: [order.start_time for line in lines for order in line.orders], \u0026#34;结束时间\u0026#34;: [order.finish_time for line in lines for order in line.orders], \u0026#34;超时时间\u0026#34;: [order.overtime for line in lines for order in line.orders] }) data_out.to_excel(file_path, sheet_name=\u0026#34;Sheet1\u0026#34;, index=False) def min_processing_time(products, num_stations): if num_stations \u0026gt;= len(products): return max(products) elif num_stations == 1: return sum(products) m = len(products) n = num_stations dp = [[0] * (n + 1) for _ in range(m + 1)] # 初始化边界状态 for i in range(1, m + 1): dp[i][1] = sum(products[:i]) # 通过状态转移方程求解问题 for i in range(1, m + 1): for j in range(2, n + 1): dp[i][j] = float(\u0026#39;inf\u0026#39;) for k in range(j - 1, i): dp[i][j] = min(dp[i][j], max(dp[k][j - 1], sum(products[k:i]))) return dp[m][n] def Linear_Programming(num_workers, line, station_number): # 员工数 生产线数 工位分布 skill_matrix = pd.read_excel(\u0026#39;~/杉树杯/附件/附件4.xlsx\u0026#39;, usecols=\u0026#39;B:M\u0026#39;, skiprows=2, header=None).value # 将数据转换为NumPy数组并进行值转换 skill_matrix[skill_matrix == \u0026#39;N\u0026#39;] = 0 skill_matrix[skill_matrix == \u0026#39;O\u0026#39;] = 0.8 skill_matrix[skill_matrix == \u0026#39;E\u0026#39;] = 1 # 构建线性规划模型 prob = pulp.LpProblem(\u0026#39;Product_Allocation\u0026#39;, pulp.LpMaximize) # 定义决策变量 - 每个员工被分配到每个工位的binary变量 assignment = [(i,j) for i in range(num_workers) for j in range(line)] vars = pulp.LpVariable.dicts(\u0026#39;assignment\u0026#39;, assignment, cat=\u0026#39;Binary\u0026#39;) # 定义目标函数 - 最大化效率 prob += pulp.lpSum([vars[(i,j)] * skill_matrix[i][j] for i in range(num_workers) for j in range(line)]), \u0026#39;Efficiency\u0026#39; # 添加约束条件 for i in range(num_workers): prob += pulp.lpSum([vars[(i,j)] for j in range(line)]) \u0026lt;= 1 # 每个员工只能被分配到一个工位 for j in range(line): prob += pulp.lpSum([vars[(i,j)] for i in range(num_workers)]) \u0026lt;= station_number[j] # 每个工位只能分配一个员工 # 求解模型 prob.solve() # 提取解并存储在矩阵中 coordination = [] for v in prob.variables(): if v.varValue == 1: # 提取坐标 coord = v.name.replace(\u0026#39;assignment_\u0026#39;, \u0026#39;\u0026#39;) coord = coord.replace(\u0026#39;,_\u0026#39;, \u0026#39;,\u0026#39;) coordination.append(coord) # (员工索引，生产线索引) 工作人数 coordination = [tuple(int(num) for num in element.strip(\u0026#39;()\u0026#39;).split(\u0026#39;,\u0026#39;)) for element in coordination] working_number = len(coordination) # 通过员工分配矩阵计算效率矩阵 arrangment = np.zeros((num_workers, line)) efficiency_matrix = np.zeros((num_workers,line)) for i in range(working_number): arrangment[coordination[i][0]][coordination[i][1]] = 1 efficiency_matrix = arrangment*skill_matrix # 根据效率矩阵计算效率 根据员工分配矩阵获得员工分配列表 efficiency = [[] for _ in range(line)] arrangment_list = [[] for _ in range(line)] for x in range(num_workers): # 遍历员工 for y in range(line): # 遍历生产线 if efficiency_matrix[x][y] != 0: # 若是非零元素 efficiency[y].append(efficiency_matrix[x][y]) # 加入对应生产线的效率 arrangment_list[y].append(\u0026#39;PE\u0026#39; + \u0026#34;{:03d}\u0026#34;.format(x)) # 加入员工分配列表 for i in range(line): if (len(efficiency[i]) == 0): efficiency[i].append(0) # 返回效率列表，员工列表 return efficiency, arrangment_list def __main__(): # 基本参数 num_lines = 12 num_workstations = [1,2,1,3,1,1,2,1,1,3,1,1] lines = [ProductLine(line_id = i+1, num_workstations=num_workstations[i], total_time= 0, orders= []) for i in range(num_lines)] # 读取数据 tasks = read_data(\u0026#34;~/数模/杉树杯/附件/附件1.xlsx\u0026#34;) # 给每个生产线分配订单 for task in tasks: lines[task.line_id - 1].add_orders(task) # 计算订单的时间信息 line_total_overtime = [0]*num_lines for line in lines: for order in line.orders: order.start_time = line.total_time order.total_time = min_processing_time(order.standard_time, num_workstations[line.line_id - 1]) order.finish_time = order.start_time + order.total_time line.total_time = order.finish_time order.overtime = max(0, order.finish_time -order.ddl) line_total_overtime[line.line_id - 1] += order.overtime print(f\u0026#34;{line.line_id}号生产线的超时时间为{line_total_overtime[line.line_id-1]}\u0026#34;) print(f\u0026#34;第一题的超时时间为: {sum(line_total_overtime)} 分钟\u0026#34;) # 存储数据 save_data(\u0026#34;第一题分配方案.xlsx\u0026#34;, lines) if __name__ == \u0026#34;__main__\u0026#34;: __main__() SRIMAX(滑动平均的改良版) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import pandas as pd import numpy as np import matplotlib.pyplot as plt from statsmodels.tsa.statespace.sarimax import SARIMAX from matplotlib.font_manager import FontProperties # 读取数据(可以修改) data = pd.read_excel(\u0026#39;Data2.xlsx\u0026#39;, sheet_name=\u0026#39;订货量\u0026#39;, usecols=\u0026#39;C:IH\u0026#39;, skiprows=51, nrows=3, header=None) data = data.T data.index = pd.to_datetime(data.index) # 设置中文字体 font = FontProperties(fname=\u0026#39;/Users/downeyflyfan/Library/Fonts/NotoSansCJKsc-Regular.otf\u0026#39;) plt.figure(figsize=(10, 5)) for i, product in enumerate([\u0026#39;A\u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;C\u0026#39;]): # 进行差分处理 diff = np.diff(data[i].values) # 拟合SARIMA模型 model = SARIMAX(data[i], order=(4,1,4), seasonal_order=(4,1,4,24)) # (p, d, q)是非季节性部分的阶数，(P, D, Q)是季节性部分的阶数，m是季节性周期。 results = model.fit() forecast = results.predict(start=len(data[i]), end=len(data)+23, dynamic=True).round(0) # 将预测值限制在大于0的范围内 forecast = np.clip(forecast, a_min=0, a_max=None) # 绘制原始数据和预测数据 plt.plot(data[i], label=\u0026#39;原材料{}原始数据\u0026#39;.format(product)) plt.plot(forecast, label=\u0026#39;原材料{}预测数据\u0026#39;.format(product)) plt.xlabel(\u0026#39;时间(W)\u0026#39;, fontproperties=font, fontsize=20) plt.ylabel(\u0026#39;订货量($m^3$)\u0026#39;, fontproperties=font, fontsize=20) plt.title(\u0026#39;订货量预测图像\u0026#39;, fontproperties=font, fontsize=24) plt.tight_layout() plt.legend(prop=font) plt.show() 决策树分类 前提 假设我们有一个包含 $N$ 个样本的训练集，每个样本包含 $M$ 个特征，用 $X_{i,j}$ 表示第 $i$ 个样本的第 $j$ 个特征的取值，用 $y_i$ 表示第 $i$ 个样本的目标值（或标签）。决策树模型的目标是学习从特征到目标值的映射关系，并用学习到的模型对新的样本进行预测。 流程 计算特征阈值和判断最优特征 通过基尼指数判断最优特征 基尼指数越小表示数据集越纯。\n对于一个特征 $A$ 和其取值 $a_i$，假设 $D$ 表示当前节点的数据集，$D_i$ 表示特征 $A$ 取值为 $a_i$ 时的子数据集，则基尼指数计算公式为：\n$$Gini(D,A)=\\sum_{i=1}^{k}\\frac{|D_i|}{|D|}Gini(D_i)$$\n其中，$k$ 表示特征 $A$ 的取值数目，$|D_i|$ 表示子数据集 $D_i$ 中样本的数目，$|D|$ 表示当前节点的样本数目，$Gini(D_i)$ 表示子数据集 $D_i$ 的基尼指数，计算公式为：\n$$Gini(D_i)=1-\\sum_{j=1}^{c}p_{ij}^2$$\n其中，$c$ 表示类别数目，$p_{ij}$ 表示子数据集 $D_i$ 中属于第 $j$ 类的样本占比。\n基尼指数越小表示使用特征 $A$ 进行划分后，得到的子数据集的纯度越高。因此，决策树算法选择基尼指数最小的特征作为最优特征进行划分。\n计算特征阈值(用信息增益表示特征阈值) 信息增益是评价特征重要性的一种指标，它表示特征 $x_j$ 对分类的贡献程度。信息增益越大，说明特征的重要性越高。可以通过以下公式计算信息增益：\n$$ \\begin{aligned} Gain(D,x_j) \u0026amp;= H(D) - \\sum_{i=1}^m \\frac{|D_i|}{|D|} H(D_i) \\\\ H \u0026amp;= -\\sum p(x) \\times log_2[p(x)] \\end{aligned} $$\n其中 $H(D)$ 表示数据集 $D$ 的熵，$m$ 表示特征 $x_j$的可能取值个数，$D_i$ 表示数据集 $D$ 在特征 $x_j$ 取值为 $i$ 时对应的子集，$|D_i|$ 表示子集 $D_i$ 的大小，$|D|$ 表示数据集 $D$ 的大小。 对特征 $x_j$ 的取值进行排序，得到一个有序的列表 $[x_1,x_2,\\cdots,x_m]$\n对于相邻的取值 $x_i$ 和 $x_{i+1}$，将它们作为特征阈值 $s$，将数据集划分为两个子集 $D_1={x\\in D|x_j\\leq s}$ 和 $D_2={x\\in D|x_j\u0026gt;s}$\n计算使用特征阈值 $s$ 进行划分的信息增益 $Gain(D,x_j,s)$\n根据 $x_j \\leq s$ 和 $x_j \u0026gt; s$ 将数据集 $D$ 划分为两个子集 $D_1$ 和 $D_2$ ，然后计算信息增益 $$Gain(D,x_j,s) = H(D) - \\frac{|D_1|}{|D|} H(D_1) - \\frac{|D_2|}{|D|} H(D_2)$$\n重复步骤2和3，直到计算完所有相邻取值的信息增益为止。\n选择信息增益最大的特征阈值作为最终的特征阈值。\n筛选最优特征\n计算训练集的经验熵（entropy）$H(D)$，表示训练集中样本的不确定性\n对于每个特征$A$，计算其对训练集的条件熵（conditional entropy）$H(D|A)$，表示在特征$A$已知的条件下，训练集中样本的不确定性，公式为： $$H(D|A)=\\sum_{i=1}^{|A|} \\frac{|D_i|}{|D|} H(D_i)$$ 其中，$|A|$表示特征$A$可能的取值个数，$|D_i|$表示在特征$A$取值为第$i$个值时，训练集中样本的个数，$H(D_i)$表示在特征$A$取值为第$i$个值时，训练集中样本的经验熵。\n计算信息增益（information gain）$g(D,A)$，表示特征$A$对训练集划分的贡献程度，公式为： $$g(D,A)=H(D)-H(D|A)$$\n选择信息增益最大的特征作为当前节点的划分特征，将训练集划分成更加纯净的子集，并递归地重复上述步骤，直到所有子集都变得足够纯或达到预定的停止条件为止，生成一棵完整的决策树。\n需要注意的是，信息增益存在一个缺陷，即它倾向于选择可能取值较多的特征，因为这些特征往往可以划分出更多的子集。为了克服这个缺陷，可以使用其他的划分指标，例如基尼不纯度（Gini impurity）或者增益率（gain ratio），来选择最优的特征。 信息增益比（Information gain ratio） 信息增益比是信息增益的一种改进，它考虑了特征取值数目对信息增益的影响。可以通过以下公式计算信息增益比： $$Gain \\ ratio \\ (D,x_j) = \\frac{Gain(D,x_j)}{IV(x_j)}$$\n其中 $IV(x_j)$ 表示特征 $x_j$ 的固有值，表示特征 $x_j$ 取值的多样性，可以通过以下公式计算： $$IV(x_j) = - \\sum_{i=1}^m \\frac{|D_i|}{|D|} \\log_2 \\frac{|D_i|}{|D|}$$\n在特征 $x_j$ 的阈值为 $s$ 时，可以根据 $x_j \\leq s$ 和 $x_j \u0026gt; s$ 将数据集 $D$ 划分为两个子集 $D_1$ 和 $D_2$，然后计算信息增益比。 总结 以上三种方法都可以用于计算特征阈值，其中基尼指数适用于连续和离散特征，而信息增益和信息增益比适用于离散特征。在实际应用中，我们可以根据具体问题选择不同的评价指标来计算特征阈值，并选择最优的阈值来进行样本划分。 结点判定规则 假设第 $t$ 个节点的判定规则为 $f_t(x)$，其中 $x$ 表示一个样本的特征向量，$f_t(x)$ 返回一个取值为 $0$ 或 $1$ 的标记，表示该样本应该进入该节点的左子树（$f_t(x)=0$）还是右子树（$f_t(x)=1$）。可以将判定规则表示为：\n$$f_t(x) = \\begin{cases} 0, \u0026amp; \\text{if}\\ x \\in R_{t,\\text{left}} \\ 1, \u0026amp; \\text{otherwise} \\end{cases}$$\n其中 $R_{t,\\text{left}}$ 是第 $t$ 个节点左子树的样本所在区域，可以用一个特征阈值组合来表示：\n$$R_{t,\\text{left}} = {x | x_j \\leq s_t}$$\n其中 $x_j$ 表示样本 $x$ 的第 $j$ 个特征的取值，$s_t$ 是第 $t$ 个节点的特征阈值。右子树的样本所在区域可以表示为 $R_{t,\\text{right}} = { x | x_j \u0026gt; s_t }$。\n树的结构 决策树模型的树的结构可以用一个树形图或者一组规则来表示。假设决策树模型的根节点为 $t=1$，可以用以下的数学公式来表示该模型：\n$$\\hat{y}i = \\sum{t=1}^T c_t \\cdot I(x_i \\in R_{t})$$\n其中 $\\hat{y}_i$ 表示用决策树模型预测样本 $i$ 的目标值，$T$ 表示树的深度或节点个数，$c_t$ 表示第 $t$ 个节点的预测值，可以是该节点所属的样本的平均值或者分类问题中该节点所属的样本中出现最多的类别值， $I(x_i \\in R_t)$ 是一个指示函数，如果样本 $i$ 属于第 $t$ 个节点的子树，取值为 $1$，否则取值为 $0$\n代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import pandas as pd from sklearn.tree import DecisionTreeClassifier, export_graphviz from sklearn.preprocessing import OneHotEncoder import graphviz df = pd.read_excel(\u0026#39;~/数模/原表格.xlsx\u0026#39;,header=None) X = df.iloc[1:98, [2,3,4,8,24]] y = df.iloc[1:98, 26] y = y.astype(\u0026#39;str\u0026#39;) model = DecisionTreeClassifier(criterion=\u0026#39;gini\u0026#39;, splitter=\u0026#39;best\u0026#39;,max_depth=3, max_features=5, min_samples_split=3) model.fit(X, y) # 将树可视化为图形 dot_data = export_graphviz(model, out_file=None, feature_names=[\u0026#39;年龄\u0026#39;,\u0026#39;术前CEA\u0026#39;,\u0026#39;距肛距离\u0026#39;,\u0026#39;放疗与手术时间差(W)\u0026#39;,\u0026#39;阳性淋巴结初始数量估计\u0026#39;], class_names= [\u0026#39;LRG0\u0026#39;,\u0026#39;LRG1\u0026#39;,\u0026#39;LRG2\u0026#39;,\u0026#39;LRGX\u0026#39;], filled=True, rounded=True, special_characters=True) graph = graphviz.Source(dot_data) graph.render(\u0026#34;决策树\u0026#34;) graph.view() 随机森林 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import pandas as pd from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestClassifier from sklearn.metrics import accuracy_score # 读取数据集 df = pd.read_excel(\u0026#39;\u0026#39;, sheet_name=\u0026#39;\u0026#39;) X = df.iloc[:, 1:6] y = df.iloc[:, 0] # 如果标签是字符 y = y.astype(\u0026#39;str\u0026#39;) # 划分数据集为训练集和测试集 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # 创建随机森林模型 model = RandomForestClassifier(n_estimators=10, criterion=\u0026#39;gini\u0026#39;, max_depth=3, max_features=3, min_samples_split=10) # 在训练集上训练模型 model.fit(X_train, y_train) # 在测试集上进行预测 y_pred = model.predict(X_test) # 计算模型在测试集上的准确性 accuracy = accuracy_score(y_test, y_pred) print(\u0026#34;模型在测试集上的准确性：\u0026#34;, accuracy) XGBoost(eXtreme Gradient Boosting) + 网格搜索 + 交叉验证 原理 网格搜索 穷举所有给出的参数取值的组合\n根据交叉验证计算模型质量\n给出质量最高的模型\n交叉验证 将数据集分成k个相等大小的子集（折）。\n对于每个折，将其作为验证集，剩余的k-1个折作为训练集。\n使用训练集进行模型的训练，并在验证集上进行性能评估。\n计算模型在当前折上的评估指标（如准确率、F1 分数、均方误差等）。\n重复步骤2-4，直到每个折都作为验证集并得到了一个评估指标。\n统计k次评估指标的平均值作为模型的最终评估结果。\nXGBoost 梯度提升树原理：XGBoost是基于梯度提升树（Gradient Boosting Tree）的算法。梯度提升树是一种迭代的集成学习算法，通过迭代地训练一系列决策树来逐步改进模型的预测能力。每个新的决策树都会尝试纠正前一棵树的预测误差，从而逐步减小模型的残差。\nXGBoost的目标函数：XGBoost的目标函数由两部分组成：损失函数（Loss Function）和正则化项（Regularization Term）。损失函数衡量模型的预测误差，正则化项控制模型的复杂性。目标函数的目标是最小化损失函数和正则化项的和。\n模型训练步骤：XGBoost的模型训练步骤如下：\n初始化模型：将初始预测值设为全局平均值（或使用先验概率）。\n迭代训练：对于每一轮迭代：\n计算残差：计算当前模型的预测值与实际值之间的残差。\n训练一个决策树：使用残差作为目标值，训练一个决策树模型。决策树的构建过程采用贪婪算法，通过优化目标函数来确定最佳的分裂点。\n更新模型：根据学习率（步长）和决策树的输出，更新模型的预测值。\n正则化：根据正则化项对树的结构进行修剪，以控制模型的复杂性。\n重复步骤b，直到达到预先设定的迭代次数（即树的数量）或达到停止条件。\n预测步骤：使用训练好的模型进行预测时，将待预测样本输入到每棵树中，根据树的结构和叶子节点的预测值得到最终的预测结果。最终的预测结果由所有树的预测值加权求和得到。 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import pandas as pd import xgboost as xgb from sklearn.model_selection import train_test_split, GridSearchCV from sklearn.metrics import accuracy_score # 读取数据集 df = pd.read_excel(\u0026#39;~/数模/2020C/附件/指标选择.xlsx\u0026#39;, sheet_name=\u0026#39;第一题\u0026#39;) X = df.iloc[:, 1:6] y = df.iloc[:, 0] # 划分数据集为训练集和测试集 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # 将数据集转换为XGBoost专用的DMatrix格式 dtrain = xgb.DMatrix(X_train, label=y_train) # 定义初始参数范围 param_grid = { \u0026#39;max_depth\u0026#39;: [3, 4, 5], # 树的最大深度 \u0026#39;eta\u0026#39;: [0.1, 0.01, 0.001], # 学习率 \u0026#39;subsample\u0026#39;: [0.8, 0.9], \u0026#39;colsample_bytree\u0026#39;: [0.8, 0.9], } # 创建模型 model = xgb.XGBClassifier(objective=\u0026#39;multi:softmax\u0026#39;, num_class=4) # 多分类问题，类别数 # 定义网格搜索对象 grid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=5) # 在训练集上进行网格搜索 grid_search.fit(X_train, y_train) # 输出最佳参数组合 print(\u0026#34;最佳参数组合：\u0026#34;, grid_search.best_params_) # 使用最佳参数的模型进行预测 y_pred = grid_search.predict(X_test) # 计算模型在测试集上的准确性 accuracy = accuracy_score(y_test, y_pred) print(\u0026#34;模型在测试集上的准确性：\u0026#34;, accuracy) Adaboost (Adaptive Boosting) 原理 AdaBoost是一种集成学习算法，用于提高分类器的准确性。它通过迭代地训练一系列弱分类器（即在某个特定任务上表现略好于随机猜测的分类器），并将它们组合成一个强分类器。\n下面是AdaBoost算法的基本原理：\n初始化样本权重：对于包含N个样本的训练集，初始时每个样本的权重相等，即1/N。\n迭代训练弱分类器：对于每个迭代轮次t（从1到T），进行以下步骤：\n使用当前样本权重训练一个弱分类器（例如决策树桩），得到分类器ht。\n计算分类器ht在训练集上的误差率εt，即被错误分类的样本的权重之和。\n计算分类器ht的权重系数αt，αt = 0.5 * ln((1-εt)/εt)。这个权重系数表示分类器ht在最终的强分类器中的重要程度，当分类器的误差率较低时，其权重系数会更大。\n更新样本权重：根据样本是否被分类器ht正确分类来更新样本的权重，被错误分类的样本的权重会增加，而被正确分类的样本的权重会减少。\n构建强分类器：将每个弱分类器的预测结果乘以其权重系数αt，并将它们线性组合得到最终的强分类器。\n预测：使用强分类器对新样本进行预测。对于二分类问题，预测结果是通过对弱分类器的预测结果进行加权投票得到的。\n代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 import pandas as pd from sklearn.model_selection import train_test_split, GridSearchCV from sklearn.ensemble import AdaBoostClassifier from sklearn.metrics import accuracy_score # 读取数据集 df = pd.read_excel(\u0026#39;~/数模/2020C/附件/指标选择.xlsx\u0026#39;, sheet_name=\u0026#39;第一题\u0026#39;) X = df.iloc[:, 1:6] y = df.iloc[:, 0] # 划分数据集为训练集和测试集 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=36) # 创建AdaBoost模型 ada_model = AdaBoostClassifier() # 定义参数网格 param_grid = { \u0026#39;n_estimators\u0026#39;: [50, 100, 150], # 弱分类器数量 \u0026#39;learning_rate\u0026#39;: [0.1, 0.01, 0.001] # 学习率 } # 创建GridSearchCV对象 grid_search = GridSearchCV(estimator=ada_model, param_grid=param_grid, cv=5) # 在训练集上进行网格搜索 grid_search.fit(X_train, y_train) # 输出最佳参数组合 print(\u0026#34;最佳参数组合：\u0026#34;, grid_search.best_params_) # 使用最佳参数的模型进行预测 y_pred = grid_search.predict(X_test) # 计算模型在测试集上的准确性 accuracy = accuracy_score(y_test, y_pred) print(\u0026#34;模型在测试集上的准确性：\u0026#34;, accuracy) # 针对数据量较小的模型 \u0026#39;\u0026#39;\u0026#39; # 创建AdaBoost模型 ada_model = AdaBoostClassifier(n_estimators=50, learning_rate=1.0) # 在训练集上拟合AdaBoost模型 ada_model.fit(X_train, y_train) # 使用训练好的模型进行预测 y_pred = ada_model.predict(X_test) # 计算模型在测试集上的准确性 accuracy = accuracy_score(y_test, y_pred) print(\u0026#34;AdaBoost模型在测试集上的准确性：\u0026#34;, accuracy) \u0026#39;\u0026#39;\u0026#39; SVM (Supporting Vector Machine) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 import pandas as pd from sklearn.model_selection import train_test_split, GridSearchCV from sklearn.svm import SVC from sklearn.metrics import accuracy_score # 读取数据集 df = pd.read_excel(\u0026#39;~/数模/2020C/附件/指标选择.xlsx\u0026#39;, sheet_name=\u0026#39;第一题\u0026#39;) X = df.iloc[:, 1:6] y = df.iloc[:, 0] # 划分数据集为训练集和测试集 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=36) # 创建SVM模型 svm_model = SVC() \u0026#39;\u0026#39;\u0026#39; C: 这个参数控制SVM中的正则化强度，它指定了对错误分类的惩罚。较小的C值会导致更宽的间隔，但可能会产生更多的错误分类；而较大的C值会导致更窄的间隔，但错误分类较少。在示例中，使用的取值为[0.1, 1, 10]。 kernel：SVM使用核函数将输入数据转换为更高维的特征空间，从而更容易找到一个分离超平面。可以使用不同的核函数，例如\u0026#39;linear\u0026#39;（线性核函数）、\u0026#39;rbf\u0026#39;（径向基函数）、\u0026#39;poly\u0026#39;（多项式核函数）等。在示例中，使用的选项为[\u0026#39;linear\u0026#39;, \u0026#39;rbf\u0026#39;]。 gamma：这个参数定义了每个训练样本的影响力。它指定了核函数的系数，控制了样本点对决策边界的影响程度。较小的gamma值表示影响范围较大，较大的gamma值表示影响范围较小。选项有 [\u0026#39;scale\u0026#39;, \u0026#39;auto\u0026#39;]。 \u0026#39;\u0026#39;\u0026#39; # 定义参数网格 param_grid = { \u0026#39;C\u0026#39;: [0.1, 1, 10], # 正则化参数 \u0026#39;kernel\u0026#39;: [\u0026#39;linear\u0026#39;, \u0026#39;rbf\u0026#39;], # 核函数 \u0026#39;gamma\u0026#39;: [\u0026#39;scale\u0026#39;, \u0026#39;auto\u0026#39;] # 核函数参数 } # 创建GridSearchCV对象 grid_search = GridSearchCV(estimator=svm_model, param_grid=param_grid, cv=5) # 在训练集上进行网格搜索 grid_search.fit(X_train, y_train) # 输出最佳参数组合 print(\u0026#34;最佳参数组合：\u0026#34;, grid_search.best_params_) # 使用最佳参数的模型进行预测 y_pred = grid_search.predict(X_test) # 计算模型在测试集上的准确性 accuracy = accuracy_score(y_test, y_pred) print(\u0026#34;模型在测试集上的准确性：\u0026#34;, accuracy) 模拟退火 （Simulated Annealing, SA) 数学原理和过程 (默认求最小值) 令$T = T_0$ 表示开始退火的初始温度，随机产生一个初始解$x_t$,并计算对应的目标函数值\n令$T= kT, k \\in (0,1)$, 为温度下降速率\n对当前解施加随机扰动，在其邻域内产生一个新解$x_{t+1}$，通过以下公式(MetroPolis 准则)判断是否接受这个解的概率\n$$ \\begin{aligned} P \u0026amp;= \\begin{cases} 1 \u0026amp; E_{t+1} \\le E_t \\\\ e^{\\dfrac{-(E_{t+1} - E_t)}{kT}} \u0026amp; E_{t+1} \\gt E_t \\end{cases} \\end{aligned} $$\n流程图 应用 用于VLSI(超大集成电路设计) 双退火代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from scipy.optimize import dual_annealing \u0026#39;\u0026#39;\u0026#39; scipy.optimize.dual_annealing(func, bounds, args=(), maxiter=1000, minimizer_kwargs=None, initial_temp=5230.0, restart_temp_ratio=2e-05, visit=2.62, accept=-5.0, maxfun=10000000.0, seed=None, no_local_search=False, callback=None, x0=None) func(x, *args): args是Optional bounds: (min,max) args: optional maxiter: 最大迭代次数, optional \u0026#39;\u0026#39;\u0026#39; 多元逻辑回归(Multinomial Logistic Regression) 原理 在多元逻辑回归中，我们有一个因变量（多类别）和多个自变量。假设有 k 个类别，我们需要建立 k-1 个二元逻辑回归模型来预测每个类别相对于某个基准类别的概率。\n数学上，多元逻辑回归使用 softmax 函数将线性组合的结果转化为概率分布。对于第 i 个类别（其中 i = 1, 2, \u0026hellip;, k-1），我们定义一个线性组合：\n$$ z_i = b_{i0} + b_{i1}x_1 + b_{i2}x_2 + \u0026hellip; + b_{ip}x_p $$\n通过应用 softmax 函数，我们可以计算每个类别的概率。对于第$i$个类别，其概率为： $$ P(Y=i|X) = exp(z_i) / (exp(z_1) + exp(z_2) + \u0026hellip; + exp(z_{k-1})) $$\n意义 训练多元逻辑回归模型的目标是最大化似然函数或最小化交叉熵损失函数。通常使用梯度下降等优化算法来寻找最优的系数。 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import pandas as pd import numpy as np from sklearn.linear_model import LogisticRegression # 提取数据 data1 = pd.read_excel(\u0026#39;~/2020C/附件/指标选择.xlsx\u0026#39;, sheet_name=\u0026#39;第一题\u0026#39;) data2 = pd.read_excel(\u0026#39;~/2020C/附件/指标选择.xlsx\u0026#39;, sheet_name=\u0026#39;第二题\u0026#39;) # 获取 训练集 预测集 X_train = data1.iloc[:, 1:6].to_numpy() y_train = data1.iloc[:, 0].to_numpy() # 将目标变量转换为整数类型 X_test = data2.iloc[:, 0:5].to_numpy() # 创建逻辑回归模型 model = LogisticRegression() # 训练模型 model.fit(X_train, y_train) # 使用模型进行预测 predictions = model.predict(X_test) # 企业代号 code = [\u0026#39;\u0026#39;]*302 for i in range(1, 303): code[i-1] += \u0026#39;E\u0026#39; + str(i) # 导出数据 data_out = pd.DataFrame({ \u0026#39;企业代号\u0026#39;: code, \u0026#39;企业信誉评级\u0026#39;: predictions }) data_out.to_excel(\u0026#39;第二题信誉评级.xlsx\u0026#39;, index = False) scipy.signal 卷积 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import numpy as np import scipy # 定义输入矩阵 A = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]) # 定义卷积核 B = np.array([[1, 0], [0, 1]]) # 使用 numpy.convolve2d 进行二维卷积操作 C = np.convolve2d(A, B, mode=\u0026#39;valid\u0026#39;) \u0026#39;\u0026#39;\u0026#39; mode有 full, valid, same \u0026#39;\u0026#39;\u0026#39; 采样 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import numpy as np from scipy import signal # 原始信号 original_signal = np.array([1, 2, 3, 4, 5]) # 伸缩因子 scaling_factor = 2 # 信号伸缩 resampled_signal = signal.resample(original_signal, len(original_signal) * scaling_factor) # 打印结果 print(\u0026#34;原始信号:\u0026#34;, original_signal) print(\u0026#34;伸缩后的信号:\u0026#34;, resampled_signal) 指标选择 基于熵权法的TOPSIS TOPSIS (Technique for Order Preference by Similarity to Ideal Solution) 定义 一种多属性决策分析方法,运用正理想解和负理想解的概念来解决多准则决策问题。 基本思想 正理想解是选择中各指标达到最优值的虚拟方案;\n负理想解是选择中各指标达到最劣值的虚拟方案;\n最优方案应该同时与正理想解的距离最近且与负理想解的距离最远。\n通过计算各方案与正负理想解的欧式距离,并结合距离正负理想解的相对接近度,来对可选方案进行排序和选择。\n优点 TOPSIS能够较为全面地考虑各个指标,并体现方案间的相对优劣,因此在多属性决策分析问题中被广泛使用。 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 import numpy as np import pandas as pd import math # 加载数据集 df = pd.read_excel(\u0026#39;Data1.xlsx\u0026#39;, sheet_name=\u0026#39;供应量\u0026#39;, usecols= [243, 245, 246], skiprows=1, header=None) # 对数据进行归一化处理 data_norm = (df - df.min()) / (df.max() - df.min()) # 计算每个指标的熵值 entropies = pd.Series([-sum(p * math.log2(p) for p in data_norm[col] if p \u0026gt; 0) for col in data_norm]) # 计算每个指标的权重 weights = (1 - entropies / sum(entropies)) # 正向指标和负向指标 I_plus = [0, 1] I_minus = [2] # 计算加权归一化决策矩阵 matrix = df.values weighted_norm_matrix = matrix for i in range(weighted_norm_matrix.shape[1]): weighted_norm_matrix[:,i] *= weights[i] # 确定正理想解和负理想解 A_plus = weighted_norm_matrix[:,I_plus].max(axis=0) A_minus = weighted_norm_matrix[:,I_minus].min(axis=0) # 计算欧式距离 diff_plus = weighted_norm_matrix[:, I_plus] - A_plus S_plus = np.sqrt(np.sum(diff_plus ** 2, axis=1)) diff_minus = weighted_norm_matrix[:, I_minus] - A_minus S_minus = np.sqrt(np.sum(diff_minus ** 2, axis=1)) # 计算相对接近度 C_i = S_minus/(S_plus + S_minus) # 按相对接近度C_i降序排序 order = np.argsort(-C_i) # 输出排序结果 for i in range(1, 403): index = order[i-1] print(f\u0026#34;第{i}重要的供应商是S{index+1}, 相对接近度C_i={C_i[index].round(4)}\u0026#34;) ","date":"2023-07-16T15:18:14+08:00","permalink":"https://downeyflyfan.com/p/python%E4%BB%A3%E7%A0%81%E5%82%A8%E5%A4%87/","title":"Python代码储备"},{"content":"Basic Current Mirrors 电路 $\\mu_n, C_{ox},W$ 一致\n$L$可以不同以提供增益\nCurrent $$ \\begin{aligned} I_{out} \u0026amp;= \\frac{1}{2} \\mu_n C_{ox} (W/L)1 (V{GS2} - V_{T2})^2 \\\\ I_{REF} \u0026amp;= \\frac{1}{2} \\mu_n C_{ox} (W/L)2 (V{GS1} - V_{T2})^2 \\end{aligned} $$\n$$ \\begin{equation} I_{out} = \\frac{(W/L)_2}{(W/L)1} \\cdot I{REF} \\end{equation} $$\nVoltage Gain(应用) $M_2,M_3$ 构成BCM, $M_1$是CS，$R_L$是$R_{out}$ $$ |A_v| = g_{m1} \\frac{(W/L)_3}{(W/L)_2}R_L $$\nCascode Current Mirrors 出发点 若考虑CLM $$ \\begin{aligned} I_{out} \u0026amp;= I_{REF} \\cdot \\frac{(W/L)2}{(W/L)1} \\cdot \\frac{ 1 + \\lambda V{DS1} }{ 1 + \\lambda V{DS2} } \\end{aligned} $$\n为了消除CLM的影响，必须使得$V_{DS1} = V_{DS2}$，即$V_X = V_Y$ Cascode Current Mirror $V_{p, min}$ 为了让$M_3$工作在Saturation Region $$ \\begin{aligned} V_p \u0026amp;\\ge V_N - V_{TH} \\\\ V_p \u0026amp;\\ge V_{GS0} + V_{GS1} - V_{TH} \\\\ V_p \u0026amp;\\ge V_{OV1} + V_{OV0} + V_{TH} \\end{aligned} $$\n$$ \\begin{equation} V_{p,min} = V_{OV1} + V_{OV0} + V_{TH} \\end{equation} $$\n选择适当的MOSFET 使得$\\dfrac{(W/L)_3}{(W/L)_0} = \\dfrac{(W/L)2}{(W/L)1}$, 这样可以满足$V_X = V_Y$, 从而$I{REF} = I{out}$, Low Voltage Cascode 电路图 (a)中实际上是Cascode Stage Shorted\n(b)即是Low Voltage Cascode\n$V_b$范围 为了让$M_1, M_2$工作在Saturation Region $$ \\begin{aligned} V_X \u0026amp;\\ge V_b - V_{TH2} \\\\ V_{GS1} \u0026amp;\\ge V_b - V_{TH2} \\\\\\ \\\\ V_A \u0026amp;\\ge V_{GS1} - V_{TH1} \\\\ V_{b} - V_{GS1} \u0026amp;\\ge V_{GS1} - V_{TH1} \\end{aligned} $$\n$$ \\begin{equation} V_{GS2} + (V_{GS1} - V_{TH1}) \\le V_b \\le V_{GS1}+ V_{TH2} \\end{equation} $$\n进一步处理不等式 $$ \\begin{equation} V_{GS2} \\le V_{TH1} + V_{TH2} \\end{equation} $$\n改良 $M_S$ is biased such that $V_{GS s} \\approx V_{TH3}$ $$ \\begin{aligned} V_{N\u0026rsquo;} \u0026amp;\\approx V_N - V_{TH3} \\\\ \\therefore V_B \u0026amp;\\approx V_{N\u0026rsquo;} - V_{GS3} \\\\ \u0026amp;= V_{GS0} + V_{GS1} - V_{TH3} - V_{GS3} \\\\ \u0026amp;= V_{GS1} - V_{TH3} \\end{aligned} $$\n$$ \\begin{equation} V_B \\approx V_{GS1} - V_{TH3} \\end{equation} $$\n题解 $I_{REF}$工作的最小电压为$0.5V$ $$ \\begin{aligned} V_N \u0026amp;= V_{GS0} + V_{GS1} \\\\ \u0026amp;= \\sqrt{\\frac{2I_{REF}}{k_{n0}}} - \\sqrt{\\frac{2I_{REF}}{k_{n1}}} + V_{TH1} + V_{TH0} \\\\ \\because V_{DD} - V_N \u0026amp;= 0.5V \\\\ \\therefore I_{REF} \u0026amp;= \\frac{1}{2}\\mu_nC_{ox}\\frac{(V_{DD} - V_{TH1} - V_{TH2} - 0.5)^2}{(\\sqrt{(L/W)_0} + \\sqrt{(L/W)_1})^2} \\end{aligned} $$\nActive Current Mirrors Voltage Gain Method I Caculate $G_m$ from (b) $$ \\begin{aligned} |A_v| \u0026amp;= G_m R_{out} \\\\ G_m \u0026amp;= \\frac{I_{out}}{V_{in}} \\\\ \u0026amp;= \\frac{\\dfrac{1}{2} g_{m1} V_{in}}{V_{in}} \\\\ \u0026amp;= \\frac{1}{2}g_{m1} \\end{aligned} $$\nCaculate Gain from (c) $$ \\begin{aligned} R_2 \u0026amp;= 2r_{o2} + \\frac{1}{g_{m1}} \\\\ \u0026amp;\\approx 2r_{o2} \\\\ \\therefore R_{out} \u0026amp;\\approx 2r_{o2} || r_{o4} \\\\ \\therefore |A_v| \u0026amp;\\approx \\frac{g_{m1}}{2} (2r_{o2} || r_{o4}) \\end{aligned} $$\n$$ \\begin{equation} |A_v| \\approx \\frac{g_{m1}}{2} (2r_{o2} || r_{o4}) \\end{equation} $$\nif $r_{04} \\longrightarrow \\infin$ $$ \\begin{equation} |A_v| = g_{m1} r_{02} \\end{equation} $$\nMethod II $$ \\begin{aligned} A_v \u0026amp;= \\frac{V_{out}}{V_{in}} \\\\ \u0026amp;= \\frac{V_{out}}{V_p} \\times \\frac{V_P}{V_{in}} \\\\ \\frac{V_P}{V_{in}} \u0026amp;= \\frac{R_{eq}}{R_{eq} + \\dfrac{1}{g_{m1}}} \\\\ R_{eq} \u0026amp;= \\frac{1}{g_{m2}} + \\frac{r_{o4}}{g_{m2}r_{o2}} \\\\ \u0026amp;= \\frac{1}{g_{m2}}(1+\\frac{r_{o4}}{r_{o2}}) \\\\ \\therefore \\frac{V_P}{V_{in}} \u0026amp;= \\frac{1 + \\dfrac{r_{o4}}{r_{o2}}}{2 + \\dfrac{r_{o4}}{r_{o2}}} \\\\ \\frac{V_{out}}{V_p} \u0026amp;= \\frac{r_{o2} + \\dfrac{1}{g_{m2}}}{R_{eq}} \\\\ \u0026amp;= \\frac{1 + g_{m2}r_{o2}}{1 + \\dfrac{r_{o2}}{r_{o4}}} \\\\ \u0026amp;\\approx \\frac{g_{m2}r_{o2}}{1 + \\dfrac{r_{o2}}{r_{o4}}} \\\\ \\therefore |A_v| \u0026amp;= \\frac{g_{m2}}{2} [(2r_{o2}) || r_{o4}] \\end{aligned} $$\nLarge Signal Analysis 实例解析 $V_{DD}$ $M_1$ $M_2$ $M_3$ $M_4$ $M_5$ $[V_{GS4} + 1.5V - V_{TH2}, 3V$] All Saturation $[X, V_{GS4} + 1.5V - V_{TH2}]$ Triode Triode Triode Triode Saturation $[0,X]$ All Triode Small Signal Analysis 电路图 Voltage Gain Method I 计算$G_m$ $$ \\begin{aligned} I_{D1} \u0026amp;= |I_{D3}| = |I_{D4}| \\\\ \u0026amp;= \\frac{ g_{m 1,2} V_{in}}{ 2 } \\\\ I_{D2} \u0026amp;= - \\frac{ g_{m2} V_{in} }{ 2 } \\\\ \\therefore I_{out} \u0026amp;= g_{m1,2} V_{in} \\\\ \\therefore G_m \u0026amp;= g_{m1,2} \\end{aligned} $$\n计算$R_{out}$ $$ \\begin{aligned} I_X \u0026amp;= 2 \\frac{ V_X }{ 2r_{o1,2} + \\dfrac{ 1 }{ g_{m3} } || r_{o3}} + \\frac{ V_X }{ r_{04} } \\end{aligned} $$\nif $2r_{o1,2} \\gg \\dfrac{ 1 }{ g_{m3}} || r_{03}$\n$$ \\begin{aligned} R_{out} \u0026amp;= r_{o1,2} || r_{o4} \\end{aligned} $$\nGain $$ \\begin{equation} |A_v| = g_{m1,2} (r_{o2} || r_{o4}) \\end{equation} $$\nCommon Mode Property 电路图 Gain 注意，$r_{o3,4} \\gg \\dfrac{ 1 }{ g_{m3,4} }$ $$ \\begin{equation} \\begin{aligned} A_{CM} \u0026amp;\\approx \\frac{ - \\dfrac{ 1 }{ 2g_{m3,4}} || \\dfrac{ r_{o3,4} }{ 2 } }{\\dfrac{ 1 }{ 2g_{m1,2}} + R_{SS}} \\\\ \u0026amp;= \\frac{ -1 }{ 1 + 2g_{m1,2} R_{SS} } \\cdot \\frac{ g_{m1,2} }{ g_{m3,4} } \\end{aligned} \\end{equation} $$\nCMMR $$ \\begin{equation} \\begin{aligned} CMMR \u0026amp;= | \\frac{ A_{DM} }{ A_{CM}} | \\\\ \u0026amp;= g_{m3,4} (r_{o1} || r_{o2}) ( 1 + g_{m1,2}) \\end{aligned} \\end{equation} $$\n附录 MOSFET参数 $\\mu_n, V_{TH}$ 受温度影响 Headroom Voltage 余量电压是指在电路设计中，为了确保电器或电子设备正常工作，需要提供的超过最低电压要求的额外电压。它表示电路中电源电压与电器或电子设备所需电压之间的差值。\n","date":"2023-07-15T18:37:12+08:00","permalink":"https://downeyflyfan.com/p/5.-passive-and-active-current-mirror/","title":"5. Passive and Active Current Mirror"},{"content":"Section I Quality Attributes Operational Quality Attributes\nNon-Operational Quality Attributes\nEmbedded Firmware The control algorithm (Program instructions) and or the configuration settings that an embedded system developer dumps into the code (Program) memory of the embedded system.\nComponents for Embedded Programs State Machine Circular Buffers Queue Models of Program Data Flow Graph (Basic Block) 没有条件/循环语句的一个代码块 Control / Data Flow Graph 把Basic Block作为基本元素 Compilation Techniques Frame 定义 当一个函数被调用时，一个新的frame会被创建并压入堆栈中，在函数执行结束后，这个frame会从堆栈中弹出并销毁。这个过程也被称为“函数调用栈”或“运行时堆栈”。 原理 Stack Pointer 指向当前帧的结尾\nFrame Pointer 指向上一个帧的结尾\nCompilation of an Arithmetic Expression \u0026amp; Register Allocation Optimisation Example Optimization 变量数超过寄存器数时，需要重复利用某些寄存器以优化代码\n在此例中，最多只要3个寄存器\n伪代码\n1 2 3 4 5 6 7 8 9 10 11 Load r1, a Load r2, b ADD r1, r1, r2 ; now r2 is free Load r2, c Load r3, d ADD r2,r2,r3 SUB r1,r1,r2 ; now r2 and r3 are free Load r2, e ADD r1, r1, r2 Testing Techniques 黑盒测试分类 Function Testing 测试功能可不可用 Non-functional Testing 测试怎么实现功能 Regression Testing 测试更新后的软件性能是否下降了 白盒/黑盒比较 比较项目 White-Box Testing Black-Box Testing(functional testing) 测试前的数据 测试前对硬件和软件都了如指掌 测试前只知道输入和输出 (时间和经济)成本 高 低 复杂度 高 低 对测试者的知识储备要求 高 低 效果 高 相对较差 Debugging Debug \u0026amp; Test Debug: Given a symptom of software failure, locate and correct the defect.\nTest: Executing a program to see if it performs as expected.\n选择Debug工具 ESC (Easy Use, Special Capability, Cost) Debug 工具 Burn and Learn stateDiagram 写(修改)代码 --\u003e 编译 编译 --\u003e 测试 测试 --\u003e 写(修改)代码 Software Simulation I/O: Waveforms, Register Log, Digital Signal, Manual Input Oscilloscope\nLogic Analyzer\nPros Cons 高效 external memory bus 贵 只能监测I/O,而不是内存活动 Hardware Emulation In-Circuit Emulation (ICE) More Powerful, more expensive In-Circuit Debug (ICD) Section II Embedded Firmware – Design and Development Super Loop 定义 经典循环, 时序进行\n任务简单，对时间没有要求\n例子 优缺点 Pros Cons 简单 错一点就会死机 没OS 非实时 省内存 改进 加个中断，从而可以执行实时任务 Embedded OS based Approach RTOS (Real-Time OS) GPOS (Customized General-Purpose OS)\n比较\nScheduling 基本概念 TAT (Turn Around Time) 从进入序列(开始排队)到运行结束 Waiting Time Non-preemptive FIFO/FCFS(First-Come-First-Served)) LIFO/LCFS SJF(Shortest Job First) Priority-Based Scheduling 优缺点综述 SJF + PBS 会出现Starvation Preemptive Preemptive SJF Scheduling / Shortest Time(SRT) 每当有新的任务进入队列，系统会重新计算SRT，并重新调整当前执行任务 Round Robin (RR) Ready Queue Ready Queue中的程序都执行*Pre-defined Time** Preemptive Priority-Based Scheduling Rate Monotonic (RM) Scheduling Algorithm 根据时间给任务安排优先级\n但是任务时间是很难预测的\n附录 Firmware 装载ROM上的软件, 提供最底层的操作 ","date":"2023-05-26T16:49:31+08:00","permalink":"https://downeyflyfan.com/p/6.-embedded-system-software-design-testing-and-debugging/","title":"6. Embedded System Software Design, Testing, and Debugging"},{"content":"基本格式 语法 Label Symbolic Labeling of an assembler address mnemonic Symbolic description of the operation operands 操作数 Contains of variables or addresses if necessary comments 用;表示，Optional Field 地址 Endianess (Bit Order) The ARM processor is little endian by default; and can be programmed to operate as big endian Wtite Assembly for ARM 回顾 ISA (Istruction Set Architecture) 信息的获取和存储 Memory\nRegister\nI/O Devices\n信息的处理 Assembly-Language Instructions\nHardware Process Actions\nRISC Load Store Data Path \u0026amp; Control Unit Instruction Pipelines 重要单元结构 Arm Register File PC 存储下一条指令的地址 Cortex-M Memory Map (内存图) 32位支持$2^{32} = 2^{30} \\times 2^2 =4G$ 内存\nCode、Data、I/O 共用内存\n数据类型: Bytes, words, halfwords\n内存地址类型: Bytes\nVendor Specifc: 针对某个厂商的 Data Path \u0026amp; Control Unit Instructions Arithmatic、Logic、Comparison Operation\nData Movement between Registers\nRegisters Saved Register: R4-R11, hold variables\nTemporary Register: R0-R3, R12, hold intermediate values\n指令 助记符 标志位 标签 ARM Cortex-M的汇编指令 MOV 寄存器之间移动 MVN MOVE and NOT, 取反并移动 LDR LOAD, 从内存(操作数2)中加载到寄存器(操作数1)中 STR STORE, 从寄存器(操作数1)中存储到内存(操作数2)中 [a,b] 地址a+b ADR(伪指令) Address, 让寄存器指向后面的地址 ADD 相加 ADC 带进位的加法运算 SUB 相减 SBC 带进位的减法运算 AND 按位与 BIC(Bit Clean) 按位与非,将第一个操作数中对应的第二个操作数中为1的位清零 ORR 按位或 LSL(Logical Shift Left) 左移 LSR 右移 MUL 乘法($32bit \\times 32bit = 32bit$),结果没有影响 CMP 比较 EOR Exclusive OR, 异或 ARM ALU* Conditional Flag (CNVZ) 标识位解释 N Negative, 负标志位 Z Zero, 零标志位(若相等，零标志位=1) C Carry, 进位标志位 V Overflow, 溢出标志位 助记符 NE 不等于 EQ 等于 MI Morse Code International, 当标志位N=1时执行指令 示例(Conditional Opcode) 1 2 CMP R1 R2 SUBNE R3, R5, R8 ; 只有当R1 != R2 时才能执行SUB Branching 1 2 3 4 5 6 MOV R2 #17 B TARGET ORR R1, R4, #14 TARGET SUB R1, R1, #78 ; TARGET就是Label 用汇编写C MAX函数 1 2 3 4 5 6 7 8 int main(){ int max = 0, a = 2, b = 3; if (a \u0026lt; b) max = b; else max = a; return max; } 1 2 3 4 5 6 7 8 9 10 11 12 13 MAIN MOV R1 #2 MOV R2 #3 CMP R1 R2 BLT LOWER MOV R0 R1 B END LOWER MOV R0 R2 B END END BX LR 循环 1 2 3 4 5 6 int main(){ int a = 0; while (a \u0026lt; 4) a += 1; return a; } 1 2 3 4 5 6 7 8 9 MAIN MOV R0 #0 WHILE CMP R0 #4 BEQ END ADD R0 #1 B WHILE END BX LR 指数运算 1 2 3 4 5 6 7 int pow = 1; int x = 0; while (pow !=128) { pow*=2; x+=1; } 1 2 3 4 5 6 7 8 9 10 11 12 R0 = pow, R1 = x MOV R0 #1 MOV R1 #0 WHILE CMP R0 #128 BEQ DONE LSL R0 #1 ADD R1 #1 B WHILE; 重复循环 DONE 附录 #代表立即数 ","date":"2023-05-25T10:21:04+08:00","permalink":"https://downeyflyfan.com/p/5.%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/","title":"5.汇编基础"},{"content":"要求 时长 15min 组成 Introduction\n2+ approaches\nEvaluation\nOthers\n要求 IEEE 格式引用\nslide\nfull names\nuniversity email addresses\n最多15张\nNo gifs \u0026amp; Video\n","date":"2023-05-15T15:56:36+08:00","permalink":"https://downeyflyfan.com/p/presentation/","title":"Presentation"},{"content":"Introduction Properties of Ideal Amplifier $CMRR = \\infin$ $Band \\ Width = \\infin$ $R_{in} = \\infin$ $R_{out} = 0$ $\\eta = 1$ 没有温飘 First-Order Op-Amp Fundamental Circuit Structure 电路结构图 增益 $$ \\begin{equation} A_v \\approx g_{mN} (r_{oP} || r_{oN}) \\end{equation} $$\nTelescope Cascode Op Amp 电路图 增益 $$ \\begin{equation} A_v \\approx g_{mN} [ (g_{mN} r_{oN}^2)|| (g_{mP} r_{oP}^2)] \\end{equation} $$\nOutput Swing To saturate $M_2, M_4$ $$ \\begin{aligned} V_{out} \u0026amp;\\ge V_b- V_{TH4} \\\\ V_X \u0026amp;\\ge V_{out} - V_{TH2} \\end{aligned} $$\n$$ \\begin{equation} V_b - V_{TH4} \\le V_{out} \\le V_b - V_{GS4} + V_{TH2} \\end{equation} $$\nPoles $\\uparrow$ Folded Cascode Op Amp 电路结构 $$ \\begin{aligned} I_{SS1} \u0026amp;= I_{SS} + \\frac{ I_{D3} }{ 2 } \\end{aligned} $$\n进阶版 电路图 增益 $$ \\begin{equation} A_v \\approx g_{m1} \\lbrace [(g_{m3} + g_{mb3})r_{o3} (r_{o1} || r_{o5})] || [(g_{m7} + g_{mb7}) r_{o7} r_{o9} ] \\rbrace \\end{equation} $$\n特点 增益相比Telescope Cascode Op Amp 小了 2 - 3 倍\n由于增加了$C_{GD5}$和$C_{DB5}$，极点更加靠近原点\n使用NMOS作为输入器件\n折叠点X对应的极点更低，由$\\dfrac{ 1}{ g_{m3} + g_{mb3} } \\downarrow$和 总电容($\\uparrow$) 决定\nSecond-Order Op-Amp 基本电路结构 高增益 需要频率补偿 $A_v = A_{v1} \\cdot A_{v2}$\n","date":"2023-05-14T10:07:33+08:00","permalink":"https://downeyflyfan.com/p/9.-operational-amplifier/","title":"9. Operational Amplifier"},{"content":"General Considerations Miller\u0026rsquo;s Law $$ \\begin{aligned} Z \u0026amp;= Z_1 + Z_2 \\\\ \\frac{ V_X }{ Z_1 } \u0026amp;= \\frac{ V_Y }{ Z_2 } = \\frac{ V_X - V_Y }{ Z} \\end{aligned} $$\n$$ \\begin{align} Z_1 \u0026amp;= \\frac{ Z }{ 1 - A_v } \\\\ Z_2 \u0026amp;= \\frac{ Z }{ 1- \\dfrac{ 1 }{ A_v }} \\end{align} $$\n$A_v = \\dfrac{ V_{out} }{ V_{in} }$\n注意: $Z$和main signal path之间的关系很重要\nAssociation of Poles with Nodes General Case $$ \\begin{aligned} H(s) \u0026amp;= \\frac{V_{out}}{V_{in}}(s) \\\\ \u0026amp;= \\frac{A_1}{1 + sR_SC_{in}} \\frac{A_2}{1 + sR_1 C_N}\\frac{1}{1 + sR_2C_P} \\end{aligned} $$\nInput Example $$ \\begin{aligned} Input \\ Impedence \\ Z_{in} \u0026amp;= (1+A) C_F \\\\ f_p \u0026amp;= \\frac{1}{(1+A)R_SC_F} \\end{aligned} $$\nCG Stage With Parasitic Capacitances Neglecting CLM $$ \\begin{aligned} \\omega_{in} \u0026amp;= [C_S (R_S || \\frac{1}{g_{m1} + g_{mb1}})]^{-1} \\\\ \u0026amp;= [(C_{GS1} + C_{SB1})(R_S || \\frac{1}{g_{m1} + g_{mb1}})]^{-1} \\\\ \\omega_{out} \u0026amp;= [C_D R_D]^{-1} \\\\ \u0026amp;= [(C_{DG} + C_{DB}) R_D]^{-1} \\\\ \\therefore A_v \u0026amp;= \\frac{(g_m + g_{mb})R_D}{1 + (g_m + g_{mb})R_S} \\frac{1}{1 + s/\\omega_{in}}\\frac{1}{1 + s/\\omega_{out}} \\end{aligned} $$\nCommon-Source Stage High-frequency Model of CS Stage 电路图 Gain $C_{GD}$接在了输入和输出之间，因此根据Miller\u0026rsquo;s Law分别计算输出和输入阻抗 X to Ground $$ \\begin{aligned} Z_X \u0026amp;= C_{GS} + (1-A)C_{GD} \\\\ \\omega_{in} \u0026amp;= \\frac{1}{R_S [C_{GS} + (1 + g_mR_D)C_{GD}]} \\end{aligned} $$\n$V_{out}$ to Ground $$ \\begin{aligned} Z_X \u0026amp;= C_{DB} + (1-A^{-1})C_{GD} \\\\ \u0026amp;\\approx C_{DB} + C_{GD} \\\\ \\therefore \\omega_{out} \u0026amp;= \\frac{1}{R_S(C_{GS} + C_{GD})} \\end{aligned} $$\nwhen $R_S$ is large $$ \\begin{aligned} Z_X \u0026amp;= \\frac{1}{sC_{eq}} || ( \\frac{C_{GD} + C_{GS}}{C_{GD}} \\frac{1}{g_m}) (???) \\\\ \\therefore \\omega_{out} \u0026amp;= \\frac{1}{\\Big[ R_D || \\Big(\\dfrac{C_{GD} + C_{GS}}{C_{GD}} \\dfrac{1}{g_m}\\Big) \\Big] (C_{eq} + C_{DB})} \\\\ \\therefore \\frac{V_{out}}{V_{in}}(s) \u0026amp;= -\\frac{g_mR_D}{(1 + \\dfrac{s}{\\omega_{in}}) (1 + \\dfrac{s}{\\omega_{out}})} \\end{aligned} $$\nExact Transfer Function High-Frequency Small Signal Equivalent Circuit KCL方程 $$ \\begin{aligned} 0 \u0026amp;= (V_{out} - V_X) sC_{GD} + V_{out} ( \\frac{ 1 }{ R_D } + sC_{DB}) + g_mV_X\\\\ V_{X} \u0026amp;= \\frac{ 1 }{ 1 + s R_S C_{GS} } V_{in} \\end{aligned} $$\n$$ \\begin{equation} \\begin{aligned} \\therefore \\ H(s) \u0026amp;= \\frac{V_{out}}{V_{in}} \\\\ \u0026amp;= \\frac{(C_{GD}s - g_m)R_D}{R_SR_D\\xi s^2 + [R_S(1+g_mR_D)C_{GD} + R_SC_{GS} + R_D(C_{GD} + C_{DB})]s + 1} \\\\ \\xi \u0026amp;= C_{GS}C_{GD} + C_{GS}C_{DB} + C_{GD}C_{DB} \\end{aligned} \\end{equation} $$\nTwo Pole Systems $D$: demoninator，分母 $$ \\begin{equation} \\begin{aligned} D \u0026amp;= (1 + \\frac{s}{\\omega_{p1}})(1 + \\frac{s}{\\omega_{p2}}) \\\\ \u0026amp;= \\frac{s^2}{\\omega_{p1}\\omega_{p2}} + (\\frac{1}{\\omega_{p1}} + \\frac{1}{\\omega_{p2}})s + 1 \\\\ \\end{aligned} \\end{equation} $$\n如果$\\omega_{p2} \\gg \\omega_{p1}$，所以我们可以将s的系数近似看成$\\dfrac{1}{\\omega_{p1}}$\n进而根据$s^2$的系数求出$\\omega_{p2}$\n对于CS Stage, 有以下结论 $$ \\begin{equation} \\omega_{p1} = \\frac{1}{R_S(1+g_mR_D)C_{GD} + R_SC_{GS} + R_D(C_{GD} + C_{DB})} \\end{equation} $$\n$$ \\begin{equation} \\begin{aligned} \\omega_{p2} \u0026amp;= \\frac{1}{\\omega_{p1}} \\frac{1}{R_S R_D \\xi} \\\\ \u0026amp;= \\frac{R_S(1+g_mR_D)C_{GD} + R_SC_{GS} + R_D(C_{GD} + C_{DB})}{R_SR_D\\xi} \\end{aligned} \\end{equation} $$\n若 $C_{GS} \\gg (1+g_m R_D)C_{GD} + R_D(C_{GD} + C_{DB})/R_S$ $$ \\begin{aligned} \\omega_{p2} \u0026amp;\\approx \\frac{1}{R_D (C_{GD} + C_{DB})} \\end{aligned} $$\n与估算得到的结果相同 Summary of Approximation of Resistance 一级估计 $$ \\begin{aligned} Z_{in} \u0026amp;= \\frac{ 1 }{ s[C_{GS} + (1 +g_m R_D) C_{GD}] } \\end{aligned} $$\n高频估计(考虑输出结点的影响) $$ \\begin{aligned} Z_{in} \u0026amp;= \\frac{ 1 }{ s C_{GS} } || \\frac{ 1 + s R_D({C_{GD} +C_{DB}})}{ sC_{GD} ( 1 + g_m R_D + s R_D C_{DB})} \\end{aligned} $$\nSource Followers Ciurcuit \u0026amp; Small Signal Model Transfer Function and Poles KCL $$ \\begin{aligned} V_1C_{GS}s + g_mV_1 \u0026amp;= V_{out}C_Ls \\\\ \\therefore V_1 \u0026amp;= \\frac{C_Ls}{g_m + C_{GS}s}V_{out} \\end{aligned} $$\nKVL $$ \\begin{aligned} V_{in} \u0026amp;= R_S[V_1C_{GS}s + (V_1 + V_{out})C_{GD}s] + V_1 + V_{out} \\end{aligned} $$\nGain $$ \\begin{equation} \\frac{V_{out}}{V_{in}}(s) = \\frac{g_m + C_{GS}s}{R_S\\xi s^2 + (g_mR_SC_{GD} + C_L + C_{GS})s + g_m} \\end{equation} $$\nPoles \u0026amp; Zeros $$ \\begin{aligned} \\therefore \\omega_{p1} \u0026amp;\\approx \\frac{g_m}{g_mR_SC_{GD} + C_L + C_{GS}} \\\\ \u0026amp;= \\frac{1}{R_SC_{GD} + \\dfrac{C_L + C_{GS}}{g_m}} \\end{aligned} $$\n如果 $R_S = 0$ $$ \\begin{aligned} \\omega_{p1} \u0026amp;= \\frac{g_m}{C_L + C_{GS}} \\end{aligned} $$\nZeros $$ \\begin{equation} \\omega_z = -\\frac{ g_m }{ C_{GS}} \\end{equation} $$\nImpedence Input Impedence $C_{GD}$ shunts the input, neglected. $$ \\begin{aligned} V_X \u0026amp;= \\frac{I_X}{C_{GS}s} + (I_X + \\frac{g_m I_X}{C_{GS}s}) (\\frac{1}{g_{mb}} || \\frac{1}{C_Ls}) \\\\ Z_{in} \u0026amp;= \\frac{1}{C_{GS}s} + (1 + \\frac{g_m}{C_{GS}s})\\frac{1}{g_{mb} + C_L s} \\\\ Low \\ Frequency: \\\\ g_{mb} \u0026amp;\\gg |C_Ls| \\\\ \\therefore Z_{in} \u0026amp;\\approx \\frac{1}{C_{GS}s}(1 + \\frac{g_m}{g_{mb}}) + \\frac{1}{g_{mb}} \\end{aligned} $$\nOutput Impedence Common-Gate Stage $$ \\begin{aligned} \\frac{V_{out}}{V_{in}}(s) \u0026amp;= \\frac{(g_m + g_{mb})R_D}{1 + (g_m + g_{mb})R_S} \\frac{1}{\\Big(1 + \\dfrac{C_S}{g_m + g_{mb} + \\dfrac{1}{R_S}}s \\Big) (1 + R_DC_D s)} \\\\ \\therefore Z_{in} \u0026amp;\\approx \\frac{Z_L}{(g_m + g_{mb})r_o} + \\frac{1}{g_m + g_{mb}} \\\\ Z_L \u0026amp;= R_D || [1/(s C_D)] \\end{aligned} $$\nCascode Stage $$ \\begin{aligned} \\omega_{p,A} \u0026amp;= \\frac{1}{R_S \\Big[C_{GS1} + \\Big( 1 + \\dfrac{g_{m1}}{g_{m2} + g_{mb2}})C_{GD1}]} (???)\\\\ \\omega_{p,X} \u0026amp;= \\frac{g_{m2} + g_{mb2}}{2C_{GD1} + C_{DB1} + C_{SB1} + C_{GS2}} \\\\ \\omega_{p,Y} \u0026amp;= \\frac{1}{R_D(C_{DB2} + C_L + C_{GD2})} \\end{aligned} $$\nAppendix Poles and Zeros Poles Zeros 使得增益无穷大(分母为0的点) 使得增益为0的点(分子为0的点) ","date":"2023-05-10T13:44:17+08:00","permalink":"https://downeyflyfan.com/p/6.-frequency-response/","title":"6. Frequency Response"},{"content":"Low Frequency Response of the Common-Source Amplifiers CS Amplifier 电路 原电路 变换电路 分析 $$ \\begin{aligned} A_v \u0026amp;= \\frac{V_o}{V_{i}} \\\\ \u0026amp;= \\frac{V_o}{V_{sig}} \\\\ \u0026amp;= \\frac{V_g}{V_{sig}} \\frac{I_d}{V_g} \\frac{V_o}{I_d} \\\\\\ \\\\ V_g \u0026amp;= \\frac{R_G}{R_G + \\frac{1}{j\\omega C} + R_{sig}}\\\\ \u0026amp;= V_{sig} \\frac{R_G}{R_G + R_{sig}}\\frac{j\\omega}{j\\omega + \\frac{1}{C_{C1}(R_G + R_{sig})}} \\\\ \\omega_{P1}\u0026amp;=\\omega_0 \\\\\n\u0026amp;= \\frac{1}{C_{C1}(R_G + R_{sig})} \\\\\\ \\\\ I_d \u0026amp;= I_S \\\\ \u0026amp;= \\frac{V_g}{1/g_m + Z_S} \\\\ \u0026amp;= V_gg_m \\frac{\\frac{1}{C_SR_S} + j\\omega}{\\frac{g_mR_S + 1}{C_SR_S} + j\\omega} \\\\ \\omega_{P2} \u0026amp;= \\omega_0 \\\\ \u0026amp;= \\frac{g_m + 1/R_S}{C_S}\\\\\\ \\\\ V_o \u0026amp;= I_oR_L \\\\ \u0026amp;= -I_d \\frac{R_DR_L}{R_D + R_L + \\frac{1}{j\\omega C_{C2}}} \\\\ \u0026amp;= -I_d \\frac{R_DR_L}{R_D + R_L}\\frac{j\\omega}{j\\omega + \\frac{1}{C_{C2}(R_D+R_L)}} \\\\ \\omega_{P3} \u0026amp;= \\omega_0 \\\\ \u0026amp;= \\frac{1}{C_{C2}(R_D + R_L)} \\\\\\ \\\\ A_v \u0026amp; = \\frac{V_o}{V_{sig}} \\\\ \u0026amp;= -\\frac{R_G}{R_G + R_{sig}} g_m R_L\u0026rsquo; \\Big( \\frac{j\\omega}{j\\omega + \\omega_{P1}} \\Big) \\Big( \\frac{\\omega_z + j\\omega}{j\\omega + \\omega_{P2}} \\Big) \\Big( \\frac{j\\omega}{j\\omega + \\omega_{P3}} \\Big) \\\\ \u0026amp;= A_M \\Big( \\frac{j\\omega}{j\\omega + \\omega_{P1}} \\Big) \\Big( \\frac{\\omega_z + j\\omega}{j\\omega + \\omega_{P2}} \\Big) \\Big( \\frac{j\\omega}{j\\omega + \\omega_{P3}} \\Big) \\\\ 其中, A_M \u0026amp;= -\\frac{R_G}{R_G + R_{sig}} g_m R_L\u0026rsquo; \\\\ R_L\u0026rsquo; \u0026amp;= R_L || R_D \\end{aligned} $$\nFrequency Response $$ \\begin{aligned} 有\u0026amp;Dominant \\ Pole \\\\ f_L \u0026amp;\\approx f_{P2} \\\\ 无 \u0026amp;Dominant \\ Pole \\\\ f_L \u0026amp;\\approx \\sqrt{f_{P1}^2 + f_{P2}^2 + f_{P3}^2 - 2f_Z^2} \\\\\\ \\\\ 注意,\\omega\u0026amp;=2\\pi f \\end{aligned} $$\nThe Method of Short-Circuit Time Constants Let $V_{sig}= 0$\nConsider the capacitors one at a time. That is,while considering capacitor $C_i$ , replace all the other capacitors with short circuits.\nFor each capacitor $C_i$, find the total resistance $R_i$ seen by $C_i$\nCalculate the 3-dB frequency $f_L$\n$$ f_L = \\sum_{i=1}^n\\frac{1}{R_i C_i} $$\nInternal Capacitive Effects and the High-Frequency Model of the MOSFET 图示 分析 $$ \\begin{aligned} C_{ov} \u0026amp;= WL_{ov}C_{ox} \\\\ C_{gd} \u0026amp;= C_{ov} \\\\ C_{gs} \u0026amp;= \\frac{2}{3} WLC_{ox} + C_{ov} \\\\ C_{sb} \u0026amp;= \\frac{C_{sb0}}{\\sqrt{1 + \\frac{V_{SB}}{V_o}}} \\\\ C_{db} \u0026amp;= \\frac{C_{db0}}{\\sqrt{1 + \\frac{V_{DB}}{V_o}}} \\end{aligned} $$\n$_{ov}$意为overlap\nWhen the source is connected to the body, $C_{sb}=0$.\n$C_{db}$ can be neglected.\nOther Models hybrid-$\\pi$ model 电路 分析 (a)中S和B想连后得到(b)\n为了简化分析，去掉$C_{db}$, 得到(c)\nHybrid-$\\pi$ Model 又称 High-Frequency $\\pi$ Model simplified high-frequency T model The MOSFET Unity-Gain Frequency ($f_T$) 电路 分析 $$ \\begin{aligned} I_o \u0026amp;= g_mV_{gs} - sC_{gd}V_{gs} \\\\ \u0026amp;\\approx g_m V_{gs} \\\\ V_{gs} \u0026amp;= \\frac{I_i}{s(C_{gs} + C_{gd})} \\\\ \\frac{I_o}{I_i} \u0026amp;= \\frac{g_m}{s(C_{gs} + C_{gd})} \\\\ \\Big|\\frac{I_o}{I_i} \\Big| \u0026amp;= \\frac{g_m}{\\omega(C_{gs} + C_{gd})} \\\\ \\therefore \\omega_T \u0026amp;= \\frac{g_m}{C_{gs} + C_{gd}} \\\\ f_T \u0026amp;= \\frac{\\omega_T}{2\\pi}\\\\ \u0026amp;= \\frac{g_m}{2\\pi (C_{gs} + C_{gd})} \\end{aligned} $$\nHigh-Frequency Response CS Amplifier 电路 \u0026amp; 电路简化 分析 $$ \\begin{aligned} I_o \u0026amp;= g_mV_{gs} - I_{gd} \\\\ \u0026amp;\\approx g_mV_{gs} \\\\ \\therefore V_o \u0026amp;\\approx -(g_mV_{gs})R_L\u0026rsquo; \\\\\\ \\\\ I_{gd} \u0026amp;= (V_{gs}-V_{sd})sC_{gd} \\\\ \u0026amp;= (V_{gs} - V_o)sC_{gd} \\\\ \u0026amp;= sC_{gd}(1 + g_m R_L\u0026rsquo;)V_{gs} \\\\\\ \\\\ 为了让\u0026amp;I_{gd}看起来更简洁，我们把C_{gd}替换一下 \\\\ sC_{eq}V_{gs} \u0026amp;= sC_{gd}(1 + g_m R_L\u0026rsquo;)V_{gs} \\\\ \\therefore C_{eq} \u0026amp;= (1 + g_mR_L\u0026rsquo;)C_{gd} \\\\ 于是，\u0026amp; C_{gd}被放大了很多倍 \\end{aligned} $$\n这种放大倍数被称为Miller Effect, $(1 + g_mR_L\u0026rsquo;)$被称作Miller Multiplier $$ \\begin{aligned} A_M \u0026amp;= - \\frac{R_G}{R_G + R_{sig}} (g_m R_L\u0026rsquo;) \\\\ 结合CAD\u0026amp;的知识 \\\\ V_{gs} \u0026amp;=\\frac{R_G}{R_G + R_{sig}} V_{sig} \\frac{1}{1 + \\frac{s}{\\omega_0}} \\\\ \\therefore \\frac{V_o}{V_{sig}} \u0026amp;= \\frac{R_G}{R_G + R_{sig}} \\frac{1}{1 + \\frac{s}{\\omega_0}}(g_mR_L\u0026rsquo;) \\\\ \u0026amp;= A_M \\frac{1}{1 + \\frac{s}{\\omega_0}} \\\\\\ \\\\ 其中,\\omega_H \u0026amp;= \\omega_0 \\\\ \u0026amp;= \\frac{1}{R_{sig}\u0026lsquo;C_{in}} \\\\ f_H \u0026amp;= \\omega_0/2\\pi \\\\ \u0026amp;= \\frac{1}{2\\pi R_{sig}\u0026lsquo;C_{in}} \\end{aligned} $$\n进一步等效 Frequency Response $R_{sig}$ Is Low 电路 分析 $$ \\begin{aligned} V_{gs} \u0026amp;\\approx V_{sig} \\\\ I_{gd} \u0026amp;= sC_{gd}(V_{gs} -V_o) \\\\ KCL: I_{gd} \u0026amp;= g_mV_{gs} + \\frac{V_o}{R_L\u0026rsquo;} +sC_LV_o \\\\ 结合以上三式:\\frac{V_o}{V_{sig}} \u0026amp;= \\frac{sC_{gd} - g_m}{\\frac{1}{R_L\u0026rsquo;} + sC_L + sC_{gd}} \\\\ \u0026amp;= -g_mR_L\u0026rsquo; \\frac{1 - s(C_{gd}/g_m)}{1 + sR_L\u0026rsquo;(C_L + C_{gd})} \\\\\\ \\\\ \\therefore f_Z \u0026amp;= \\frac{g_m}{2\\pi C_{gd}} \\\\ 3-dB \\ Frequency \\ f_H \u0026amp;= \\frac{1}{2\\pi (C_L + C_{gd}) R_L\u0026rsquo;} \\\\ \\frac{f_Z}{f_H}\u0026amp;= g_mR_L\u0026rsquo; (1 + \\frac{C_L}{C_{gd}}) \\\\ f_t \u0026amp;= |A_M|f_H \\\\ \u0026amp;= g_mR_L\u0026rsquo; f_H \\\\ \u0026amp;= \\frac{g_m}{2\\pi (C_L + C_{gd})} \\end{aligned} $$\nFrequency Response 总结 $$ \\begin{aligned} C_{in} \u0026amp;= C_{gs} + C_{gd}(1 + g_mR_L\u0026rsquo;) \\\\ \u0026amp;= C_{gs} + C_{eq} \\\\ R_{sig}\u0026rsquo; \u0026amp;= R_{sig} || R_G \\\\ \u0026amp;\\approx R_{sig} \\\\ \\therefore 当 \u0026amp;R_{sig}很大时, f_H会被低估 \\end{aligned} $$\nMiller’s Theorem 米勒等效电路 拆分阻抗 $$ \\begin{aligned} V_2 \u0026amp; = KV_1 \\\\ Z \u0026amp;= Z_1 + Z_2 \\\\ 令Z_1 \u0026amp;= \\frac{Z}{1-K} ,Z_2 = \\frac{Z}{1 - \\frac{1}{K}} \\\\ 使得I_1 \u0026amp;= I_2 = I \\end{aligned} $$\nFeedback The General Feedback Structure 图示 $x$代表电压或者电流信号 分析 $\\beta$: Feedback Factor $$ \\begin{aligned} x_o \u0026amp;= Ax_i \\\\ x_f \u0026amp;= \\beta x_o \\\\ x_i\u0026amp;= x_s - x_f \\\\ A_f \u0026amp;\\equiv \\frac{x_o}{x_s} \\\\ \u0026amp;= \\frac{Ax_i}{x_f + x_i} \\\\ \u0026amp;= \\frac{Ax_i}{x_i + \\beta x_o} \\\\ \u0026amp;= \\frac{Ax_i}{x_i + A\\beta x_i} \\\\ \u0026amp;= \\frac{A}{1 + A\\beta} \\\\ \u0026amp;\\approx \\frac{1}{\\beta} (A\\beta \\gg 1, 即\\beta \\gg \\frac{1}{A}) \\\\\\ \\\\ x_f \u0026amp;= \\beta x_o =\\frac{A\\beta}{1 + A\\beta}x_s \\\\ x_i \u0026amp;= x_s - x_f =\\frac{1}{1 + A\\beta}x_s \\end{aligned} $$\n$A\\beta$: Loop Gain\n$1 + A\\beta$: The amount of Feedback\n公式总结 $$ \\begin{aligned} A_f \u0026amp;= \\frac{A}{1 + A\\beta} = (\\frac{1}{\\beta})\\frac{1}{ 1 + 1/(A\\beta)}\\\\ x_f \u0026amp;= \\frac{A\\beta}{1 + A\\beta} x_s \\\\ x_i \u0026amp;= \\frac{1}{1 + A\\beta}x_s \\\\\\ \\\\ 当A\\beta \u0026amp;\\gg 1: \\\\ A_f \u0026amp;\\approx \\frac{1}{\\beta} \\\\ x_o \u0026amp;\\approx x_s \\\\ x_f \u0026amp;\\approx x_s \\\\ x_i \u0026amp;\\approx 0 \\\\ 输入几乎\u0026amp;为0, 信号与反馈几乎抵消 \\end{aligned} $$\nProperties Gain Desensitivity $$ \\begin{aligned} A_f \u0026amp;= \\frac{A}{1 + A\\beta} \\\\ \\frac{dA_f}{dA} \u0026amp;= \\frac{1}{(1 + A\\beta)^2} \\\\ dA_f \u0026amp;= \\frac{A}{1 +A\\beta} \\frac{1}{(1 + A\\beta)A}dA \\\\ \\frac{dA_f}{A_f} \u0026amp;= \\frac{1}{1 + A\\beta}\\frac{dA}{A} \\end{aligned} $$\n$A_f$变化的幅度比$A$小\n因此, $1 + A\\beta$ 也叫Desensitivity Factor\nBandwidth Extension* $$ \\begin{aligned} A(s) \u0026amp;= \\frac{A_M}{1 + s/\\omega_H} \\\\ A_f \u0026amp;= \\frac{A(s)}{1 + A(s) \\beta} \\\\ \u0026amp;= \\frac{A_M/(1+A_M\\beta)}{1 + s/[(1 + A_M\\beta)\\omega_H]} \\\\ \u0026amp;= \\frac{A_{fM}}{1 + s/(1 + A_M\\beta)} \\\\ \\omega_{Hf} \u0026amp;= (1+A_M\\beta) \\omega_H \\\\ \\omega_{Lf} \u0026amp;= \\frac{\\omega_L}{1 + A_M\\beta} \\end{aligned} $$\nInterference Reduction Signal-to-Interference Ratio $$ S/I = V_s / V_n $$\n图示 分析 $$ \\begin{aligned} V_o \u0026amp;= V_n \\frac{A_1}{1 + A_1 A_2 \\beta} + V_s \\frac{A_1A_2}{1 + A_1A_2 \\beta} \\\\ \\therefore \\frac{S}{I} \u0026amp;= \\frac{V_s}{V_n}A_2 \\end{aligned} $$\nReduction in Nonlinear Distortion Negative feedback may facilitate linearization The Feedback Voltage Amplifier (Series-Shunt) Basic Structure The Series–Shunt Feedback Topology Systematic Analysis of Feedback Voltage Amplifiers 电路 分析1 $$ \\begin{aligned} V_i \u0026amp;= \\frac{V_s}{1 + A\\beta} \\\\ \\therefore I_i \u0026amp;= \\frac{V_s}{(1 +A\\beta)R_i} \\\\ R_{if} \u0026amp;= \\frac{V_s}{I_i} \\\\ \u0026amp;=(1 +A\\beta) R_i \\\\\\ \\end{aligned} $$\n分析2 图示 数学分析 $$ \\begin{aligned} 令V_s \u0026amp;= 0, 对输出端施加测试电压V_X = V_o \\\\ R_{of} \u0026amp;= \\frac{V_X}{I_X} \\\\ I_X \u0026amp;= \\frac{V_X - AV_i}{R_o} \\\\ \\because V_s \u0026amp;=0 \\\\ \\therefore V_i \u0026amp;= - V_f = -\\beta V_o = -\\beta V_X\\\\ \\therefore I_X \u0026amp;= \\frac{V_X(1 + A\\beta)}{R_o} \\\\ \\therefore R_{of} \u0026amp;= \\frac{R_o}{1 + A\\beta} \\end{aligned} $$\nA Practical Case 电路 分析 $$ \\begin{aligned} \\beta \u0026amp;\\equiv \\frac{V_f}{V_o} \\\\ A_f \u0026amp;\\equiv \\frac{V_o}{V_s} \\\\ \u0026amp;= \\frac{A}{1 + A\\beta} \\\\ R_{if} \u0026amp;= R_i(1 + A\\beta) \\\\ R_{of} \u0026amp;= R_o/(1 + A\\beta) \\\\ R_{in} \u0026amp;= R_{if} - R_s \\\\ R_{out} \u0026amp;= 1/(\\frac{1}{R_{out}} - \\frac{1}{R_L}) \\end{aligned} $$\nOther Feedback-Amplifier Types The Feedback Transconductance Amplifier (Series–Serie) 理想电路 反馈网络对原网络没有负载效应\n输出是什么，就稳什么\n公式 $$ \\begin{aligned} A_f \u0026amp;\\equiv \\frac{I_o}{V_i} = \\frac{A}{1 + A\\beta} \\\\ R_{if} \u0026amp;= (1 + A\\beta) R_i \\\\ R_{of} \u0026amp;= (1 + A\\beta ) R_o \\\\ R_{in} \u0026amp;= R_{if} - R_s \\\\ R_{out}\u0026amp;= R_{of} - R_L \\\\ \\end{aligned} $$\nThe Feedback Transresistance Amplifier (Shunt–Shunt) 电路 公式 $$ \\begin{aligned} A \u0026amp;\\equiv \\end{aligned} $$\n附录 Bypass Capacitor 过滤高频噪声，以确保电路中的稳定电压\nCoupling Capacitor 放置在信号线上，用于将一个信号传输到另一个电路中，同时阻止直流偏移。\ndominant pole 最高极点频率的极点。这个极点对于电路的频率响应和稳定性非常重要。\nZero Frequency a transmission zero is the value of s at which the input does not reach the output, resulting in $V_o = 0$\n$f_L$公式推导 $$ 这个公式是基于滤波器的频率响应推导出来的。\\\\ \\\\ 假设有一个由三个电感（inductors）和三个电容（capacitors）组成的低通滤波器（low-pass filter），其中电感之间互相并联，电容之间也互相并联。这个滤波器的频率响应可以表示为：\\\\ \\\\ H(f) = \\frac{1}{1+j\\frac{f}{f_{P1}}} \\cdot \\frac{1}{1+j\\frac{f}{f_{P2}}} \\cdot \\frac{1}{1+j\\frac{f}{f_{P3}}}\\\\ \\\\ 其中，f是频率，f_P1、f_P2和f_P3是分别由电容和电感决定的三个截止频率（cut-off frequency），式子中的j是虚数单位，满足j^2=-1。\\\\ \\\\ 将H(f)表示成模与相位的形式，可以得到：\\\\ \\\\ H(f) = \\frac{A}{\\sqrt{1+(\\frac{f}{f_{P1}})^2} \\cdot \\sqrt{1+(\\frac{f}{f_{P2}})^2} \\cdot \\sqrt{1+(\\frac{f}{f_{P3}})^2}} \\cdot e^{-j\\phi(f)}\\\\ \\\\ 其中，A和φ(f)分别是幅度和相位，可以通过求解每个因子的幅度和相位，再将它们相乘得到H(f)的幅度和相位。\\\\ \\\\ 令f_Z = \\frac{1}{2\\pi\\sqrt{LC}}为电感和电容组成的谐振频率，其中L和C是电感和电容的值。假设f_Z^2远小于f_P1^2、f_P2^2和f_P3^2，可以将H(f)中的每个因子展开成泰勒级数，保留到二阶，得到：\\\\ \\\\ H(f) \\approx \\frac{A}{\\sqrt{1+\\frac{1}{4}(\\frac{f}{f_Z})^2} \\cdot \\sqrt{1+\\frac{1}{4}(\\frac{f}{f_Z})^2} \\cdot \\sqrt{1+\\frac{1}{4}(\\frac{f}{f_Z})^2}} \\cdot e^{-j\\phi(f)}\\\\ \\\\ 将三个根号内的项视为一个整体，可以得到：\\\\ \\\\ H(f) \\approx \\frac{A}{(1+\\frac{1}{4}(\\frac{f}{f_Z})^2)^{\\frac{3}{2}}} \\cdot e^{-j\\phi(f)}\\\\ \\\\ 对于一个低通滤波器，当f\u0026laquo;f_P1、f_P2和f_P3时，H(f)的幅度近似为1，相位近似为0。因此，可以将H(f)中的A近似为1，φ(f)近似为0，得到：\\\\ \\\\ H(f) \\approx \\frac{1}{(1+\\frac{1}{4}(\\frac{f}{f_Z})^2)^{\\frac{3}{2}}}\\\\ \\\\ 将H(f)的幅度与相位分别表示成模和复数的形式，可以得到：\\\\ \\\\ |H(f)| = \\frac{1}{\\sqrt{1+\\frac{1}{16}(\\frac{f}{f_Z})^4}}\\\\ \\\\ 将|H(f)|表示成f的函数，并令其等于0.707，可以解出f_L，得到：\\\\ \\\\ f_L \\approx \\sqrt{f_{P1}^2 + f_{P2}^2 + f_{P3}^2 - 2f_Z^2}\\\\ $$\n电容的阻抗 电容通常很小,$1/sC$也就很大，通常可以忽略不计 $R_{if} 和 R_i$ $$ \\begin{aligned} R_{if} \u0026amp;= \\frac{\\pmb {V_s}}{I_i} \\\\ R_i \u0026amp;= \\frac{\\pmb {V_i}}{I_i} \\end{aligned} $$\n增益与中段增益 $A(s) = \\frac{A_M}{1 + s/\\omega_H}$\n这个传输函数可以通过对电路进行拉普拉斯变换得到。假设我们有一个电路，其中输入信号为 $V_{in}(t)$，输出信号为 $V_{out}(t)$。我们可以将电路表示为一个线性常微分方程：\n$$ L\\frac{dV_{out}(t)}{dt} + R V_{out}(t) = V_{in}(t) $$\n其中 $L$ 和 $R$ 分别是电感和电阻的值。应用拉普拉斯变换，我们得到：\n$$ LsV_{out}(s) + RV_{out}(s) = V_{in}(s) $$\n将 $V_{out}(s)$ 移项并合并同类项，得到：\n$$ \\frac{V_{out}(s)}{V_{in}(s)} = \\frac{1}{Ls + R} $$\n这个比值即电路的传输函数，表示了输入信号和输出信号之间的关系。\n接下来，我们可以将传输函数改写为标准的一阶低通滤波器的形式。首先，我们可以将传输函数的分母写成 $1 + s/\\omega_H$ 的形式，其中 $\\omega_H = R/L$ 是电路的截止频率。这是因为当 $s = j\\omega$ 时，分母变为 $1 + j\\omega/\\omega_H$，其模长为 $\\sqrt{1 + (\\omega/\\omega_H)^2}$，当 $\\omega \\ll \\omega_H$ 时，模长近似为 $1$，而当 $\\omega \\gg \\omega_H$ 时，模长近似为 $\\omega/\\omega_H$，表示信号被滤波器削弱的程度。\n为了把传输函数写成标准形式，我们可以将分子和分母同时除以 $A_M$，得到：\n$$ A(s) = \\frac{A_M/L}{s/\\omega_H + 1} = \\frac{A_M}{1 + s/\\omega_H} $$\n这个形式与标准的一阶低通滤波器的传输函数形式一致，其中 $A_M/L$ 是增益常数，$1/\\omega_H$ 是电路的时间常数，表示电路对输入信号的响应速度。\n拉普拉斯变换 定义 给定一个函数 $f(t)$，它的拉普拉斯变换 $F(s)$ 定义为：\n$$F(s) = \\mathcal{L}{f(t)} = \\int_{0}^{\\infty} e^{-st} f(t) dt $$\n其中 $s$ 是复变量，$e^{-st}$ 是一个复指数函数，$f(t)$ 是一个定义在非负实数域上的函数。这个积分表示了在复平面上以直线 $Re(s) = \\sigma$ 为边界的区域内，$F(s)$ 的积分值。\n性质 线性性，即对于任意常数 $a$ 和 $b$，有： $$ \\mathcal{L}{a f(t) + b g(t)} = a F(s) + b G(s) $$\n其中 $f(t)$ 和 $g(t)$ 是两个函数，$F(s)$ 和 $G(s)$ 是它们的拉普拉斯变换。\n微分和积分定理 如果 $f(t)$ 有一个连续的导数 $f\u0026rsquo;(t)$，那么它的拉普拉斯变换为：\n$$ \\mathcal{L}{f\u0026rsquo;(t)} = sF(s) - f(0) $$\n其中 $f(0)$ 是 $f(t)$ 在 $t=0$ 处的值。类似地，如果 $f(t)$ 是一个连续函数，并且存在一个常数 $T$，使得 $f(t) = 0$ 对于所有 $t \u0026lt; 0$ 和 $t \u0026gt; T$ 成立，那么它的拉普拉斯变换为：\n$$ \\mathcal{L}{\\int_0^t f(\\tau)d\\tau} = \\frac{F(s)}{s} $$\n","date":"2023-05-10T11:55:19+08:00","permalink":"https://downeyflyfan.com/p/10-11.-frequency-response-feedback/","title":"10-11. Frequency Response \u0026 Feedback"},{"content":"文件备份 开机分区的安装 新建boot分区 1 fidsk -l 挂载分区 挂载根目录分区与开机分区 1 2 3 # 一定要先挂载目录分区!!! mount /dev/nvme0n1p6 /mnt mount /dev/nvme0n1p8 /mnt/boot 生成文件系统自动挂载分区(可删除先前的) 1 genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 安装内核 1 2 arch-chroot /mnt pacman -S base linux linux-firmware 安装引导 安装徽码 1 pacman -S intel-ucode 安装引导 1 2 grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Arch --recheck grub-mkconfig -o /boot/grub/grub.cfg 退出并重启 1 2 3 $ exit $ umount -R /mnt $ reboot 安装必要软件 pacman 添加pacman的库 在/etc/pacman.conf中添加以下内容 1 2 [multilib] Include = /etc/pacman.d/mirrorlist 下载必要软件 1 sudo pacman -S noto-fonts noto-fonts-emoji libxcrypt-compat tk yay yay的安装(先用魔法) 1 yay -S nerd-fonts-complete-starship pip suckless Vivado 安装 正确设置时区 1 timedatectl set-ntp true 正确设置坏境 1 export _JAVA_AWT_WM_NONREPARENTING=1 安装两个库 1 2 yay -S ncurses5-compat-libs sudo pacman -S libxcrypt-compat 时间 双系统时间可能出现错误，因此需要 1 timedatectl set-ntp true 使得和网络时间同步 dwm d_menu 网络配置-openvpn 下载特定的openvpn 从https://app.blackhole.run/#4e94d2f9661PfWrPdM9QgV4tsN1b9ZPemcLfptM3EMBi下载\n使用sudo pacman -U 软件名 安装\n加载配置文件 Git 配置 1 2 git config --global user.email \u0026#34;you@example.com\u0026#34; git config --global user.name \u0026#34;Your Name\u0026#34; Windows安装 https://www.microsoft.com/zh-cn/software-download/windows10 点击“立即下载工具”\n下好后打开双击运行,插上一个大于4G的U盘，选择为另一台电脑安装，之后选择你的U盘，等完成后一个人官方工具制作的介质就做好了。\n这时如果设置从U盘启动，将会遇到你所说的问题，但我从网上看到安装之前先把介质里的eif文件夹（好像是，反正就三个字母的文件夹，不大）直接删除。\n设置BIOS启动项，从U盘启动然后安装，格式化C盘，装进去。耐心等待，大功告成。\n如果不能继续从系统盘启动，只需要再将BIOS启动项设置回来就OK了。\n至此，全新安装完成，如果你原来是数字授权激活，那么它将以同样方式自动激活，只要你联网，因为再上一次激活时，win10激活服务器记录下了你的主板信息，只要主板不坏，就可随便安装。\n安装后要登录Windows账户 验证账户 设置密码等可自己摸索，有一点很重要，将账户问题设置好后，可能要等一小段时间才能使用会员更新，当你点击“使用”时，它会让你重启已验证你运行的是预览版本，重启后自动显示接受会员版本。\n","date":"2023-05-05T10:03:14+08:00","permalink":"https://downeyflyfan.com/p/archlinux-%E5%AE%89%E8%A3%85%E4%B8%8E%E6%8D%A2%E6%9C%BA/","title":"Archlinux 安装与换机"},{"content":"Basic Differential Pair 电路 Bias Current Source $I_{SS}$ : Reducing the Variation of CM level Qualitative Analysis $V_{out} - V_{in}$ 图像 $$ \\begin{aligned} V_{in1} - V_{in2} \u0026amp;\\in (-\\infin, + \\infin) \\end{aligned} $$\n共模输入的范围 为了使$M_3$工作在饱和区 $$ \\begin{aligned} V_P \u0026amp;\\ge V_{GS3} - V_{TH3} \\\\ V_{in,CM} - V_{GS1} \u0026amp;\\ge V_{GS3} - V_{TH3} \\\\ \\therefore V_{in,CM} \u0026amp;\\ge V_{GS1} + V_{OV3} \\end{aligned} $$\n为了使$M_1,M_2$工作在饱和区 $$ \\begin{aligned} V_{D1} \u0026amp;\\ge V_{G1} - V_{T1} \\\\ \\therefore V_{in,CM} \u0026amp;\\le V_{out1} + V_{TH1} = V_{DD}- \\frac{I_{SS}}{2} R_D + V_{TH1} \\end{aligned} $$\n$V_{in,CM}$的范围 $$ \\begin{align} V_{GS1} + (V_{GS3} - V_{TH3} ) \u0026amp;\\le V_{in,CM} \\le min \\Big[ V_{DD}-\\frac{I_{SS}}{2}R_D + V_{TH1, V_{DD}} \\Big] \\end{align} $$\n共模输出的范围 最大值 $$ \\begin{aligned} V_{out} \u0026amp;\\le V_{DD} \\end{aligned} $$\n最小值 在Satuartion Region和Triode Region的交界处 $$ \\begin{aligned} V_{DS} \u0026amp;= V_{OV} \\\\ V_D \u0026amp;= V_G - V_{TH} \\\\ \\therefore V_{out} \u0026amp;= V_{in,CM} - V_{TH} \\\\\\ \\\\ \\end{aligned} $$\n$V_{out}$的范围 $$ \\begin{equation} V_{in,CM} - V_{TH} \u0026lt; V_{out} \u0026lt; V_{DD} \\end{equation} $$\n$|A_v| - V_{in,CM}$ 图像 $V_{in,CM}$ $A_v$ $(0,V_1)$ $M_1, M_2$ off $(V_1, V_2)$ All in Satuartion $(V_2, \\infin )$ In Triode Region Quantitative Analysis Differential Voltage Gain 当$M_1$和$M_2$都工作在Satuartion Region时，有以下分析: 推算$\\Delta I - \\Delta V$ $$ \\begin{aligned} V_{in1} - V_{in2} \u0026amp;= V_{G1} - V_{G2} \\\\ V_{GS} - V_t\u0026amp;= \\sqrt{\\frac{2I}{k_n}} \\\\ (V_{in1} - V_{in2})^2 \u0026amp;= \\frac{2}{k_n} (I_{SS} - 2\\sqrt{I_{D1} I_{D2}}) \\\\ \\frac{1}{2}k_n(V_{in1} - V_{in2})^2 \u0026amp;= I_{SS} - 2\\sqrt{I_{D1}I_{D2}} \\\\ \\therefore (I_{D1} - I_{D2})^2 \u0026amp;= I_{SS}^2 - 4I_{D1}I_{D2} \\\\ \u0026amp;= I_{SS}^2 - (I_{SS} - \\frac{1}{2}k_n(V_{in1} - V_{in2})^2)^2 \\\\ \u0026amp;= I_{SS}k_n(V_{in1} - V_{in2})^2 - \\frac{1}{4}k_n^2(V_{in1} -V_{in2})^4 \\\\ \\therefore I_{D1} - I_{D2} \u0026amp;= \\frac{1}{2}k_n(V_{in1} - V_{in2})\\sqrt{\\frac{4I_{SS}}{k_n} - (V_{in1} - V_{in2})^2} \\end{aligned} $$\n$$ \\begin{equation} \\Delta I_{D} = \\frac{1}{2} k_n\\Delta V_{in} \\sqrt{\\frac{4I_{SS}}{k_n} - \\Delta V_{in}^2} \\end{equation} $$\nDifferential Gain $$ \\begin{equation} G_m = \\frac{\\partial \\Delta I_D}{\\partial \\Delta V_{in}} = \\frac{1}{2} k_n \\dfrac{\\dfrac{4I_{SS}}{k_n} - 2\\Delta V_{in}^2}{\\sqrt{\\dfrac{4I_{SS}}{k_n} - \\Delta V_{in}^2}} \\end{equation} $$\n当$\\Delta V_{in} = 0$时 $$ \\begin{aligned} G_m \u0026amp;= \\sqrt{k_nI_{SS}}\\\\ |A_v| \u0026amp;= \\sqrt{k_nI_{SS}} R_D \\\\ \u0026amp;= g_mR_D \\end{aligned} $$\n当$\\Delta V_{in} = \\sqrt{\\frac{2I_{SS}}{k_n}}$时 $$ \\begin{aligned} G_m \u0026amp;= 0 \\\\ |A_v| \u0026amp;= 0 \\\\ V_{GS} \u0026amp;= \\sqrt{\\frac{I_{SS}}{k_n}} + V_T \\\\ \\end{aligned} $$\n当$\\Delta V_{in} = \\sqrt{\\frac{4I_{SS}}{k_n}}$时，$M_1, M_2$ NOT in Satuartion Region Voltage Gain 下图中，$M_1$与$M_2$相同，$R_{D1} = R_{D2}$ 左电路的等效电路 (CS Stage With Source Degeneration) 右电路的等效电路 (CG Stage) $$ \\begin{aligned} R_S \u0026amp;= \\frac{1}{g_{m2}}, R_T = \\frac{1}{g_{m1}} \\\\ \\frac{V_X}{V_{in1}} \u0026amp;= -\\frac{R_{D1}}{\\dfrac{1}{g_{m1}} + \\dfrac{1}{g_{m2}}} \\\\ \\frac{V_Y}{V_{in1}} \u0026amp;= \\frac{R_{D2}}{\\dfrac{1}{g_{m1}} + \\dfrac{1}{g_{m2}}} \\\\ A_v \u0026amp;=\\frac{V_X - V_Y}{V_{in1} - V_{in2}} \\\\ \u0026amp;= -g_m R_D \\end{aligned} $$\n对于线性电路，$V_P$不变(虚接地) 假设图(a)输入电压以图(b)所示方式变化 $$ \\begin{aligned} V_{in1} = V_0 + \\Delta V_{in}, V_{in2} \u0026amp;= V_0 - \\Delta V_{in} \\\\ V_1 = V_a + V_1, \\Delta V_2 \u0026amp;= V_a - \\Delta V_2 \\\\ \\because I_1 + I_2 \u0026amp;= I_T \\\\ \\therefore g_m(\\Delta V_1 + \\Delta V_2) \u0026amp;= 0 \\\\ \\therefore \\Delta V_1 \u0026amp;= - \\Delta V_2 \\\\\\ \\\\ V_{in1} - V_1 \u0026amp;= V_{in2} - V_2 = V_P \\\\ V_{in1} + \\Delta V_{in} - (V_a + \\Delta V_1) \u0026amp;= V_{in2} - \\Delta V_{in} - (V_a - \\Delta V_2) \\\\ \\therefore \\Delta V_{in} \u0026amp;= \\Delta V_1 \\\\ \\therefore V_P\u0026amp;不变 \\end{aligned} $$\n$P$ is a Virtual Ground Common-Mode Response (Small-Signal Model) 电路图 Common-Mode Gain $$ \\begin{aligned} A_v \u0026amp;= \\frac{\\dfrac{R_D}{2}}{\\dfrac{1}{2g_m} + R_{SS}} \\\\ G_m \u0026amp;= \\frac{g_m}{1 + 2g_m R_{SS}} \\end{aligned} $$\nConsidering the Manufactured Difference $M_1$ 和 $M_2$ 若不同 阻抗为$R_{SS}$ $$ \\begin{aligned} V_P \u0026amp;= (g_{m1} + g_{m2})(V_{in,CM} - V_P)R_{ss} \\\\ \\therefore V_P \u0026amp;= \\frac{g_{m1} + g_{m2}}{1 + (g_{m1} + g_{m2})R_{SS}} R_{SS} \\\\ V_X \u0026amp;= g_{m1}R_D(V_{in,CM} - V_P) \\\\ \u0026amp;= \\frac{-g_{m1}}{1 + (g_{m1} + g_{m2})R_{SS}}R_D V_{in,CM} \\\\ V_Y \u0026amp;= \\frac{-g_{m2}}{1 + (g_{m1} + g_{m2})R_{SS}}R_D V_{in,CM} \\\\\n\\end{aligned} $$\n$$ \\begin{equation} A_{CM-DM} = \\frac{V_X - V_Y}{V_{in,CM}} = \\frac{\\Delta g_m R_D}{1 + (g_{m1} +g_{m2}) R_{SS}} \\end{equation} $$\n将$R_{SS}$ 替换为$C_S$ $$ \\begin{equation} A_{CM-DM} = \\frac{\\Delta g_m R_D}{\\sqrt{1 + (g_{m1} + g_{m2})^2 \\Big|\\dfrac{1}{\\omega C_S}\\Big|^2} } \\end{equation} $$\n若$R_D$不相同 $R_D$ $R_D + \\Delta R_D$ $$ \\begin{equation} A_{CM-DM} = \\frac{g_m \\Delta R_D}{1 + (g_{m1} +g_{m2}) R_{SS}} \\end{equation} $$\nDifferential Gain \u0026amp; CMRR Differential Gain 在电流源被$R_{SS}$替换后(假设$V_{in1} = - V_{in2}$) $$ \\begin{equation} |A_{DM}| = \\frac{ R_D }{ 2 } \\frac{ g_{m1} + g_{m2} + 4g_{m1} g_{m2} R_{SS} }{ 1 + (g_{m1} + g_{m2} )R_{SS}} \\end{equation} $$\nCMRR $$ \\begin{equation} \\begin{aligned} CMRR \u0026amp;= \\frac{A_{DM}}{A_{CM-DM}} \\\\ \u0026amp;= \\frac{ g_{m1} + g_{m2} + 4 g_{m1} g_{m2} R_{SS} }{ 2 \\Delta g_m } \\\\ \u0026amp; \\approx \\frac{ g_m }{ \\Delta g_m } ( 1 + 2g_m R_{SS}) \\end{aligned} \\end{equation} $$\n$g_m$ $\\dfrac{ g_{m1} + g_{m2} }{ 2 }$ $\\approx$ 假设$g_{m1} \\approx g_{m2}$ Differential Pair With MOS Loads Differential Pair With Diode-Connected and Common-Source Loads Diode-Connected Loads $$ \\begin{equation} \\begin{aligned} A_v \u0026amp;= -g_{mN} (\\frac{1}{g_{mP}} || r_{oP} || r_{oN}) \\\\ \u0026amp; \\approx -\\frac{g_{mN}}{g_{mP}} \\\\ \u0026amp;= \\sqrt{\\frac{ k_{nN} }{ k_{nP}}} \\end{aligned} \\end{equation} $$\nTradeoff among output voltage swing, voltage gain and CM input range Current-Source Loads $$ \\begin{equation} A_v = -g_{mN} (r_{oP} || r_{oN}) \\end{equation} $$\nDiode-connected Loads需要考虑电阻是因为二极管的非线性特性，而Current Source Loads不需要考虑电阻是因为电流源的线性特性。 Addition of current sources to increase the voltage gain $$ |A_v| \\approx g_{m1} [(g_{m3}r_{o3}r_{o1}) || (g_{m5}r_{o5}r_{o7})] $$\n电压增益可以近似地表示为晶体管的跨导和输出阻抗的乘积 Gilbert Cell 原理 $$ \\begin{aligned} |A_v| \u0026amp;= g_m R_D \\\\ \u0026amp;= \\sqrt{ 2 k_n I_D } R_D \\end{aligned} $$\n$V_{cont} \\longrightarrow I_{SS} \\longrightarrow I_D \\longrightarrow |A_v|$\n通过电压控制增益\nGilbert Cell $$ \\begin{equation} \\begin{aligned} V_{out} \u0026amp;= A_1 V_1 + A_2 V_2 \\\\ \u0026amp;= R_D(I_{D1} + I_{D4}) - R_D(I_{D2} + I_{D3}) \\end{aligned} \\end{equation} $$\n附录 静态电流损耗 静态电流损耗可能会影响电路的性能，并导致功率损耗和热量产生。为了减少静态电流损耗，可以采取以下措施：\n选择$\\dfrac{1}{g_m}$和$r_o$较小的 MOSFET。\n将$V_G$保持在最小值，以减少电路总电阻。\n通过使用负反馈电路来控制 MOSFET 的电流，从而减少静态电流损耗。\nVoltage Headroom 电路内部被消耗的，不能转换为Output Voltage Swing的部分\n","date":"2023-05-03T10:45:40+08:00","permalink":"https://downeyflyfan.com/p/4.-differential-amplifiers/","title":"4. Differential Amplifiers"},{"content":"如何创建hexo博客 创建目录mkdir blog\n设置权限\n进入并初始化目录\n1 2 3 hexo init hexo s(start) 进入本地网站localhost:4000 Ctrl + C取消本地网站\n创建新博客hexo n \u0026lt;文章名\u0026gt;\n读写新博客cd source/_posts vim blog.md\n回到blog目录\n清除 hexo clean\n安装deployer\nsudo npm install --save hexo-deployer-git 生成 hexo g(generate)\n部署 hexo d(deploy)\n如何创建hugo博客 sudo pacman -S hugo下载hugo\nhugo version查看hugo版本有没有extended\nhugo new site blog 创建hugo的博客文件夹\n进入blog文件夹git init初始化 git clone ...下载主题 主题可以在https://themes.gohugo.io/上查找并下载 hugo new post/name.md创建新的博客文章 进入content/post可进行编辑 hugo server -D启动本地服务器 使用hugo -D将已写的blog放入public文件夹\nCtrl+C退出服务器\n建立github仓库 仓库名\u0026lt;username\u0026gt;.github.io 在config.toml中添加theme为自己想要的theme\nhugo -D在本地生成public文件准备部署\n进入public文件夹\n使用我写的脚本.push 对于public文件夹\nhugo -D创建 ","date":"2023-05-02T20:47:39+08:00","permalink":"https://downeyflyfan.com/p/%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2-for-linux-and-macos/","title":"创建博客 for Linux and MacOS"},{"content":"CS Stage CS Stage With Resistive Load 电路图和小信号模型 $\\pmb{V_{in} = V_{GS}}$ 输入-输出关系 增益 $V_{out} - V_{in}$ $$ V_{in} = V_{GS}, V_{out} = V_{DS} \\\\\\ \\\\ V_{out} = \\begin{cases} V_{DD} (没有压降) \u0026amp; V_{in} \\lt V_t \\\\ V_{DD} -\\frac{1}{2}k_n (V_{in} - V_t)^2 R_D \u0026amp; V_{in} \\ge V_t \\\\ V_{in} - V_t \u0026amp; V_{in} - V_t = V_{out} \\\\ V_{DD} - \\frac{1}{2}[2(V_{in} - V_t)V_{out}- V_{out}^2] R_D \u0026amp; Triode \\ Region \\end{cases} \\\\\\ \\\\ 如果V_{in}很大,使得V_{out} \\ll 2(V_{in} -V_t) \\\\\\ \\\\ \\begin{aligned} V_{out} \u0026amp;= \\frac{R_{on}}{R_{on} + R_D}V_{DD} \\\\ \u0026amp;= \\frac{V_{DD}}{1 + k_n R_D(V_{in} -V_t)} \\\\ ( R_{on} \u0026amp;= \\frac{V_{out}}{i_D},i_D = k_nR_D(V_{in}-V_t)V_{out} ) \\\\\\ \\end{aligned} $$\n增益 $$ \\begin{equation} \\begin{aligned} A_v \u0026amp;= \\frac{ \\partial V_{out} }{ \\partial V_{in}} \\\\ \u0026amp;= -g_m R_D \\end{aligned} \\end{equation} $$\nImportant Relations Gain Considering Channel Length Modulation $$ \\begin{aligned} V_{out} \u0026amp;= V_{DD} - \\frac{1}{2}k_n(V_{in} - V_t)^2 (1 + \\lambda V_{out})R_D \\\\ \\therefore A_v \u0026amp;= \\frac{\\partial V_{out}}{\\partial V_{in}}\\\\ \u0026amp;= - R_Dk_n (V_{in} - V_t)(1 + \\lambda V_{out})- \\frac{1}{2}k_n R_D(V_{in} - V_t)^2 \\lambda\\frac{\\partial V_{out}}{\\partial V_{in}} \\\\ \u0026amp;= -R_D g_m - I_DR_D \\lambda A_v (近似) \\\\ \u0026amp;= -\\frac{g_m R_D}{1 + R_D \\lambda I_D} \\\\ \u0026amp;= -g_m \\frac{r_0R_D}{r_0 + R_D} \\end{aligned} $$\n$$ \\begin{equation} A_v = -g_m\\frac{ r_o R_D}{ r_0 + R_D } \\end{equation} $$\n其中，$\\lambda I_D = \\dfrac{ 1 }{ r_0 }$\n效果就是并联$r_0$和$R_D$作为输出电阻，$1/g_m$是输入电阻\nCS Stage With Diode-Connected Load 输入阻抗 $$ \\begin{aligned} V_1 \u0026amp;= V_{bs} = -V_X \\\\\\ \\\\ I_X \u0026amp;=\\frac{V_X}{r_0} + (g_m + g_{mb})V_X \\\\ \\frac{V_X}{I_X} \u0026amp;= \\frac{1}{g_m+g_{mb}+r_0^{-1}} \\\\ \u0026amp;= \\frac{1}{g_m + g_{mb}} || r_0 \\\\ \u0026amp; \\approx \\frac{1}{g_m +g_{mb}} \\\\ Z_{in} \u0026amp;\\approx \\frac{1}{g_m + g_{mb}} \\end{aligned} $$\n增益 Method I $$ \\begin{aligned} A_v \u0026amp;= -g_{m1} \\frac{1}{g_{m2} + g_{mb2}} \\\\ \u0026amp;= -\\frac{g_{m1}}{g_{m2}}\\frac{1}{1 + \\eta} \\\\ \\because I_{D1} \u0026amp;= I_{D2} \\\\ \\therefore A_v \u0026amp;= \\frac{\\sqrt{2k_nI_{D1}}}{\\sqrt{2k_nI_{D2}}}\\frac{1}{1+\\eta} \\end{aligned} $$\n$$ \\begin{equation} \\begin{aligned} A_v \u0026amp;= -\\sqrt{\\frac{(W/L)_1}{(W/L)_2}}\\frac{1}{1+\\eta} \\\\ \u0026amp;\\approx - \\sqrt{ \\frac{ (W/L)_1 }{ (W/L)_2 } } \\end{aligned} \\end{equation} $$\n其中，$\\pmb{\\eta=\\dfrac{g_{mb2}}{g_{m2}} = \\dfrac{\\partial V_{TH}}{\\partial V_{out}}}$ Method II $$ \\begin{aligned} I_{D1} \u0026amp;= I_{D2} \\\\ \\frac{1}{2}k_{n1}(V_{in} - V_{t1})^2 \u0026amp;= \\frac{1}{2}k_{n2}(V_{DD} - V_{out} -V_{t2})^2 \\\\ \\sqrt{(\\frac{W}{L})1} (V{in} -V_{t1}) \u0026amp;= \\sqrt{(\\frac{W}{L})2}(V{DD} - V_{out} - V_{t2}) \\\\ \\sqrt{(\\frac{W}{L})1} \u0026amp;= -\\sqrt{(\\frac{W}{L})2}(\\frac{\\partial V{out}}{\\partial V{in}} - \\frac{\\partial V_{t2}}{\\partial V_{in}}) \\\\ \\because \\frac{\\partial V_{t2}}{\\partial V_{in}} \u0026amp;= \\frac{\\partial V_{t2}}{\\partial V_{out}} \\frac{\\partial V_{out}}{\\partial V_{in}} = \\eta\\frac{\\partial V_{out}}{\\partial V_{in}} \\\\ \\therefore A_v \u0026amp;= \\frac{\\partial V_{out}}{V_{in}} \\\\ \u0026amp;= -\\sqrt{\\frac{(W/L)_1}{(W/L)_2}}\\frac{1}{1+\\eta} \\\\ \u0026amp;\\approx -\\sqrt{\\frac{(W/L)_1}{(W/L)_2}} \\end{aligned} $$\n总结 不考虑Channel-Length-Modulation和Body Effect的情况下，$A_v = 1$ CS stage with diode-connected PMOS device $$ \\begin{aligned} \\because I_{D1} \u0026amp; = I_{D2} \\\\ \\therefore k_nV_{ovn}^2 \u0026amp;= k_pV_{ovp}^2 \\\\ \\therefore \\frac{\\mu_n (W/L)n}{\\mu_p(W/L)p} \u0026amp;= \\frac{|V{ovp}|}{V{ovn}} \\\\ \\therefore A_v \u0026amp;\\approx -\\frac{|V_{GS2} - V_{TH2}|}{V_{GS1} - V_{TH1}} \\\\ \u0026amp;\\approx -\\frac{k_n|V_{GS2} - V_{TH2}|}{V_{GS1} - V_{TH1}} \\\\ \u0026amp;\\approx \\frac{g_{mn}}{g_{mp}} \\end{aligned} $$\n在考虑现实因素的情况下 $$ \\begin{equation} A_v = -g_{mn} (\\frac{1}{g_{mp}} || r_{on} || r_{op}) \\end{equation} $$\nCS Stage With Current-Source Load Gain $$ \\begin{equation} A_v = -g_m(r_{o1} || r_{o2}) \\end{equation} $$\nIntrinsic Gain $$ \\begin{equation} g_mr_o = \\sqrt{2(\\frac{W}{L})\\mu_nC_{OX}I_D} \\frac{1}{\\lambda I_D} \\end{equation} $$\nCS Stage With Triode Load $$ \\begin{equation} \\begin{aligned} R_{on2} \u0026amp;= \\frac{1}{g_{m2}} \\\\ \u0026amp;= \\frac{1}{\\mu_p C_{OX}(W/L)2(V{DD} -V_b-V_{Tp})} \\end{aligned} \\end{equation} $$\nCS Stage With Source Degeneration 电路 简化分析 Gain $$ 设I_D = f(V_{GS}) \\\\\\ \\\\ \\begin{aligned} G_m \u0026amp;= \\frac{\\partial I_D}{\\partial V_{in}} \\\\ \u0026amp;= \\frac{\\partial f}{\\partial V_{GS}}\\frac{\\partial V_{GS}}{\\partial V_{in}} \\\\ \u0026amp;= g_m(\\frac{ \\partial (V_{in} - I_DR_S)}{\\partial V_{in}}) \\\\ \u0026amp;= g_m (1-R_S\\frac{\\partial I_D}{\\partial V_{in}}) \\\\ \u0026amp;= g_m(1 -R_SG_m) \\\\ \\therefore G_m \u0026amp;= \\frac{g_m}{1+g_mR_S} \\\\ \u0026amp;= \\frac{1}{\\dfrac{1}{g_m} + R_S} \\end{aligned} $$\n$$ \\begin{equation} \\begin{aligned} A_v \u0026amp;= -G_m R_D \\\\ \u0026amp;= -\\frac{g_mR_D}{1 + g_mR_S} \\end{aligned} \\end{equation} $$\n具体分析 Gain 考虑了Channel Length Modulation和Body Effect 小信号模型 等效跨导 $$ \\begin{aligned} I_{out} \u0026amp;= g_mV_1 - \\frac{I_{out} R_S}{r_O} -g_mV_X \\\\ \u0026amp;= g_m (V_{in} - I_{out} R_S) - \\frac{I_{out}R_S}{r_O} + g_m (-I_{out}R_S) \\\\ G_m \u0026amp;= \\frac{I_{out}}{V_{in}} \\\\ \u0026amp;= \\frac{g_mr_o}{R_S + [1 + (g_m + g_{mb})R_S]r_O} \\end{aligned} \\\\\\ $$\n增大的输出电阻 $$ \\begin{aligned} I_{ro} \u0026amp;= I_X - g_m(V_1 + V_{bs}) \\\\ V_1 \u0026amp;= - I_XR_S \\\\ \\therefore V_X \u0026amp;= I_{ro} r_o + I_X R_S \\\\ \\therefore R_{out} \u0026amp;= \\frac{V_X}{I_X} \\\\ \u0026amp;= R_S + [1 + (g_m + g_{mb}) R_S]r_o \\end{aligned} $$\n最终增益 $$ \\begin{aligned} A_v \u0026amp;= \\frac{V_{out}}{V_{in}} \\\\ \u0026amp;= -\\frac{g_m r_o R_D}{R_D + R_S + r_o + (g_m + g_{mb}) R_S r_o} \\end{aligned} $$\n图像 CS Stage With Source Degeneration \u0026amp; Constant Current Source $$ \\begin{aligned} A_v \u0026amp;= -g_m r_o \\end{aligned} $$\n这种情况下，通过$R_S$的$AC$电流为0 Source Follower 电路 电压特性 Gain 只考虑Body Effect $$ \\begin{aligned} V_{out} \u0026amp;= \\frac{1}{2}k_n(V_{in} -V_{out} -V_t) ^2 R_S \\\\ \\frac{\\partial V_{out}}{\\partial V_{in}} \u0026amp;= k_n(V_{in}- V_{out} -V_t) (1 - \\frac{\\partial V_{out}}{\\partial V_{in}} - \\frac{\\partial V_t}{\\partial V_{in}}) R_S \\\\ \\because \\frac{\\partial V_t}{\\partial V_{in}} \u0026amp;= \\eta \\frac{\\partial V_{out}}{\\partial V_{in}} \\\\ \\therefore \\frac{\\partial V_{out}}{\\partial V_{in}} \u0026amp;= \\frac{k_nV_{OV}R_S}{1+k_nV_{OV}R_S(1 +\\eta)} \\\\ \\because g_m \u0026amp;= k_nV_{OV} \\end{aligned} $$\n$$ \\begin{equation} A_v = \\frac{g_m R_S}{1 + (g_m + g_{mb}) R_S} \\end{equation} $$\n若不考虑Body Effect，$A_v = \\dfrac{1}{\\dfrac{1}{g_m} + R_S} R_S$, 和CS Degeneration十分相似 输出电阻 只考虑Body Effect $$ \\begin{aligned} V_X \u0026amp;= - V_1 = -V_{bs}\\\\ I_X \u0026amp;= g_mV_1 + g_{mb} V_{bs} \\\\ \\therefore R_{out} \u0026amp;= \\frac{V_X}{I_X} \\\\ \u0026amp;= \\frac{1}{g_m + g_{mb}} \\\\ \u0026amp;= \\frac{1}{g_m} || \\frac{1}{g_{mb}} \\end{aligned} $$\nSource Follower Driving Resistive Load 考虑了CLM和Body Effect $$ \\begin{aligned} A_v \u0026amp;= \\frac{\\dfrac{1}{g_{mb}} || r_{o1} || r_{o2} || R_L }{\\dfrac{1}{g_{mb}} || r_{o1} || r_{o2} || R_L + \\dfrac{1}{g_m}} \\end{aligned} $$\nCommon-Gate Stage 电路 (a) 直接耦合\n(b) 电容耦合\nGain 简化后的 Gain $$ \\begin{aligned} V_{out} \u0026amp;= V_{DD} - \\frac{1}{2}k_n(V_b -V_{in} -V_t)^2R_D \\\\ \\therefore A_v \u0026amp;= \\frac{\\partial V_{out}}{\\partial V_{in}} \\\\ \u0026amp;= -k_nV_{OV}(-1-\\eta) R_D \\\\ \u0026amp;= g_m R_D ( 1 + \\eta) \\end{aligned} $$\n$$ \\begin{equation} A_v = g_m R_D \\end{equation} $$\n普适性的Gain $$ \\begin{aligned} V_1 - \\frac{V_{out}}{R_D} R_S + V_{in} \u0026amp;=0 \\\\ V_{out} \u0026amp;=V_{in} -\\frac{V_{out}}{R_D} R_S + (V_1(g_m + g_{mb}) - \\frac{V_{out}}{R_D})r_o \\end{aligned} $$\n$$ \\begin{equation} A_v =\\frac{V_{out}}{V_{in}} = \\frac{1 + (g_m + g_{mb})r_o }{r_o + (g_m + g_{mb})r_oR_S + R_S +R_D}R_D \\end{equation} $$\n若 $R_D \\rightarrow \\infin$ $$ \\begin{equation} A_v = 1 + (g_m + g_{mb}) r_o \\end{equation} $$\nImpedence Input Impedence $$ \\begin{aligned} V_1 \u0026amp;= -V_X \\\\ V_X + (g_mV_1 + g_{mb}V_{bs} - I_X)r_o \u0026amp;= I_XR_D \\\\ \\therefore R_{in} \u0026amp;= \\frac{V_X}{I_X} \\\\ \u0026amp;= \\frac{R_D + r_o}{1 + (g_m + g_{mb})r_o} \\end{aligned} $$\n因为$(g_m + g_{mb})r_o \\gg 1$ $$ \\begin{equation} R_{in }\\approx \\frac{R_D}{(g_m + g_{mb})r_o} + \\frac{1}{g_m + g_{mb}} \\\\ \\end{equation} $$\n若$R_D = 0$ $$ \\begin{equation} R_{in} = \\frac{1}{g_m + g_{mb} + \\dfrac{1}{r_o}} \\end{equation} $$\nOutput Impedence $$ \\begin{equation} R_{out} = \\big[ (1 + (g_m + g_{mb})r_o)R_S + r_o \\big] || R_D \\end{equation} $$\nCascode Stage Basic Configuration 电路 CS + CG\n$M_1$: Input Device\n$M_2$: Cascode Device\nVoltage Range 为了让$M_1$工作在Saturation Region $$ \\begin{aligned} V_X \u0026amp;\\ge V_{in} - V_{T1} \\\\ V_X \u0026amp;= V_b - V_{GS2} V_b -V_{GS2} \u0026amp;\\ge V_{in} -V_{T1} \\\\ V_b \u0026amp;\\ge V_{in} - V_{T1} + V_{GS2} \\end{aligned} $$\n为了让$M_2$工作在Saturation Region $$ \\begin{aligned} \\\\ V_{out} - V_{S2} \u0026amp;\\ge V_b - V_{S2} - V_{T2} \\\\ V_{out} \u0026amp;\\ge V_b - V_{T2} (4)\\\\ V_{out} \u0026amp;\\ge (V_{in} - V_{T1}+ V_{GS2} -V_{T2}) \\\\ \\end{aligned} $$\n$$ \\begin{equation} V_{b \\ min} = V_{in} - V_{TH1} + V_{GS2} \\end{equation} $$\n$$ \\begin{equation} V_{out \\ min} = V_{OV1} + V_{OV2} \\end{equation} $$\nI/O 特性 Cascode Stage With a Source Resistance $$ \\begin{aligned} I_{D2} \u0026amp;= I_{D1} \\frac{R_p}{\\dfrac{1}{g_m + g_{mb}} + R_p} \\\\ \u0026amp;= g_{m1} V_{in} \\frac{(g_m + g_{mb})R_p}{1 + (g_m + g_{mb})R_p} \\end{aligned} $$\n$$ \\begin{equation} \\begin{aligned} A_v \u0026amp;= -\\frac{ I_{D2} }{ I_{D1} } \\\\ \u0026amp;=-g_mR_D\\frac{(g_m + g_{mb})R_p}{1 + (g_m + g_{mb})R_p} \\end{aligned} \\end{equation} $$\n$$ \\begin{equation} R_{out} = [1 + (g_{m2} + g_{mb2})r_{o2}]r_{o1} + r_{o2} \\end{equation} $$\nCascode Stage With Current-Source Load 变换电路 推导 $r_{o1}$ 分走了很多流 $$ \\begin{aligned} I_{out} \u0026amp;= g_{m1}V_{in}\\frac{r_{o1}}{r_{o1} + r_{o2} || \\dfrac{1}{g_m + g_{mb}}} \\\\ G_m \u0026amp;= \\frac{I_{out}}{V_{in}} \\\\ \u0026amp;= g_{m1}\\frac{r_{o1}}{r_{o1} + r_{o2} || \\dfrac{1}{g_m + g_{mb}}} \\\\ |A_v| \u0026amp;= G_m R_{out} \\\\ \u0026amp;= g_{m1} r_{o1} [1 + (g_{m2} + g_{mb2})r_{o2}] \\end{aligned} $$\nFolded Cascode Simple Folded Cascode 对于(b) $$ \\begin{aligned} I_{D2} \u0026amp;= I_1 - \\frac{1}{2}k_p(V_{DD} - V_{in1} - |V_{tp}|)^2 \\\\ I_{D2} \u0026amp; \\downarrow \\ \\Rightarrow I_{D2} = 0 \\\\ I_1 \u0026amp;= \\frac{1}{2}k_p(V_{DD} - V_{in1} - |V_{tp}|)^2 \\end{aligned} $$\n$$ \\begin{equation} V_{in1} = V_{DD} - |V_{tp}| -\\sqrt{\\frac{2I_{1}}{k_p}} \\end{equation} $$\nFolded Cascode With Current Source $$ \\begin{equation} R_{out} = \\big[ 1 + (g_{m2} + g_{mb2})r_{o2} \\big] (r_{o1} || r_{o3}) + r_{o2} \\end{equation} $$\n附录 MOSFET的电阻 名称 输出电阻 反向输出电阻 Triode Region Resistance 符号 $\\dfrac{1}{g_m}$ 或 $r_{ds}$ $r_o$ $R_{on} = \\dfrac{ V_{DS} }{ I_D }$ 适用情况 考虑CLM 进入Triode Region 不适用情况 高频电路 在饱和区，当MOSFET的输入电压足够高，使得MOSFET的通道完全打开，电流受限于外部电路阻抗而不是MOSFET本身。在这种情况下，MOSFET的漏-源电压和漏电流之间的关系可以近似为线性关系，类似于普通的电阻。\n一般的, $r_o \\gg \\frac{1}{g_m}$\nBody Effect the voltage at the body terminal (which is usually connected to the source) affects the threshold voltage of the device. This occurs because of the depletion region that forms between the body and channel regions. When a voltage is applied to the body, it changes the width of this depletion region, which alters the effective thickness of the oxide layer between gate and channel.\n$$ \\begin{equation} \\eta = \\frac{g_m}{g_{mb}} =\\dfrac{\\partial V_{TH}}{\\partial V_{in}} = \\frac{\\partial V_t}{\\partial V_{SB}} \\end{equation} $$\n在考虑Body Effect时, $V_t$是一个随电流变化的参数(一般情况下变化很小，忽略不计)\n$g_{mb}V_{bs}$\n二极管的反向传输电阻对二极管电流的影响, 其中$g_{mb}$叫做反向跨导, 指栅-漏结电容在反向偏置下存储的电荷引起的漏极电流变化的比例，反映了MOSFET的输入特性。 ","date":"2023-04-29T09:32:13+08:00","permalink":"https://downeyflyfan.com/p/3.-single-stage-amplifier/","title":"3. Single Stage Amplifier"},{"content":"Philosophy 小电容 小面积 最好只用MOSFET实现尽可能多的功能 IC Biasing simple MOS constant-current source 电路 分析 $$ \\begin{aligned} I_{D1} \u0026amp;= \\frac{1}{2} k_{n1}\u0026rsquo;(\\frac{W}{L})1 (V{GS} - V_{tn})^2 \\\\ \u0026amp;= I_{ref} \\\\ \u0026amp;= \\frac{V_{DD} - V_{GS}}{R} \\\\ I_{D2} \u0026amp;= \\frac{1}{2} k_{n2}\u0026rsquo;(\\frac{W}{L})2 (V{GS} - V_{tn})^2 \\\\ \\therefore \\frac{I_{D1}}{I_{D2}} \u0026amp;= \\frac{I_{ref}}{I_O} = \\frac{(W/L)_1}{(W/L)_2} \\\\ \\end{aligned} $$\nMOS Current-Steering Circuit 电路 分析 $$ \\begin{aligned} (1) \u0026amp;I_{1,2,3} \\\\ I_{D1} \u0026amp;= I_{REF} \\\\ V_{GS1} \u0026amp;= V_{GS2} = V_{GS3} = V_{GS} \\\\ \\therefore \\frac{I_{D1}}{I_{D2}} \u0026amp;= \\frac{(W/L)2}{(W/L)1} \\\\ \\therefore I{D2} \u0026amp;= I{REF} \\frac{(W/L)2}{(W/L)1} \\\\ I{D3} \u0026amp;= I{REF} \\frac{(W/L)_3}{(W/L)1} \\\\\\ \\\\ (2) \u0026amp; I{4,5} \\\\ I_5 \u0026amp;= \\frac{(W/L)_5}{(W/L)_4} I_4 \\\\ \\end{aligned} $$\nThe Basic Gain Cell 定义(如图) Common Source + 偏置电流 I 分析 电流 $$ 直流偏置点: I_D = I $$\n电路转换 分析 $$ \\begin{aligned} R_{in} \u0026amp;= \\infin \\\\ R_o \u0026amp;= r_o \\\\ A_{vo} \u0026amp;= -g_mr_o \\end{aligned} $$\n电流源负载的输出阻抗效应 电路变换(CMOS) The MOS Differential Pair Basic Configuration 图示 $V_{G1} - V_{T1} = V_{in1}$\n$V_{G2} - V_{T2} = V_{in2}$\n$V_{D1} = V_{out1}$\n$V_{D2} = V_{out2}$\n分析 增益 $$ \\begin{aligned} V_{in1} - V_{in2} \u0026amp;= V_{GS1} - V_{GS2} \\\\ \u0026amp;= \\sqrt{\\frac{2I_{D1}}{k_n}} - \\sqrt{\\frac{2I_{D2}}{k_n}} \\\\ (V_{in1} - V_{in2})^2 \u0026amp;= \\frac{2}{k_n}(I - 2\\sqrt{I_{D1} I_{D2}}) \\\\ \\because 4I_{D1}{I_{D2}} \u0026amp;= (I_{D1} + I_{D2})^2 - (I_{D1} - I_{D2})^2 \\\\ \u0026amp;= I^2 - (I_{D1} - I_{D2})^2 \\\\ \\therefore (I_{D1} - I_{D2})^2 \u0026amp;= I^2 -4I_{D1}I_{D2} \\\\ \u0026amp;= -\\frac{1}{4} k_n^2 (V_{in1} - V_{in2})^4 + I k_n(V_{in1} - V_{in2})^2 \\\\ \\therefore I_{D1} - I_{D2} \u0026amp;= \\frac{1}{2}k_n (V_{in1}- V_{in2}) \\sqrt{\\frac{4I}{k_n} - (V_{in1} -V_{in2})^2} \\\\ \\frac{\\partial \\Delta I_D}{\\partial \\Delta V_{in}} \u0026amp;= \\frac{1}{2}k_n \\frac{\\frac{4I}{k_n} - 2\\Delta V_{in}^2}{\\sqrt{\\frac{4I}{k_n} - \\Delta V_{in}^2} } \\\\ 当V_{in1} \u0026amp;= V_{in2} 时 \\\\ \\frac{\\partial \\Delta I_D}{\\partial \\Delta V_{in}} \u0026amp;= \\sqrt{k_n I} \\\\ \\therefore |A_v| \u0026amp;= \\frac{v_o}{v_i} \\\\ \u0026amp;= \\sqrt{k_n I} R_D \\end{aligned} $$\n矛盾 在上述分析中，当$\\Delta V_{in}$使得$\\Delta I_D= 0$时，矛盾就出现了:\n不同的$V_{in}$产生了相同的$I_D$\n这是因为$\\Delta I$和$\\Delta V_{in}$的关系是在$M_1$和$M_2$都开启的条件下产生的\n经过计算得知满足条件的$\\Delta V_{in}$ 使得$M_2$ off, 故矛盾解决\nCommon-Mode Input Voltage 电路 $Q_1 = M_1$\n$Q_2 = M_2$\n电流源是$M_3$\n分析 $$ \\begin{aligned} V_{G1} \u0026amp;= V_{G2} = V_{CM} \\\\ \\frac{I}{2} \u0026amp;= \\frac{1}{2} k_n V_{OV}^2 \\\\ V_{OV} \u0026amp;= \\sqrt{\\frac{I}{k_n}} (不变) \\\\ V_{D1} \u0026amp;= V_{D2} = V_{DD} -\\frac{I}{2} R_D \\\\\\ \\\\ V_{DS} \u0026amp;\\ge V_{GS} -V_t \\\\ V_{D} \u0026amp;\\ge V_G - V_t \\\\ V_{DD} - \\frac{I}{2}R_D \u0026amp;\\ge V_G - V_t \\\\ V_{CM} = V_{G} \u0026amp;\\le V_{DD} -\\frac{I}{2}R_D + V_t \\\\ \\therefore V_{CMmax} \u0026amp;= V_{DD} -\\frac{I}{2}R_D + V_t \\\\\\ \\\\ V_{GS} \u0026amp;= V_{OV} + V_t \\\\ V_{CM} - V_S \u0026amp;= V_{OV} + V_t \\\\ V_{CM} - (V_{CS} + (-V_{SS})) \u0026amp;= V_{OV} + V_t \\\\ V_{CM} \u0026amp;= V_{CS} - V_{SS} + V_t + V_{OV} \\\\ V_{CM min} \u0026amp;= V_{CS \\ min} -V_{SS} + V_t +V_{OV} \\\\\\ \\\\ A_v \u0026amp;= \\frac{V_{out}}{V_{in,CM}} \\\\ \u0026amp;= - \\frac{R_D / 2}{1/(2g_m) + R_{SS}} \\end{aligned} $$\n电压关系 伏安特性曲线 结论 Common-mode input voltage\nCurrent I divides equally between two transistors\nThe difference between two drains is zero\nThe differential pair rejects the common-mode input signals\nDifferential Input Voltage 电路 分析 $$ \\begin{aligned} When \\ i_{D1} \u0026amp;= I,V_S = -V_t \\\\ I\u0026amp;= \\frac{1}{2}k_n(V_{GS1} -V_t)^2 \\\\ \\therefore V_{GS1} \u0026amp;= V_t +V_{OV} \\\\ \u0026amp;= V_t +\\sqrt 2 V_{OV \\ 0.5I} \\\\ V_{id} - V_s \u0026amp;= V_t + \\sqrt 2 V_{OV \\ 0.5I} \\\\ V_{id} \u0026amp;= \\sqrt{2} V_{OV \\ 0.5I} \\\\\\ \\\\ \\therefore -\\sqrt 2 V_{OV \\ 0.5I} \u0026amp;\\le v_{id} \\le \\sqrt 2 V_{OV \\ 0.5V} \\\\ (V_{OV \\ 0.5I} \u0026amp;= \\sqrt{\\frac{I}{k_n}}) \\end{aligned} $$\n结论 The differential pair responds to a difference-mode The Current-Mirror-Loaded MOS Differential Pair 电路 $Q_3$和$Q_4$是构成了镜像电流源 分析 $$ \\begin{aligned}\n\\end{aligned} $$\nTwo-Stage CMOS Op-Amp Configuration Common-Mode Rejection 电路 $R_{SS}$ 是另一个MOSFET被等效后的源内阻$r_0$ 分析 $$ \\begin{aligned} (1) \u0026amp;对半电路分析 \\\\ V_{icm} \u0026amp;= i(2R_{SS} + \\frac{1}{g_m}) \\\\ i \u0026amp;= \\frac{v_{icm}}{2R_{SS} + \\frac{1}{g_m}} \\\\ v_{o1} \u0026amp;= v_{o2} \\\\ \u0026amp; = -\\frac{v_{icm}}{2R_{SS} + \\frac{1}{g_m}} R_D \\\\ \u0026amp;\\approx - \\frac{v_{icm} R_D}{2R_{SS}} \\\\ v_{od} \u0026amp;= v_{o1} - v_{o2} \\approx 0 \\\\ \\therefore A_d \u0026amp;\\approx - \\frac{R_D}{2R_{SS}} \\\\\\ \\\\ (2) 对\u0026amp;整个电路 \\\\ A_{CM} \u0026amp;= 0 \\ (一正一负) \\\\ CMRR \u0026amp;= \\frac{|A_d|}{|A_{cm}|} \\\\ \u0026amp;= \\infin \\end{aligned} $$\nLarge-Signal Operation 电路 假设 不考虑CLM\n工作在饱和区\nLoad Imdependence\n分析 $$ \\begin{aligned} i_{D1} \u0026amp;= \\frac{1}{2}k_n(V_{GS1} -V_t)^2 \\\\ i_{D2} \u0026amp;= \\frac{1}{2}k_n(V_{GS2} -V_t)^2 \\\\ V_{G1} - V_{G2} \u0026amp;= V_{id} = V_{GS1} - V_{GS2} \\\\\\ \\\\ \\sqrt{i_{D1}} -\\sqrt{i_{D2}} \u0026amp;= \\sqrt{\\frac{1}{2} k_n} \\ v_{id} \\\\ i_{D1} + i_{D2} \u0026amp;= I \\\\ 解得: i_{D1} \u0026amp;= \\frac{I}{2} + \\Big( \\frac{I}{V_{OV0.5I}}\\Big) \\Big( \\frac{v_{id}}{2} \\Big) \\sqrt{1 - \\Big(\\frac{v_{id}/2}{V_{OV 0.5I}}\\Big)^2} \\\\ i_{D2} \u0026amp;= \\frac{I}{2} - \\Big( \\frac{I}{V_{OV0.5I}}\\Big) \\Big( \\frac{v_{id}}{2} \\Big) \\sqrt{1 - \\Big(\\frac{v_{id}/2}{V_{OV 0.5I}}\\Big)^2} \\\\\\ \\\\ \\because \\frac{v_{id}}{2} \u0026amp;\\ll V_{OV 0.5I} \\\\ \\therefore i_{D1} \u0026amp;\\approx \\frac{I}{2} + \\Big( \\frac{I}{V_{OV0.5I}}\\Big) \\Big( \\frac{v_{id}}{2} \\Big) \\\\ i_{D2} \u0026amp;\\approx \\frac{I}{2} - \\Big( \\frac{I}{V_{OV0.5I}}\\Big) \\Big( \\frac{v_{id}}{2} \\Big) \\\\ i_d \u0026amp;\\approx \\Big( \\frac{I}{V_{OV0.5I}}\\Big) \\Big( \\frac{v_{id}}{2} \\Big) \\\\ g_m \u0026amp;= \\frac{I}{V_{OV}} \\ \\ (I_D = \\frac{I}{2}) \\end{aligned} $$\nSmall-Signal Operation Ex. 题目 分析 因为对称, 把电路等效后差分成两个相同的电路 得到 $$ \\begin{aligned} A_v \u0026amp;= \\frac{R_D || (R_L/2)}{\\frac{1}{g_m} + R_S} \\end{aligned} $$\nAppendix 直流偏置点 放大电路中交流信号的幅度变化围绕着一个直流电平进行，这个直流电平就是所谓的偏置点。在放大器中，通过设置适当的偏置点可以使得输出信号能够在不失真的情况下尽可能地接近于输入信号。\n","date":"2023-04-26T10:14:34+08:00","permalink":"https://downeyflyfan.com/p/8-9.-ic-amplifer-differential-and-multistage-amplifiers/","title":"8-9. IC Amplifer \u0026 Differential and Multistage Amplifiers"},{"content":"Deep FeedForward Networks (Multilayer Perceptrons) Gradient-Based Learning Learning Conditional Distribution With MLE $$ J(\\pmb \\theta)= -\\mathbb E_{\\mathcal{X,Y}\\sim p_{data}} log \\ p_{model} (\\pmb{y | x}) \\\\\\ \\\\ When \\ p_{model}(\\pmb{y | x}) = \\mathcal N(\\pmb{y;f(x,\\theta),I}) \\\\\\ \\\\ J(\\pmb \\theta) = \\frac{1}{2} \\mathbb E_{x,y \\sim p_{data}} ||\\pmb y - f(\\pmb{x;\\theta})||^2 + C $$\nOutput Unit Linear Units for Gaussian Output Distributions $$ p(\\pmb{y | x})= \\mathcal N(\\pmb{y;\\hat y,I}) $$\nSigmoid Units for Bernoulli Distribution(二分类问题) $$ \\sigma = \\frac{1}{1+e^{-x}} \\\\\\ \\\\ \\hat y = \\sigma(\\pmb{w^Th} +b), y \\in \\lbrace0,1\\rbrace\\\\\\ \\\\ z = \\pmb{w^Th} +b ,称为logit\\\\\\ \\\\ \\begin{aligned} log \\overset{\\sim}P(y) \u0026amp;= yz \\\\ \\overset{\\sim} P(y) \u0026amp;= e^{yz} \\\\ P(y) \u0026amp;= \\frac{e^{yz}}{\\sum_{y\u0026rsquo;=0}^n e^{y\u0026rsquo;z}} \\\\ \u0026amp;= \\sigma((2y-1)z) \\end{aligned} \\\\\\ \\\\ \\begin{aligned} \\therefore J(\\theta) \u0026amp;= -logP(\\pmb{y|x}) \\\\ \u0026amp;= -log\\ \\sigma((2y-1)z) \\\\ \u0026amp;= \\xi((1-2y)z) \\end{aligned} $$\nSoftmax Units For Multinoulli Distribution Softmax 定义 $$ Softmax(z_i) = \\frac{e^{z_i}}{\\sum_j e^{z_j}} \\\\\\ \\\\ log \\ Softmax(z_i) = z_i - log\\sum_j z_j $$\nSoftmax 性质 $$ Softmax(\\pmb z) = Softmax(\\pmb z +c) \\\\\\ \\\\ Softmax(\\pmb z) = Softmax(\\pmb z - max z_i) $$\nHidden Units Rectified Linear Units $$ h(x) = \\begin{cases} x , x\\ge 0 \\\\ 0, x\\lt 0 \\end{cases} $$\nGeneralization Leaky ReLU 在ReLU中，当输入小于0时，输出为0，而Leaky ReLU则是当输入小于0时，输出为一个小的非零值而不是0，这有助于解决ReLU中的“死亡神经元”问题。\n$$ f(x) = \\begin{cases} x \u0026amp; x\\ge 0 \\\\ \\alpha x \u0026amp; x\\lt 0, \\alpha \\lt 1 \\end{cases} $$\nParametric ReLU 在Leaky ReLU的基础上引入可学习的参数，使得模型可以自适应地选择最适合的斜率。\n$$ f(x) = \\begin{cases} x \u0026amp; x\\ge 0 \\\\ ax \u0026amp; x\\lt 0 \\end{cases} \\\\\\ \\\\ a是可学习参数 $$\nExponential ReLU 在ReLU的基础上引入了一个指数函数，使得模型可以更快地收敛，并且对于负数输入也有一个非零输出。\n$$ f(x) = \\begin{cases} x \u0026amp; x\\ge 0 \\\\ \\alpha (e^x -1) \u0026amp; x\\lt 0 \\end{cases} $$\nRandomized ReLU 在ReLU的基础上引入了随机性，即在训练过程中随机选择一个斜率，这有助于防止过拟合。\n$$ f(x) = \\begin{cases} x \u0026amp; x\\ge 0 \\\\ \\alpha (e^x -1) \u0026amp; x\\lt 0 \\end{cases} \\\\\\ \\\\ \\alpha是一个随机选择的常数 $$\nMaxout Maxout是一种更通用的激活函数，它可以选择多个输入中的最大值作为输出，这使得模型可以学习更复杂的非线性函数\n$$ f(x) = \\underset{i}{max}(w_i^T + b_i) $$\nArchitecture Design Universal Approximation Properties and Depth Universal Approximation Theorem 一个具有足够多的神经元和层数的神经网络可以近似地表示任何函数 其他定理 $d$个输入，$l$的深度，每个隐藏层$n$个单元,其Linear Regions的个数为 $$ O\\begin{pmatrix} \\begin{pmatrix} n \\\\ d \\end{pmatrix}^{d(l-1)} n^d \\end{pmatrix} \\\\\\ \\\\ 对于k次过滤的maxout: O\\Big(k^{(l-1)+d}\\Big) $$\nBack-Propagation \u0026amp; Differentiation Algorithms Back-Propagation 通过将误差从输出层向输入层传播，计算每个神经元的误差贡献，并根据误差大小更新网络权重，以逐步优化网络的预测能力\nDifferentiation Algorithms 前向差分法 (Forward Difference Method)： $$\\frac{df(x)}{dx} \\approx \\frac{f(x+h)-f(x)}{h}$$\n后向差分法 (Backward Difference Method)： $$\\frac{df(x)}{dx} \\approx \\frac{f(x)-f(x-h)}{h}$$\n中心差分法 (Central Difference Method)： $$\\frac{df(x)}{dx} \\approx \\frac{f(x+h)-f(x-h)}{2h}$$\n自适应差分法 (Adaptive Difference Method)： $$\\frac{df(x)}{dx} \\approx \\begin{cases} \\frac{f(x+h)-f(x)}{h}, \u0026amp; \\left|\\frac{f(x+h)-f(x)}{h}-\\frac{f(x)-f(x-h)}{h}\\right| \\leq \\epsilon \\ \\frac{f(x+h)-f(x-h)}{2h}, \u0026amp; \\text{otherwise} \\end{cases}$$\n其中，$f(x)$ 表示函数 $f$ 在 $x$ 处的取值，$h$ 表示差分的步长，$\\epsilon$ 表示容许的误差。\nComputational Graphs Recursively Applying the Chain Rule to Obtain Backprop $$ u^{(i)} = f(\\mathbb A^{(i)}) \\\\\\ \\\\ \\begin{aligned} \u0026amp;for \\ i = 1,\u0026hellip;,n_i\\ do \\\\ \u0026amp; \\ \\ u^{(i)} \\leftarrow x_i \\\\ \u0026amp;end \\ for \\\\ \u0026amp; for \\ i = n_i + 1 ,\u0026hellip;,n \\ do \\\\ \u0026amp; \\ \\ \\mathbb A \\leftarrow \\lbrace u^{(j)} | j \\in Pa(u^{(j)})\\rbrace \\\\ \u0026amp; \\ \\ u^{(i)} \\leftarrow f^{(i)} (\\mathbb A^{(i)}) \\\\ \u0026amp; end \\ for \\end{aligned} $$\nBack-Propagation Computation in Fully-Connected MLP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026#39;\u0026#39;\u0026#39; Require: Network depth, l Require: W (i) (i), i ∈ {1, . . . , l}, the weight matrices of the model Require: b , i ∈ {1, . . . , l}, the bias parameters of the model Require: x, the input to process Require: y, the target output \u0026#39;\u0026#39;\u0026#39; import numpy as np def BP_MLP(l,W,b,x,y_hat): int k h = [] h.append(x) for k in range(1,k+1): a[k] = b[k] + W[k]*h[k-1] h.append(f(a[k])) // f假设为一个已经定义的函数 y_hat = h[l] J = L(y,y_hat) + omega(theta)*Lambda Latest Algorithm 自适应动量优化算法（Adaptive Moment Estimation，Adam） 1 2 3 import torch.optim as optim optimizer = optim.Adam(model.parameters(), lr=0.001) 均方根传播算法（Root Mean Square Propagation，RMSprop） 1 2 3 import torch.optim as optim optimizer = optim.RMSprop(model.parameters(), lr=0.001) 带动量的随机梯度下降算法（Stochastic Gradient Descent with Momentum，SGDM） 1 2 3 import torch.optim as optim optimizer = optim.SGD(model.parameters(), lr=0.001, momentum=0.9) 自适应梯度算法（Adaptive Gradient Algorithm，AdaGrad） 1 2 3 import torch.optim as optim optimizer = optim.Adagrad(model.parameters(), lr=0.001) 自适应梯度估计算法（Adaptive Gradient Estimation，AdaDelta） 1 2 3 import torch.optim as optim optimizer = optim.Adadelta(model.parameters(), lr=0.001) Regularization for Deep Learning Parameter Norm Penalties $$ Regularized \\ Objective \\ Function \\\\\\ \\\\ \\overset{\\sim}{J} (\\pmb{\\theta;X,y}) = J (\\pmb{\\theta;X,y}) + \\alpha \\Omega(\\pmb \\theta) $$\n$\\alpha$: 超参数\n$\\Omega$: Parameter Norm\n$J$: Standard Objective Function\n$L^2$ Parameter Regularization 假设No Bias，则$\\theta = \\omega$ $$ \\Omega(\\omega) = \\frac{1}{2}\\omega^T \\omega \\\\\\ \\\\ \\overset{\\sim}{J} (\\pmb{\\theta;X,y}) = J (\\pmb{\\theta;X,y}) + \\frac{1}{2}\\alpha \\pmb{\\omega^T \\omega}\\\\\\ \\\\ $$\n$J(\\theta)$的表达式 $$ \\nabla_{\\omega}\\overset{\\sim}{J} (\\pmb{\\theta;X,y}) = \\nabla_{\\omega} J (\\pmb{\\theta;X,y}) + \\alpha \\pmb \\omega \\\\\\ \\\\ \\pmb{\\omega} - \\epsilon (\\nabla_{\\omega} J (\\pmb{\\theta;X,y}) + \\alpha \\pmb \\omega ) \\rightarrow \\pmb \\omega \\\\\\ \\\\ (1-\\epsilon \\alpha) \\pmb \\omega - \\epsilon \\nabla_{\\omega} J(\\pmb{\\omega;X,y}) \\rightarrow \\pmb \\omega \\\\\\ \\\\ \\therefore \\pmb \\omega^* = min_{\\omega} J(\\pmb \\omega) \\\\\\ \\\\ \\therefore \\hat J (\\pmb \\theta) = J(\\pmb \\omega^) + \\frac{1}{2} (\\pmb{\\omega -\\omega^})^T H(\\pmb{\\omega - \\omega^*}) (泰勒展开忽略第二项) $$\nHessian matrix $$ H(J(\\pmb \\theta)) = J的二阶导 \\\\\\ \\\\ \\because \\frac{\\partial f}{\\partial x_i \\partial x_j} = \\frac{\\partial f}{\\partial x_j \\partial x_i} \\\\\\ \\\\ \\therefore H 是\\pmb{对称矩阵} $$\n最小值 $$ \\alpha \\overset{\\sim}{\\pmb \\omega} + \\pmb{H(\\overset{\\sim}{\\pmb \\omega} - w^* )} = 0时取得\\pmb{最小值} \\\\\\ \\\\ \\ \\begin{aligned} \\overset{\\sim}{\\pmb \\omega} \u0026amp;= (\\pmb{H} + \\alpha \\pmb I)^{-1} \\pmb {H\\omega^} \\\\ \u0026amp;= (Q\\Lambda Q^T + \\alpha I)^{-1} Q\\Lambda Q^T \\omega^ \\\\ \u0026amp;= Q(\\Lambda + \\alpha I)^{-1} \\Lambda Q^T \\omega^* \\end{aligned} $$\n以线性回归为例 $$ J = \\pmb{(X\\omega -y)^T(X\\omega -y)} + \\frac{1}{2}\\alpha \\omega^T\\omega \\\\\\ \\\\ \\pmb \\omega = (\\pmb{X^TX} + \\alpha \\pmb I)^{-1} \\pmb{X^T y} $$\n$L^1$ Regularization Regularization Function $$ \\Omega(\\pmb \\omega) = ||\\pmb \\omega||_1 = \\sum_i |\\omega_i| \\\\\\ \\\\ \\overset{\\sim}{J} (\\pmb{\\theta;X,y}) = J (\\pmb{\\theta;X,y}) + \\alpha ||\\pmb \\omega ||_1 \\\\\\ \\\\ J(\\pmb \\omega) = J(\\pmb \\omega^) + \\sum_i (\\frac{1}{2}\\pmb{H(\\omega_i - \\omega_i^) } + \\alpha |\\omega_i|) \\ \\ (泰勒展开) \\\\\\ \\\\ \\omega_i = sign(\\omega^) max\\lbrace |\\omega^i| - \\frac{\\alpha}{H{i,i}},0\\rbrace $$\nNorm Penalties as Constrained Optimization ","date":"2023-04-18T13:09:34+08:00","permalink":"https://downeyflyfan.com/p/deep_networks/","title":"Deep_Networks"},{"content":"TaskSheet Report 要求 总体要求 provide a detailed explanation of the issue(s)\nprovide a detailed explanation of two or more approaches to resolving the issue(s)\nuse the two source articles provided\nuse at least two other source articles located via the UoG Library online system and/or the IEEE Xplore database\nprovide a full and accurate reference list in IEEE style\nAbstract\ninclude a glossary of any specialist or technical terms (最多十个)\n字数要求 共$1000\\pm 10%$字，Abstract $100-150$字 格式要求 Font: Arial bold 12pt for headings + subheadings; Arial 11pt for TextBody\nSpacing: 1.5 spacing\nVisuals: Only include visual information if necessary. If doing so, make sure you reference this appropriately using IEEE style.\nCover page: Include a cover page with name (in Pinyin), UESTC ID, Assignment Title and word count. All writing on this page must be in Arial 14pt.\nReport 组成 Abstract\nmain body of the text\nglossary\nreference list\nSubmission Deadline 5.14 Name Format WA_group_SurnameFirstname eg WA_CE4A_WangJiangqin Academic Literacy Scientific Writing Readability\nEconomy\n少字多信息 Precision\nClarity\nNot Just Science\nCarbon Footprints of ICs 如何减少 设计优化：通过优化电路设计和选择更高效的芯片，可以减少芯片的功耗和碳排放量。例如，采用更低功耗的芯片、优化电路布局等，可以减少芯片的能耗和碳排放量.\n制造优化：通过采用更环保的制造过程，可以减少芯片制造过程中的碳排放量。例如，采用更高效的制造设备、使用可再生能源等，可以减少制造过程中的碳排放量.\n延长使用寿命：通过延长芯片的使用寿命，可以减少因更换芯片而产生的碳排放量。例如，采用更高质量的芯片、优化芯片的使用环境等，可以延长芯片的使用寿命.\n回收利用：通过回收利用废旧芯片，可以减少废旧芯片对环境的影响和碳排放量。例如，采用回收利用技术，将废旧芯片回收、分解和再利用，可以减少废旧芯片对环境的影响和碳排放.\n","date":"2023-04-17T14:28:13+08:00","permalink":"https://downeyflyfan.com/p/cs101112-written-assignment/","title":"CS10,11,12 Written Assignment"},{"content":"SPI与I2C SPI \u0026ndash; Serial Peripheral Interface 原理 Serial Communication Protocol Master-Slave Protocol Master controls all activities Full Duplex Maximum Operating Frequency 组成 MOSI MISO SCLK Serial Clock SSEL Slvae Select Function Master 名称 实例/功能 SPI SPI ser_port(A6, A5, A4); // mosi, miso, sclk write recd_val=ser_port.write(0x88|0x66|0x4A); 写入slave，并接受返回信息 format ser_port.format(8,0); //8-bit data, Mode 0 frequency ser_port.frequency(1000000); // Clock frequency is set to 1MHz Slave SPISlave SPISlave ser_port(A6, A5, A4, D3); // mosi, miso, sclk, ssel format ser_port.format(8,0); //8-bit data, Mode 0 frequency ser_port.frequency(1000000); // Clock frequency is set to 1MHz receive Polls the SPI to whether the data has been received read ser_port.read(); //read from master reply ser_port.reply(switch_word); //send reply to master Mode 0：时钟极性为0，时钟相位为0。\nMode 1：时钟极性为0，时钟相位为1。\nMode 2：时钟极性为1，时钟相位为0。\nMode 3：时钟极性为1，时钟相位为1。\nExample SPI Master 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include \u0026#34;mbed.h” SPI ser_port(A6, A5, A4); // mosi, miso, sclk DigitalOut red_led(D11); //red led DigitalOut chip_select(D3); //this acts as “slave select” char switch_word; //word we will send char recd_val; //value return from slave int main() { ser_port.format(8,0); //8-bit data, Mode 0 ser_port.frequency(1000000); // Clock frequency is set to 1MHz while (1) { switch_word=0xA0; chip_select = 0; //select slave recd_val=ser_port.write(switch_word); //send switch_word //and rec. data chip_select = 1; wait(0.01); //wait 10 ms red_led=0; if (recd_val==0xA0) red_led=1; } } SPI Slave 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include \u0026#34;mbed.h” SPISlave ser_port(A6, A5, A4, D3); // mosi, miso, sclk, ssel DigitalOut red_led(D11); //red led char slave_word; //word the slave will send char recd_val; //value received from the master int main() { //If no formatting is made then default is applied while (1) { slave _word=0xA0; if(ser_port.receive()) //test for data Tx { recd_val = ser_port.read(); //read from master ser_port.reply(switch_word); //send reply } } red_led=0; //preset LED to 0 if (recd_val==0xA0) red_led=1; } I2C - Inter-Integrated Circuit 原理 Half-Duplex Master-Slave Hierarchy Master initials the data transimission 组成 SCK Clock SDA Bi-Directional Function Master I2C I2C i2c_port(D0, D1); //Configure a serial port, SDA,SCL frequency read read from Slave or Master write write to Slave or Master start i2c_port.start(); // start condition stop Stop or Reset the I2C Slave back into the known ready receiving state. Slave I2CSlave I2CSlave slave(D0, D1); // SDA, SCL frequency receive Checks to see if this I2C Slave has been addressed. (0: Has not been addressed; 1: addressed to read; 3: addressed to write) address slave.address(0x52); //set the slave address read write stop Reset the I2C Slave back into the known ready receiving state. Example Master 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include \u0026#34;mbed.h\u0026#34; I2C i2c_port(D0, D1); //Configure a serial port, SDA,SCL DigitalOut red_led(p25); //red led char master_word; //word we will send char recd_val; //value return from slave const int device_addr = 0x52; //I2C slave address int main() { while (1) { master_word=0xA0; //send a single byte of data, in a correct I2C package i2c_port.start(); // start condition i2c_port.write(device_addr); //send the device address i2c_port.write(master_word); //send 1-byte of data i2c_port.stop(); //stop condition wait(0.002); //receive a single byte of data, in correct I2C package i2c_port.start(); i2c_port.write(addr|0x01); recd_val=i2c_port.read(addr); i2c_port.stop(); if (recd_val==0xA0) red_led=1; } } Slave 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include \u0026#34;mbed.h” I2CSlave slave(D0, D1); // SDA, SCL DigitalOut red_led(D11); //red led char slave_word; //word the slave will send char recd_val; //value received from the master int main() { slave.address(0x52); //set the slave address while (1) { slave _word=0xA0; slave.write(slave_word);//load the word that will be sent //check to see if slave was addressed int i = slave.receive(); if (i == 3) recd_val = slave.read(); } if (recd_val==0xA0) red_led=1; } } SPI与I2C对比 SPI 更快，更节能，双工(更高效),不受限于8位字\nI2C更简单，支持多主机(一次只能开一个)\nADC 端口 原理 $V_{ref}$: 参考电压\n$SC$: Start Conversion\n$EOC$: End of Conversion\n$$ D = \\frac{V_i}{V_r} 2^n \\\\\\ \\\\ \\frac{Input}{Resolution} = Output \\\\\\ \\\\ V_i : Analogue \\ Input \\\\\\ \\\\ V_r: Reference \\ Voltage \\\\\\ \\\\ \\frac{V_r}{2^n}: Resolution \\\\\\ \\\\ 0 \\le D \\le 2^{n-1}: Digital \\ Output \\ Value $$\n分类 Successive Approximation ADC Delta-sigma ADC Flash ADC Dual-Slope Integrating ADC Pipeline ADC Successive Approximation ADC 定义 Generates the binary output by comparing the input to a factor of the reference voltage which is generated by the SAR register. 电路 处理过程 应用 创建 Digital Voltmeter 1 2 3 4 5 6 7 8 9 10 11 12 #include \u0026#34;mbed.h\u0026#34; AnalogIn Ain(D3); Serial pc(USBRX,USBTX); int main(){ double V; while(1){ pc.printf(\u0026#34;----Digital Voltmeter----\u0026#34;); V = 3.3f*Ain; pc.printf(\u0026#34;The measured voltage is %.2f\u0026#34;, V); } } Digital Thermometer DAC 电路 解释 $$ V_o = \\frac{D}{2^n}V_r $$\nBinary Ladder or R-2R Ladder 配置 $$ V_o = \\dfrac{\\sum_{i=0}^n 2^i V_i}{2^n} $$\n优缺点 Advantages Disadvantages High Resolution Voltage levels must be exactly the same for all inputs in Weighted Resistors DAC. High Accuracy Binary weighted Resistor circuit that require Op- Amps are expensive. Simple to implement In R-2R Ladder converters, delay is caused as the circuit needs switching based on the inputs. ","date":"2023-04-13T10:30:49+08:00","permalink":"https://downeyflyfan.com/p/4.-i2cspiadcdac/","title":"4. I2C,SPI,ADC,DAC"},{"content":"Overflow \u0026amp; Underflow Definition 数值过大超出数据类型叫做Overflow;数值接近0被误认为是0叫做Underflow\nSolution - Softmax Function Original Definition $$ Softmax(x_i) = \\frac{x_i}{\\sum_{j=1}^n x_j} $$\nImprovement $Let \\ z = x_i - max \\ x_i$ 可以解决Overflow的问题，但是Underflow不行 $log Softmax(x_i)$，解决了$+\\infin$的问题，但会出现$-\\infin$ Poor Conditioning $$ \\pmb A \\in \\mathbb R^{m\\times n}可以进行Eigenvalue \\ decomposotion \\\\\\ \\\\ 那么它的Condition \\ Number \\ \\kappa = \\underset{i,j}{max}\\Big|\\frac{\\lambda_i}{\\lambda_j}\\Big| = ||A|| \\times ||A^{-1}|| $$\nGradient-Based Optimization Loss Function 用来进行优化的方程 ","date":"2023-04-12T20:02:28+08:00","permalink":"https://downeyflyfan.com/p/numerical-computation/","title":"Numerical Computation"},{"content":"Finite-State Machine Models 作用 描述有限数量状态的系统/过程 常见FSM State Diagram 比较 比较 Moore Mealy 输出 仅与当前状态有关 与当前状态和输入信号有关 Analysis Next-State Table Next-State Equation D-Flip-Flop 图示 方程 $$ \\begin{aligned} D_1 \u0026amp;= Q_1\u0026rsquo;Q_0 \\\\ D_0 \u0026amp;= Q_1\u0026rsquo;Q_0\u0026rsquo; + CQ_1\u0026rsquo; \\\\ Q_{next} \u0026amp;= D \\\\ Q_{1next} \u0026amp;= D_1 = Q_1\u0026rsquo;Q_0 \\\\ Q_{2next} \u0026amp;= D_0 = Q_1\u0026rsquo;Q_0\u0026rsquo; + CQ_1' \\end{aligned} $$\nMoore FSM Verilog for a 10101 or 10111 detector (Overlapping Considered) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 module fsm ( input clk, input reset, input x, output reg y ); // Define states using Gray code parameter S0 = 3\u0026#39;b000; parameter S1 = 3\u0026#39;b001; parameter S2 = 3\u0026#39;b011; parameter S3 = 3\u0026#39;b010; parameter S4 = 3\u0026#39;b110; parameter S5 = 3\u0026#39;b111; // Declare state register and next state variable reg [1:0] state, next_state; // Two procedural blocks for Moore-type FSM always @(posedge clk or posedge reset) begin if (reset) begin // Reset to initial state state \u0026lt;= S0; y \u0026lt;= 0; end else begin // Update current state based on next_state value at clock edge state \u0026lt;= next_state; always @(*) begin // Next-state logic based on current-state and inputs (Mealy-type) case(state) S0: if(x == 1) begin // Transition to State-1 when x=1 next_state = S1; end else begin // Stay in the same State otherwise next_state = S0; end S1: if(x == 1) begin // Transition to State-2 when x=1 next_state = S2; end else begin // Stay in the same State otherwise next_state = S1; end S2: if(x == 0) begin // Transition to State-3 when x=0 next_state = S3; end else begin // Stay in the same State otherwise next_state = S2; end S3: if(x == 0) begin // Transition to State-0 when x=0 next_state = S0; end else begin // Stay in the same State otherwise next_state = S3; end S4: if(x==0) next_state = S0; else next_state = S1; default: // Default transition to initial state (S0) next_state = S0; endcase end endmodule Design 101 序列检测 (考虑重叠) State Diagram Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 module moore_101_sequence_detector( input clk, input reset, input data, output reg detected ); parameter S0 = 2\u0026#39;b00; // 状态0 parameter S1 = 2\u0026#39;b01; // 状态1 parameter S2 = 2\u0026#39;b10; // 状态2 parameter S3 = 2\u0026#39;b11; // 状态3 reg [1:0] state; // 状态寄存器 always @(posedge clk, posedge reset) begin if (reset) begin state \u0026lt;= S0; // 复位状态 detected \u0026lt;= 0; // 复位检测信号 end else begin case (state) S0: begin // 状态0 if (data) begin state \u0026lt;= S1; end else begin state \u0026lt;= S0; end end S1: begin // 状态1 if (data) begin state \u0026lt;= S1; end else begin state \u0026lt;= S2; end end S2: begin // 状态2 if (data) begin state \u0026lt;= S3; end else begin state \u0026lt;= S0; end end S3: begin // 状态3 if (data) begin state \u0026lt;= S1; detected \u0026lt;= 1; //检测到101 end else begin state \u0026lt;= S2; end end endcase end endmodule 附录 同步复位与异步复位 同步复位在时钟上升沿复位;异步复位可以在任何时刻复位\n","date":"2023-04-11T10:29:23+08:00","permalink":"https://downeyflyfan.com/p/6.%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/","title":"6.有限状态机"},{"content":"有MOSFET的放大器 $V_{DS} - V_{GS}$ 图示 公式 $$ \\begin{aligned} V_{DS} \u0026amp;= V_{DD} - i_DR_D \\\\ \u0026amp;= V_{DD} - \\frac{1}{2}k_nV_{OV}^2R_D \\\\\\ \\\\ 对于饱和区\u0026amp;和三角区的临界点\\pmb B \\\\ V_{DS}|B \u0026amp;= V{GS}|B -V_T \\\\ \u0026amp;= V{OV} \\\\ \u0026amp;= \\frac{\\sqrt{2k_n R_D V_{DD}+1}-1}{k_nR_D} (带入上式获得) \\\\ V_{GS}|B \u0026amp;= V_t + V{DS}|B \\\\ \u0026amp;= V_t + \\frac{\\sqrt{2k_n R_D V{DD}+1}-1}{k_nR_D} \\end{aligned} $$\n偏压获得线性放大 Q点: bias point/dc operating point/ quiescent point 小信号电压增益 电流 $$ \\begin{aligned} i_D \u0026amp;= I_D + i_d \\\\ \u0026amp;= \\frac{K(V_{GS}+v_{GS}-V_T)^2}{2} \\\\ \u0026amp;= \\frac{K(V_{GS}-V_T)^2}{2} + K(V_{GS}-V_T)v_{gs} + \\frac{K}{2}v_{gs}^2 \\\\ \u0026amp;= dc + linear \\ Gain + nonlinear \\ distortion \\\\ \\frac{1}{2}kv_{gs}^2 \u0026amp;\\ll kv_{ov}v_{gs} \\\\ v_{gs} \u0026amp;\\ll 2v_{ov} \\\\ \u0026amp;由于v_{gs}^2太小，直接\\pmb{忽略第三项} \\\\\\ i_D \u0026amp;= \\frac{K(V_{GS}-V_T)^2}{2} + K(V_{GS}-V_T)v_{gs} \\\\ i_D \u0026amp;= I_D + i_d \\\\ i_d \u0026amp;= KV_{OV}v_{gs} \\end{aligned} $$\n电导 $$ \\begin{aligned} g_m \u0026amp;= \\frac{\\partial i_d}{\\partial v_{GS}}\\Big|{v{gs} = V_{GS}} \\\\ \u0026amp;= \\frac{d[\\frac{1}{2}k_n(V_{GS}-V_t)^2]}{dv_{GS}}\\Big|{v{gs} = V_{GS}} \\\\ \u0026amp;= \\pmb{k_nV_{OV}} \\\\ \\because I_D \u0026amp;= \\frac{1}{2}k_nV_{OV}^2 \\Longrightarrow V_{OV} = \\frac{\\sqrt{2I_D}}{\\sqrt{k_n}} \\\\ \\therefore g_n \u0026amp;= \\sqrt{2k_nI_D} = \\frac{2I_D}{V_{OV}} \\end{aligned} $$\n增益 $$ \\begin{aligned} V_{DS} \u0026amp;= V_{DD} - i_DR_D \\\\ \u0026amp;= V_{DD} - (I_D + i_d)R_D \\\\ \u0026amp;= V_{DD} - I_DR_D -i_dR_D \\\\ A_v \u0026amp;= \\frac{v_o}{v_i} = \\frac{v_{ds}}{v_{gs}} = -g_mR_D \\\\ I_D \u0026amp;= \\frac{1}{2}KV_{OV}^2 \\Longrightarrow K = \\frac{2I_D}{V_{OV}^2} \\\\ \\therefore A_v \u0026amp;= -\\frac{I_D R_D}{V_{OV}/2} = -g_m R_D \\\\ \\end{aligned} $$\n通过图像分析确定VTC 图像 Q on IVC ($V_{GS}$ is fixed)? Point $Q_1$ is too close to $V_{DD}$, resulting in the positive peaks of the signal being clipped off which is called the circuit does not have sufficient \u0026ldquo;headroom\u0026rdquo;\nPoint $Q_2$ is too close to the boundary of the triode region, thus severely limiting the allowable negative signal swing of vds, resulting in a distorted output signal. In this situation the circuit does not have sufficient \u0026ldquo;legroom.\u0026rdquo;\nExample E.x.1 题目 $$ (1)V_t = 1.5V, k’n(W/L) = 0.25mA/V^2 \\\\\\ \\\\ (2)V_A = 50V (晶体管的最大反向漏极电压) $$\n问题 small-signal voltage gain\ninput resistance, the largest allowable input signal\n解答 分析电路 $$ DC不流过R_G \\Longrightarrow V_{GS} = V_{DS} = V_{DD} - I_DR_D\\\\\\ \\\\ I_D = \\frac{1}{2} k_nV_{OV}^2 \\\\\\ \\\\ \\therefore I_D = 1.06(mA) , V_{GS} = V_{DS} = 4.4(V), V_{OV}= V_{GS} - V_t =2.9(V) \\\\\\ \\\\ g_m = k_nV_{OV} =0.725(mA/V) $$\n继续转换电路 分析 $$ r_o =\\frac{V_A}{I_D} = 47(k\\Omega) \\\\\\ \\\\ R\u0026rsquo;L = R_L || R_D || r_o = 4.52(k\\Omega) \\\\\\ \\\\ i_i = \\frac{v{gs}-v_o}{R_G} \\\\\\ \\\\ v_o = (i_i - g_mv_{gs}) R_L\u0026rsquo; \\\\\\ \\\\ (2) A_v = -g_m R_L\u0026rsquo; \\frac{1-(1/g_mR_G)}{1 + (R_L\u0026rsquo; /R_G)} = -3.3(V/V) \\\\\\ \\\\ V_{DS} \\ge V_{OV} \\\\\\ \\\\ V_{DS min} = V_{GS max} -V_t \\\\\\ \\\\ V_{DS} - |A_v| v_{ip} = V_{GS} + V_{ip} -V_t \\\\\\ \\\\ \\because V_{GS } = V_{DS} \\\\\\ \\\\ V_{iP max} = \\frac{V_t}{|A_v| + 1} $$\nModel T Equivalent-Circuit Model 在电路中加入第二个MOSFET (不影响电路特性) 连接$X$和$G$，根据$KCL$方程，没有电流流入G\n将原MOSFET等效为一个$\\frac{1}{g_m}$的电阻\n最终电路(加上内阻$r_0$) Hybrid-$\\pi$ Model 如何选择模型 Source端的电压是固定的 $\\Longrightarrow \\ \\pi$ Model\nSource端接电阻等 $\\Longrightarrow$ T Model\nBasic MOSFET Amplifier Configurations The Common-Source Amplifier with a Source Resistance 等效图示 分析 $$ R_{in} = \\infin \\\\\\ \\\\ R_{out} = R_D $$\nThe Common-Gate (CG) Amplifier 电路 原电路 变换后 分析 $$ R_{in} = \\frac{1}{g_m} \\\\\\ \\\\ R_{out} = R_D \\\\\\ \\\\ A_{vo} = \\frac{v_o}{v_{i}} = \\frac{-iR_D}{-i\\frac{1}{g_m}} = g_mR_D \\\\\\ \\\\ G_v = \\frac{v_o}{v_{sig}} = \\frac{-(R_L || R_D)}{-(R_{sig} + \\frac{1}{g_m})i}= \\frac{g_m R_L || R_D}{1 + g_m R_{sig}} $$\nThe Common-Drain Amplifier (Source Follower) 电路 原始 变换后 分析 因为都接地，所以很多电压都相等 $$ R_{in} = \\infin \\\\\\ \\\\ V_o = g_m V_{gs}R_L = iR_L \\\\\\ \\\\ A_{v} = \\frac{iR_L}{i(R_L + \\frac{1}{g_m})} \\approx 1 \\\\\\ \\\\ G_v = \\frac{R_L}{R_L + \\frac{1}{g_m}} \\approx 1 \\\\\\ \\\\ R_{out} = \\frac{1}{g_m} \\\\\\ \\\\ 区分Out和Load $$\n比较 Biasing by Fixing $V_{GS}$ 原因 $$ I = \\frac{1}{2}\\mu_nC_{OX} \\frac{W}{L} (V_{GS} - V_t)^2 $$\n$\\mu_n$和$V_t$易受到温度影响\n$V_t,\\frac{W}{L},C_{OX}$即使在相同尺寸和型号的设备中变化也很大\nDegeneration Resistance 电路 分析 $$ V_G = V_{GS} + I_DR_S (V_G \\ is \\ fixed)\\\\\\ \\\\ I_D \\uparrow \\longrightarrow V_{GS} \\downarrow \\longrightarrow I_D \\downarrow $$\nDiscrete-Circuit MOS Amplifiers Common-Source Amplifier (反相放大器) 电路图 分析 Coupling Capacitor 通交流,阻直流 Bypass Capacitor 减少噪声 其他 $$ R_{in} = R_{G1} || R_{G2} \\\\\\ \\\\ R_{o} = R_D || C_{C2} \\approx R_D $$\nCommon-Gate Amplifier 电路图 等效电路 ","date":"2023-04-10T11:45:36+08:00","permalink":"https://downeyflyfan.com/p/7.%E6%99%B6%E4%BD%93%E7%AE%A1%E6%94%BE%E5%A4%A7%E5%99%A8/","title":"7.晶体管放大器"},{"content":"Information Theory Self-Information Definition $$ For \\ an \\ event \\ x = x \\\\\\ \\\\ I(x) = - logP(x) $$\nUnit log以e为底时，单位为nats\nlog以2为底时，单位为bits或Shannon\nInformation Probability Uncertainty 以上三者正相关 Shannon Entropy Definition 表示不确定性 $$ H(x) = H(p) = \\mathbb E_{x - P}[I(x)] = -\\mathbb E_{x-p}[logP(x)] $$\nProperty 当$x$连续时，Shannon Entropy也叫Differential Entropy\n越确定的分布,Entropy越小;\nKL Divergence \u0026amp; Cross-Entropy KL Divergence 区分两个分布的相似度的方法 $$ D_{KL}(P||Q) = \\mathbb E_{x-P}(log\\frac{P(x)}{Q(x)})=\\mathbb E_{x-P}(log P(x)- log Q(x)) \\\\\\ \\\\ 对于有些P和Q,D_{KL}(P||Q) \\ne D_{KL}(Q||P) $$\nCross-Entropy 定义 $$ \\begin{aligned} H(P,Q) \u0026amp;= H(P) + D_{KL}(P||Q) \\\\ \u0026amp;= -\\mathbb E_{x-P}[logQ(x)] \\end{aligned} $$\n特殊情况 有时我们会碰到$0log0$,我们一般改写为$\\underset{x\\rightarrow 0}{lim} \\ xlogx = 0$ Structured Probabilistic Models Definition $$ p(\\pmb x) = \\prod_{i}p(x_i| \\ Pa \\mathbb G(x_i)) \\\\ Pa: Parents \\ of \\ x_i \\ \\ G: Graphical \\ Model $$\nNormalization Clique Graph中互相连接的一组Nodes\n$$ 对于无方向图，每个clique都有一个Factor \\\\\\ \\\\ Factor:\\phi^{(1)}\\big(C^{(1)}\\big) $$\nNormalization $$ p(\\pmb x) = \\prod_i \\phi^{(i)}(C^{(i)}) $$\nStatistics Estimation Statistical Inference Example 1 Produce a variable Y such that $Pr(Y \\ge \\theta| \\theta) = 0.9$\nExample 2 How confident we are that $\\theta \\gt 0.4$ after observing $X_1,X_2,\u0026hellip;,X_n$\nClasses of Inference Problems Prediction\nStatistical Decision Problems\nExperimental Design\nParameter Space 所有可能的参数取值组成的空间\nPrior and Posterior Distribution Definition Prior Distribution是对未知数据的猜测\nPosterior Distribution是在考虑观测数据后对未知参数的估计\nConjugate Prior Distributions Bayes Estimator Definition $$ \\xi(\\theta|\\pmb x)是对\\theta在\\Omega上的后验估计 \\\\\\ \\\\ 那么对于每一个Estimate \\ a \\\\\\ \\\\ E[L(\\theta,a)|\\pmb x] = \\int_{\\Omega}L(\\theta,a) \\xi(\\theta | \\pmb x) \\ d\\theta \\\\\\ \\\\ 其中a = \\xi^*(\\pmb x) $$\nLoss Function Square Loss Function $$ L(\\theta | a) = (\\theta - a)^2 $$\nAbsolute Loss Function $$ L(\\theta | a) = |\\theta -a| $$\nMaximum Likelihood Function(M.L.E.) Definition 当$f_n(\\pmb x|\\theta)$对于给定的$\\pmb x$是一个关于$\\theta$的函数时,它叫做极大似然函数\nMaximum Likelihood Estimator 定义 使得$f_n(\\pmb x|\\theta)$最大的$\\hat \\theta = \\delta(\\pmb x)(\\theta\\in \\Omega)$叫做$\\theta$极大似然估计量\n解法 对$f_n(\\theta|\\pmb x)$取对数，得到$L(\\theta)=logf_n(\\theta|\\pmb x)$,然后根据单调性求$\\theta$\nExample Sampling From Bernulli Distribution $$ For \\ Bernulli \\ Distribution \\\\\\ \\\\ \\begin{aligned} f_n(\\pmb x|\\theta)\u0026amp;= \\theta^{x_i}(1-\\theta)^{x_i} \\\\ L(\\theta)\u0026amp;= \\sum_{i}x_ilog(\\theta) + \\sum_i (1-x_i)log(1-\\theta) \\\\ \u0026amp;= \\sum_ix_i log(\\theta) + (n-\\sum_i x_i)log(1-\\theta) \\end{aligned} $$\nProperty Invariance 如果$\\hat \\theta$是$\\theta$的MLE，$g(\\theta)$和$\\theta$是one-to-one function,那么$g(\\hat \\theta)$也是$g(\\theta)$的MLE 一致性 当样本容量趋近于无穷大时，极大似然估计量收敛于真实参数值 有效性 在所有无偏估计量中，极大似然估计量具有最小方差 Unbiased Moments Estimator 对于一组变量$\\pmb X$，$\\mu(\\theta) = (\\mu_1(\\theta),\u0026hellip;,\\mu_k(\\theta))$，那么它的反函数$\\hat \\theta = M(\\mu_1(\\theta),\u0026hellip;,\\mu_k(\\theta))$就是$\\theta$的矩估计量 Sampling Distribution of Estimators Sampling Distribution of Statistics $\\pmb X$是带有未知参数$\\theta$的一组样本,$T=r(X_1,X_2,\u0026hellip;,\\theta)$,那么$T$的Distribution叫做Sampling Distribution of T\nThe Chi-Square Distribution Definition 对于任意正整数m,$\\alpha = \\frac{1}{2},\\beta = \\frac{1}{2}$的Gamma Distribution叫做自由度为m的卡方分布\n$$ Gamma \\ Distribution \\ p.d.f. \\\\\\ \\\\ f(x|\\alpha,\\beta) = \\begin{cases} \\frac{\\beta^\\alpha}{\\Gamma(\\alpha)}x^{\\alpha -1}e^{-\\beta x} \u0026amp; x \\gt 0 \\\\ 0 \u0026amp; x\\le 0 \\end{cases} $$\nProperty Mean and Variance $$ E(X) = m \\\\\\ \\\\ Var(X) = 2m \\\\\\ \\\\ m.g.f. \\ \\psi (t) = (\\frac{1}{1-2t})^{m/2}, t\\lt \\frac{1}{2} $$\n如果$X_i$服从自由度为$m_i(i=1,\u0026hellip;k)$的卡方分布,那么$X_1 +\u0026hellip;+ X_k$服从自由度为$m_1 +\u0026hellip;+ m_i$的卡方分布\n$X$服从标准正态分布,那么$Y=X^2$服从自由度为1的卡方分布\nThe t Distributions Definition $Y$服从自由度为m的卡方分布，$Z$服从标准正态分布 $$ X = \\frac{Z}{(\\frac{Y}{m})^{1/2}} $$\n那么$X$服从自由度为m的t分布 Property moments $$ Var(X) = \\frac{m}{m-2}, m\\ge 2 \\\\\\ \\\\ E(|X|^k) \\begin{cases} = \\infin \u0026amp; k\\ge m \\\\ \\le \\infin \u0026amp; k \\lt m \\end{cases} $$\nFormula $$ t = \\frac{\\overline X_n - \\mu}{\\sqrt{\\sigma/n}} $$\nConfidence Interval 定义 对于$\\pmb X = X_1,\u0026hellip;,X_n$,存在$A\\lt B$,使得$Pr(g(A \\le \\theta \\le B)) \\ge \\gamma$,那么$(A,B)$叫做系数为$\\gamma$的置信区间，或者$100\\gamma %$置信区间\n特点 观察$X_n$后计算得到$A=a,B=b$,$(a,b)$即位观察到的置信区间\n当上式取等时，$(a,b)$叫做观察到的置信区间\n定理 正态分布均值的置信区间 $$ A = \\overline X_n - T_{n-1}^{-1}(\\frac{1+\\gamma}{2})\\frac{\\sigma\u0026rsquo;}{n^{1/2}} \\\\\\ \\\\ B = \\overline X_n + T_{n-1}^{-1}(\\frac{1+\\gamma}{2})\\frac{\\sigma\u0026rsquo;}{n^{1/2}} $$\nOne-Sided Confidence Intervals/Limits $$ Pr(A \\le g(\\theta)) \\ge \\gamma \\\\\\ \\\\ Pr(g(\\theta) \\le B) \\ge \\gamma \\\\\\ \\\\ A = \\overline X_n - T_{n-1}^{-1}(\\gamma)\\frac{\\sigma\u0026rsquo;}{n^{1/2}} \\\\\\ \\\\ B = \\overline X_n + T_{n-1}^{-1}(\\gamma)\\frac{\\sigma\u0026rsquo;}{n^{1/2}} $$\nUnbiased Estimator Definition 如果$E_\\theta[\\delta(\\theta)]=g(\\theta)$对每个$\\theta$都成立，那么$\\delta(\\theta)$叫做$g(\\theta)$的Unbiased Estimator\nProperty $Bias = E_\\theta[\\delta(\\theta)] - g(\\theta)$\n$\\pmb X$的方差有限,$g(\\theta)=Var_\\theta(X_1)$,那么$\\hat{\\sigma}_1 = \\frac{1}{n-1}\\sum_i^n(X_i-\\overline {X_n})^2$是$g(\\theta)$的方差的无偏估计量\nTesting Hypothesis 分类 Null / Alternative Hypothesis $H_0$ is Null Hypothesis, $H_1$ is Alternative Hypothesis. 当$\\theta \\in \\Omega_0$, we not reject $H_0$; 当$\\theta \\in \\Omega_1$,we reject $H_0$\nSimple / Composite Hypothesis $\\Omega_i$只有一个值，$H_i$叫做Simple Hypothesis; 否则叫Composite Hypothesis\nOne-Sided / Two-Sided Hypothesis $H_0 \\le \\theta, H_1\\gt \\theta;H_0\\gt \\theta,H_1\\le\\theta$叫做Two-Sided Hypothesis; $H_0= \\theta,H_1 \\ne \\theta$叫做One-Sided Hypothesis\nCritical Region and Test Statistics Critical Region $$ 对于一个均值未知，方差已知的正态分布 \\\\\\ \\\\ H_0 : \\mu = \\mu_0 ; H_1 : \\mu \\neq \\mu_0 \\\\\\ \\\\ c是一个很小的常数 \\\\\\ \\\\ 当\\overline {X_n}和\\mu的差值超过c,我们就拒绝H_0\\\\\\ \\\\ 即 S_0 = \\lbrace x: |\\overline{X_n} - \\mu_0| \\lt c\\rbrace . \\ S_1 = S_0^c \\\\\\ \\\\ S_1 就叫做\\pmb{批判性区域} $$\nTest Statistics \u0026amp; Rejection Domain $$ 对于一个分布X, T = r(X)是统计量，R是实数的子集\\\\\\ \\\\ 假设一个检验过程有以下假设 \\\\\\ \\\\ H_0: \\theta \\in \\Omega_0 , H_1: \\theta \\in \\Omega_1 \\\\\\ \\\\ 若在T \\in R时，我们\\pmb{拒绝 H_0} \\\\\\ \\\\ 那么T叫做\\pmb{检验统计},R叫做\\pmb{拒绝域} $$\nPower Function and Error Type Power Function $$ \\pi (\\theta | \\delta) 叫做测试\\delta 的幂函数 \\\\\\ \\\\ 并且 \\pi (\\theta | \\delta) = Pr(X \\in S_1 | \\theta) , \\theta \\in \\Omega \\\\\\ \\\\ 或者 \\pi (\\theta | \\delta) = Pr(T \\in R| \\theta) , \\theta \\in \\Omega $$\nError Type Type I 弃真 $H_0: \\theta \\in \\Omega_0$是真的，但是我们reject $H_0$\nType II 纳伪 $H_0: \\theta \\in \\Omega_0$是假的，但是我们not to reject $H_0$\nSignificance Level 定义 显著水平，也称为α水平或显著性水平，是用于衡量在假设检验中拒绝原假设的临界值。通常情况下，显著水平的取值为0.10,0.05或0.01，代表了在一次实验中，我们允许犯错误的概率大小。\n选择显著性水平 选择较低的显著性水平（如0.01）可以降低弃真的风险，使得结论更加保守和可靠。但这也可能导致较高的纳伪的风险。选择较高的显著性水平（如0.10）则会相对容易发现效应，但也可能增加犯第一类错误的风险。因此，0.05的显著性水平被认为是比较常用的选择\nSteps of Test Hypothesis 确定原假设和备择假设\n确定显著水平：通常设定为0.05或0.01。\n选择合适的假设检验方法：如t检验、F检验、卡方检验等。\n计算统计量：根据假设检验方法的要求，计算相应的统计量，如t值、F值、卡方值等。\n确定拒绝域：拒绝域是指统计量达到或超过一定临界值时，我们会拒绝原假设的范围。\n计算p值：p值是指在原假设成立的情况下，出现观察值或更极端观察值的概率。通过计算p值，我们可以判断观察值是否落在了拒绝域内。\n做出结论：根据p值或统计量是否达到拒绝域，来判断是否拒绝原假设。如果拒绝原假设，则说明样本数据与总体存在显著差异；反之，则说明样本数据与总体相同。\n","date":"2023-04-08T11:06:17+08:00","permalink":"https://downeyflyfan.com/p/statistics-information-theory/","title":"Statistics \u0026 Information Theory"},{"content":"Matrix Category Indentity \u0026amp; Inverse Matrix $$ \\begin{aligned} Ax \u0026amp;= b \\\\ AA^{-1} \u0026amp;= I_n \\\\ \\therefore A^{-1} A x \u0026amp;= A^{-1}b \\\\ x \u0026amp; = A^{-1}b \\end{aligned} $$\nOrthogonal Matrix 定义 每一列彼此正交，均为单位向量 性质 $|Q| = \\pm 1$\n$||Q\\textbf{x}||=||\\textbf{x}||$\n$\\textbf{x}^T\\textbf{y}=(Q\\textbf{x})^T(Q\\textbf{y})$\n$Q = Q^T$\n$QQ^T$也是正交矩阵\n$AA^T$ 对称矩阵\n如果$A$是Square，那么$AA^T$是semidefinite\nLinear Dependence \u0026amp; Span Linear Combination $$ Ax =b \\Longrightarrow \\sum_{i=1}^n{x_i} A = b \\\\ x,y是Ax=b的解 \\Longrightarrow z = \\alpha x + (1-\\alpha) y 是Ax =b 的解 \\\\\n$$\n形如$\\sum_{i=1}^n c_i x$的组合叫做 Linear Combination Linear Indenpendence Definition 不能通过Linear Combination得到彼此的一组向量Linear Indenpendent\nSingular Matrix Definition Square Matrix with Linear denpendent Columns 特征 Determinant = 0\n没有Inverse Matrix\nNorms Definition 用于衡量矩阵的大小 $$ L^p \\ norm: ||x||p = \\Big( \\sum{i=1}^n x_i^p \\Big)^{\\frac{1}{p}} $$\nCategory 1-Norm - 最大列 $$ ||A||1 = max{1\\lt j \\lt n}\\sum_1^{m}|a_{ij}| $$\nFrobenius-Norm (2-Norm) $$ \\begin{aligned} ||A||2 \u0026amp;= \\sigma{max}(A) \\\\ \u0026amp;= \\sqrt{\\sum_1^m\\sum_1^n |a_{ij}|^2} \\end{aligned} $$\n$\\infin$-Norm - 最大行 $$ ||A||\\infin = max{1\\lt j \\lt m}\\sum_1^{n}|a_{ij}| $$\nProperty $||x|| \\gt 0$\n$f(\\pmb x) = 0 \\Longrightarrow \\pmb x =0$\n$f(\\pmb{x+y} ) \\le f(\\pmb x) + f(\\pmb y)$\n$\\forall \\alpha \\in R, |\\alpha| f(\\pmb x) = f(\\alpha \\pmb x)$\nSpecial Matrix and Vectors Diagonal Matrix Definition A Square Matrix where all non-zero entries are on the diagonal Property $Determinant = \\prod(Entries \\ on \\ the \\ diagonal )$ Symetrical Matrix $$ A = A^T \\\\\\ \\\\ A = Q\\Lambda Q^T \\\\\\ \\\\ 其中,QQ^T = I (即Q与Q^T正交) $$\nUnit Vector and Orthogonal Matrix Vector $$ ||\\pmb x||_2 = 1 \\Longrightarrow \\pmb x \\ is \\ a \\ Unit \\ Vector \\\\\\ \\\\ \\pmb{x^T y} = 0 \\Longrightarrow x \\ and \\ y \\ are \\ \\pmb{orthogonal} $$\nMatrix $$ AA^T = A^T A =I \\Longrightarrow A \\ is \\ a \\ \\pmb{Orthogonal \\ Matrix} \\\\\\ \\\\ \\therefore A^T = A^{-1} $$\nDecomposition EigenDecomposition Eigen Vector \u0026amp; Eigen Value Definition $$ \\pmb {Av} = \\lambda \\pmb v \\\\ \\pmb v: eigenvector \\\\ \\lambda: eigen \\ value \\\\\\ \\\\ \\pmb{v^T A} = \\lambda v^T \\\\ \\pmb{v}: Left \\ eigenvector $$\nEigenvectors和EigenValues一一对应 Property Scale $$ \\pmb {Av} = \\lambda \\pmb v \\\\\\ \\\\ c\\pmb {Av} = c\\lambda \\pmb v \\\\\\ \\\\ \\therefore \\pmb v \\ can \\ be \\ scaled $$\nEigenVaules All Positive Positive definite All Negative Negative definite All Non-zero Positive semidefinite All Negative Negative semidefinite $$ Positive \\ semidefinite \\\\ \\forall \\pmb x, \\pmb {x^T A x} \\ge 0 \\\\\\ \\\\ Positive \\ definite \\\\ \\forall \\pmb x \\ \\ \\pmb{x^T A x} =0 \\Longrightarrow \\pmb x = 0 $$\nSolution $$ \\begin{aligned} \\pmb{Av} \u0026amp;= \\lambda \\pmb v \\\\ \\pmb{Avv^T} \u0026amp;= \\lambda \\pmb{vv^T} \\\\ \\pmb{A} \u0026amp;= \\lambda \\pmb I \\\\ |\\pmb A - \\lambda \\pmb I| \u0026amp;= 0 \\end{aligned} $$\nEigenDecomposition 前提 所有独立的$\\pmb v$形成一个特征矩阵$\\pmb V = (v^{1} , \u0026hellip; v^{n})$\n所有对应的特征值形成一个对角矩阵$diag(\\pmb \\lambda)$\n分解 $$ \\begin{aligned} \\pmb{AV} \u0026amp;= \\pmb{V diag(\\lambda)} \\\\ EigenDecomposition: \\pmb{A} \u0026amp;= \\pmb{Vdiag(\\lambda) V^{-1}} \\end{aligned} $$\nSymetrical Matrix 主对角线两侧的元素关于主对角线对称\n$A = A^T$\n$A$的特征矩阵$Q$是一个正交矩阵\nEigenDecomposition: $\\pmb {A = Q\\Lambda Q^T}(A和Q是Similar \\ Matrix)$\nSingular Value Decomposition $$ \\pmb{A = UDV^T} \\\\\\ \\\\ U 和V都是orthogonal \\ matrix \\\\\\ \\\\ D是 diagonal \\ matrix $$\nColumns of U: Left-Singular Vectors(eigenvector of $AA^T$)\nColumns of V: Right-Singular Vectors(eigenvectors of $A^TA$)\nD的主对角线的元素是A的Singular Value($A^T A或AA^T$的EigenVaules的平方根)\nPseudoinverse \u0026amp; Trace Operator Pseudoinverse Definition $$ A^+ = \\underset{\\alpha \\searrow 0}{lim} \\ (A^T A + \\alpha I)^{-1}A^T \\\\\\ \\\\ 非奇异矩阵: A^+ = A^{-1} \\\\\\ \\\\ 奇异矩阵: A^+= (A^TA)^{-1}A^T \\\\\\ \\\\ m \\gt n: A^+= (A^TA)^{-1}A^T \\\\\\ \\\\ n \\gt m: A^+ = A^T(A^TA)^{-1} $$\nComputing Algorithms $$ A^+ = VD^+U^T (Singular \\ Decomposition)\\\\\\ \\\\ D^+: 对D元素取倒数 $$\nTrace Operator Definition $$ Tr(\\pmb A) = \\sum_{i}A_{i,i} $$\nProperty Norm Computing $$ ||\\pmb A||_F = \\sqrt{Tr(\\pmb{AA^T})} $$\nEquality $$ Tr(\\pmb A) = Tr(\\pmb A^T) $$\nScalar $$ Tr(a) = a $$\nMatrix $$ Tr(\\pmb{ABC}) = Tr(\\pmb{CAB}) = Tr(\\pmb{BAC}) $$\nPrincipal Components Analysis 实现 $$ \\lbrace \\pmb{x^{(1)}\u0026hellip;x^{(m)}} \\rbrace \\\\\\ \\\\ Encoder: \\ f(\\pmb x) = \\pmb c \\\\\\ \\\\ Decoder: \\pmb x \\approx g(\\pmb c) = \\pmb{Dc} \\\\\\ \\\\ \\pmb D是正交矩阵\\\\\\ \\\\ L^ 2\\ norm: \\pmb c^* = \\underset{c}{arg \\ min} ||\\pmb x-g(\\pmb c)||_2 \\\\\\ \\\\ L^2 \\ norm \\ge 0 \\underset{为了方便计算}{\\Longrightarrow} \\pmb c^* = \\underset{c}{arg \\ min} ||\\pmb x-g(\\pmb c)||2^2 \\\\\\ \\\\ \\begin{aligned} \\pmb c^* \u0026amp;= |\\pmb x-g(\\pmb x)|^T|\\pmb x-g(\\pmb x)| \\\\ \u0026amp;= x^Tx - x^Tg(c) - g^T(c)x + g^T(x)g(c) \\\\ \u0026amp;= 无关项 -2x^Tg(c) + g^T(c)g(c) \\\\ \u0026amp;= 无关项 -2x^T Dc + c^TD^TDc \\\\ \u0026amp;= 无关项 -2x^TDc + c^Tc \\\\\\ \\\\ \\nabla{\\pmb c}(-2x^TDc + c^Tc) \u0026amp;= 0 \\\\ -2D^Tx +2c \u0026amp;=0 (疑问!!!) \\\\ c \u0026amp;= D^T x \\end{aligned} \\\\\\ \\\\ 于是f(x) = D^Tx $$\n方差 $$ Var(x) = \\frac{1}{m-1}\\pmb{X^TX} \\\\\\ \\\\ \\pmb{X^TX} = \\pmb{W\\Lambda W^T} \\\\\\ \\\\ \\pmb X = \\pmb{U\\Sigma W} \\\\\\ \\\\ \\begin{aligned} \\therefore \\pmb{X^TX} \u0026amp;= \\pmb{(U\\Sigma W)^T(U\\Sigma W)} \\\\ \u0026amp;= \\pmb{W\\Sigma^2W^T} \\end{aligned} \\\\\\ \\\\ Var(\\pmb x) = \\frac{1}{m-1}\\pmb {X^TX} \\\\\\ \\\\ if \\ \\pmb{z = x^TW} \\\\\\ \\\\ Var[\\pmb z] = \\frac{1}{m-1} \\Sigma^2 $$\n适用情况 数据集包含多个变量，需要降低维度以简化数据。\n变量之间存在高度相关性，需要将它们转换为更少的无关变量。\n需要识别数据集中最重要的因素或特征。\n需要可视化数据集并找到潜在的模式和关系。\nCalculus Taylor Expression $$ f(x) = \\sum_{n=0}^{\\infin} \\frac{f^{(n)}(a)}{n!} (x-a)^n $$\n","date":"2023-04-07T10:27:02+08:00","permalink":"https://downeyflyfan.com/p/linear-algebra/","title":"Linear Algebra"},{"content":"Lab1 器材 TL082管脚图 LM741管脚图 二极管 黑色端为负极 发光二极管 三极管(C1008) C1008(EBC) 电阻 蜂鸣器 电源 电流源调节至最大\nCH1负极接差分放大器的地\n实验电路 第一部分 \u0026ndash; 温度传感器 + 差分放大器 第二部分 \u0026ndash; 电压比较器 第三部分 \u0026ndash; 报警驱动电路 Lab2 电路和要求 ($A_{vo} \\ge 30$) 就可以 计算 $$ \\begin{aligned} A_{vo} \u0026amp;\\ge 30 \\\\ g_m (r_o || R_D || R_L) \u0026amp;\\ge30 \\\\ k_n (V_{GS} - V_t) (r_o || R_D || R_L) \u0026amp;\\ge 30 \\\\ (V_{GS}-2)(r_o || R_D || R_L) \u0026amp;\\ge 300 \\\\ \\because r_0 很大，此处不作考虑 \\\\ (V_{GS}-2) (R_D || R_L) \u0026amp;\\ge 300 \\\\ 选择 V_G 为 4V \\\\ 也就是R_{G1} = 20k\\Omega, R_{G2} \u0026amp;= 10k\\Omega \\\\\\ \\\\ V_S \u0026amp;= I_DR_S \\\\ \u0026amp;= \\frac{1}{2}k_n(V_G - V_S - V_t)^2 R_S\\\\ 选择 R_S \u0026amp;= 1k\\Omega \\\\ V_S \u0026amp; = 2.210(V) 或 \\ 1.810(V) \\Longrightarrow V_{OV} = 0.21(V) 或 0.19(V)\\\\ 这样R_D || R_L \u0026amp;\\ge 1429 \\ or \\ 1579 \\\\ \\frac{R_D R_L}{R_D + R_L} \u0026amp;\\ge 1429 \\ or \\ 1579 \\\\ 选择R_D \u0026amp;= 2k\\Omega, R_L =100k \\Omega \\Longrightarrow R_D || R_L = 1.96k\\\\ 最终: A_v \u0026amp;= g_m(R_D || R_L) \\\\ \u0026amp;= 0.021\\times (R_D || R_L) or \\ 0.019\\times 1.96k\\\\ \u0026amp;= 41.16 \\ or \\ 37.24 \\\\ V_{op} \u0026amp;= 617(mV) \\ or \\ 559(mV) \\\\\\ \\\\ 总结: R_{G1} \u0026amp;= 20k\\Omega, R_{G2} = 10k\\Omega \\\\ R_S \u0026amp; =1k\\Omega \\\\ R_D \u0026amp;= 2k\\Omega \\\\ R_L \u0026amp;= 100k\\Omega \\\\ A_v \u0026amp;= 41.16 \\ or \\ 37.24 \\\\ R_{in} \u0026amp;= R_{G1} || R_{G2} = \\frac{20}{3}k\\Omega \\gt 5k\\Omega \\\\ R_{out} = R_D \u0026amp;= 2 k\\Omega \\lt 3k\\Omega \\\\ V_{op} \u0026amp;= 617(mV) = 559(mV) \\end{aligned} $$\n选择器材 电阻\nMOSFET\n测量频率 ","date":"2023-04-04T17:07:33+08:00","permalink":"https://downeyflyfan.com/p/%E5%AE%9E%E9%AA%8C/","title":"实验"},{"content":"Bistable Element 串联两个Inverter达到保持input和output都不变的效果 SR Latch (Set Reset) - SR 锁存器 与非门 或非门 Gated SR Latch / S Latch With Enable (NAND) D Latch (NAND) 效果:输出端保持稳定 Gated D Latch 2 NAND 4 NAND Verilog Code 1 2 3 4 5 6 7 8 9 10 11 module D_Latch_With_Enable( input E, input D, output reg Q ); always @(E or D) begin if (E) Q \u0026lt;= D; end endmodule 总结 NAND NOR 输入为$11$是不稳定的 输入为00是不稳定的 Clock Divider 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 module clock_divider #(parameter [24:0] half = 25\u0026#39;d6250000) // 指定时钟分频的周期 ( input clock_in, // 50MHz Input Clock output reg clock ); reg [24:0] count; always @ (posedge clock_in) begin if (count == half) begin count \u0026lt;= 1\u0026#39;d0; clock = ~clock; end else count \u0026lt;= count + 1; end endmodule D Flip-Flop 定义 当时钟输入端接收到一个时钟信号时，将数据输入端的状态存储下来，并在下一个时钟信号到来前保持不变\nBehavioral Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 module flipflop( // 无Enable的 input D, input clock, output reg Q ); always @(posedge clock) Q \u0026lt;= D; endmodule module D_flipflop( // 多了使能和重置 input Clock, input D, input Enable, input Clear, output reg Q ) always @(posedge Clear or posedge Clock) begin if (Clear == 0) Q \u0026lt;= 0; else if (Enable) Q \u0026lt;= D; end endmodule Master-slave positive edge-triggered D flip-flop 用SR-Latch 实现 D Flip-Flop 描述 - 状态图 方程 特征表 stateDiagram Q=0 --\u003e Q=1: D=1 Q=0 --\u003e Q=0: D=0 Q=1 --\u003e Q=0: D=0 Q=1 --\u003e Q=1: D=1 $$ Q_{next} = D $$\nmaster-slave negative edge-triggered D flip-flop D flip-flop With Enable Register File 定义 存储CPU中的通用寄存器\nRegister Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 module register #(parameter n = 4) ( input Clock,Clear,Load, input [n-1:0] D, output [n-1:0] Q ); always @(posedge Clock or posedge Clear) begin if(Clear == 1) Q \u0026lt;= {n{1\u0026#39;b0}}; else if (Load) Q \u0026lt;= D; end endmodule 4 location x 8-bit Register File Circuit WA Write Address WE Write Enable RAA Read A Address RAE Read A Enable RBA Read B Address RBE Read B Enable Register File Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 module register_file( // 四个Register input Clock, input WE, input [1:0] WA, input [7:0] D, input RAE,RBE, input RAA,RBA, output reg [7:0] PortA, output reg [7:0] PortB // 注意输出是reg变量 ); reg [7:0] reg0,reg1,reg2,reg3; always@(posedge Clock) begin if(WE) case(WA) 0: reg0 \u0026lt;= D; 1: reg1 \u0026lt;= D; 2: reg2 \u0026lt;= D; 3: reg3 \u0026lt;= D; endcase end always @(RAA, RAE) begin if (RAE) begin case (RAA): 0: PortA \u0026lt;= reg0; 0: PortA \u0026lt;= reg2; 0: PortA \u0026lt;= reg2; 0: PortA \u0026lt;= reg3; dafault: PortA \u0026lt;= 8\u0026#39;h00; endcase end else PortA \u0026lt;= 8\u0026#39;h00; end always @(RAA,RBE) begin if (RBE) begin case (RBA): 0: PortB \u0026lt;= reg0; 0: PortB \u0026lt;= reg2; 0: PortB \u0026lt;= reg2; 0: PortB \u0026lt;= reg3; dafault: PortB \u0026lt;= 8\u0026#39;h00; endcase end else PortB \u0026lt;= 8\u0026#39;h00; end endmodule 4-bit bidirectional, parallel-in, parallel-out Register 74x194 Function table 内存 ROM 逻辑符号 操作表 Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 module ROM #(parameter size = 4) ( input [size-1:0] Address, input EO, output [7:0] D ); reg [7:0] mem[0:2**size-1]; initial\tbegin mem[0] \u0026lt;= 8\u0026#39;b01100000; // IN A mem[1] \u0026lt;= 8\u0026#39;b10000000; // OUT A mem[2] \u0026lt;= 8\u0026#39;b10100000; // DEC A mem[3] \u0026lt;= 8\u0026#39;b11000001; // JNZ 0001 mem[4] \u0026lt;= 8\u0026#39;b11111111; // HALT end assign D = (OE) ? mem[Address]: 8\u0026#39;bz; endmodule RAM 逻辑符号 操作表 $4\\times 4$ RAM 经典RAM Verilog 代码 CE WR EO Chip Enable Write Enable Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 module RAM #(parameter size =5) ( input CE,WR,OE, input [7:0] Data, output [size-1:0] Address ); reg [7:0] mem[0:2**size-1]; reg [7:0] data_out; assign Data = (CE \u0026amp; OE \u0026amp; ~WR) ? data_out: 8\u0026#39;bz; // Data should output the previously stored value which can be accessed from data_out always@(*) begin if(CE \u0026amp;\u0026amp; WR) mem[Address] = Data; end always@(*) begin if (CE \u0026amp; OE \u0026amp; ~WR) data_out = mem[Address]; end endmodule $32\\times 8$ RAM used in EC-2 Microprocessor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 module ram( #(parameter size=5) input Clock, input Reset, input WE, input [size-1:0] Address, input [7:0] D, output reg [7:0] Q ); reg [7:0] mem[2**size-1:0]; always @(posedge Clock or posedge Reset) begin if (Reset) begin mem[0] \u0026lt;= 8\u0026#39;b10000000; // IN A mem[1] \u0026lt;= 8\u0026#39;b01111111; // SUB A,11111 mem[2] \u0026lt;= 8\u0026#39;b10100100; // JZ 00100 mem[3] \u0026lt;= 8\u0026#39;b11000001; // JPOS 00001 mem[4] \u0026lt;= 8\u0026#39;b11111111; // HALT mem[31]\u0026lt;= 8\u0026#39;b00000001; // storage for the constant 1 end else begin if (WE) mem[Address] \u0026lt;= D; end end // always always @ (Address) begin Q \u0026lt;= mem[Address]; end endmodule Shift Register 4-bit serial-to-parallel register Right Shift Register 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 module ShiftReg ( input Serial_in, input Clock, input Shift, output reg [3:0] Q ); reg [3:0] value = 0; always @(posedge Clock) begin if (Shift) Q \u0026lt;= {Serial_in,Q[3:1]}; // 将Serial_in和Q[3:1]连起来 end endmodule Counter 4-bit Binary Up Counter Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 module Counter( input Clock, input Clear, input Up, output [3:0] Q ); reg [3:0] Value; always @(posedge Clear or posedge Clock) begin if (Clear) Value \u0026lt;= 0; else if (Up) Value \u0026lt;= Value + 1; else Value \u0026lt;= Value - 1; end assign Q = Value; endmodule 74x163 - 4-bit Binary Synchronous Counter RCO (Reset Carry-Out) 复位同步输出引脚。当计数器达到最大计数值时，RCO引脚会输出一个脉冲信号，用于将其他电路中的计数器复位或同步。用于同步多个计数器的计数。 Shift-Register Counters 定义 将一个二进制数字序列存储在移位寄存器中，然后通过移位操作将其向左或向右移动，从而实现计数。当移位寄存器中的数字序列达到最大值时，计数器会重新开始计数。可以使用单个移位寄存器或多个级联的移位寄存器来实现不同的计数分辨率\nRing Counters 电路 状态 主状态(有效状态) 无效状态 Self-Correcting Johnson Counter (扭环计数器) 电路 状态 有效状态 无效状态 Self-Correcting Linear Feedback Shift Register Counters (LFSR) Serial Signal Generator Example - Serial Signal Generator (110100) Dff (D触发器) 163 -\u0026gt; 151 Shift Register Timing Analysis Timing issue 时钟偏移、信号延迟、时序失配、时序噪声等 Hazards in Digital System 定义 Combinational Circuit 中出现的不期望的输出\nStatic hazard (glitch) Static 1 hazard the output changes from 1 to 0 and back to 1 Static 0 hazard the output changes from 0 to 1 and back to 0 Dynamic hazard (bounce) Dynamic 0 to 1 hazard: the output changes from 0 to 1 to 0 to 1\nDynamic 1 to 0 hazard: the output changes from 1 to 0 to 1 to 0\nSynchronous \u0026amp; Asynchronous Preset = Set, Clear = Reset\n在时钟的上升/下降沿改变的信号叫做同步信号, 否则是异步信号\n","date":"2023-04-04T10:06:42+08:00","permalink":"https://downeyflyfan.com/p/5.%E6%97%B6%E5%BA%8F%E7%94%B5%E8%B7%AF/","title":"5.时序电路"},{"content":"设备结构和操作 N型金属-氧化物-半导体 场效应晶体管 图标解释 $N^+$: High Concentration $I_G$始终为0,因为$SiO_2$是绝缘的 B: Body Terminal 电流方向 载流子从Source region流向Drain Region\nN型MOSFET，电流从D到S\nP型MOSFET,电流从S到D\n操作 阻流 当$V_{DS}$存在时，这两个 back-back diodes 会阻止电流从D流到S 开启电流通道 操作 S与D接地\nG接电源正极\n结果 $SiO_2$中会产生电场\nP区的holes被电场推走\n原来被holes平衡的电子不再平衡了\nG的电源正极从$N^+$中吸取电子推向P区\nInversion Layer N channel(反型层N沟道)形成了\n电流导通了 说明 由于电场控制了电荷的数量，所以叫做Field-Effect Transistor(FET) 电容 门和通道形成了一个电容 $$ \\begin{aligned} |Q| \u0026amp;= C_{ox} (WL) (V_{GS}-V_t) \\\\ 单位面积电容 \\ C_{ox} \u0026amp;= 8.6 \\times 10^{-3} (F/m^2) \\end{aligned} $$\n施加小电压 电路 电流和电导推导 $$ \\begin{aligned} \\frac{|Q|}{unit \\ channel \\ length} \u0026amp;= C_{ox} W V_{OV} \\\\ |E| \u0026amp;= \\frac{V_{DS}}{L} \\\\ Electron \\ drift \\ velocity \u0026amp;= \\mu_n |E| = \\mu_n\\frac{V_{DS}}{L} \\\\ \\mu_n: 电子在通\u0026amp;道表面的迁移率 \\end{aligned} \\\\\\ \\\\ \\begin{aligned} i_D \u0026amp;= \\frac{dQ}{dt} = \\frac{dQ}{dL}\\frac{dL}{dt} \\\\ \u0026amp;= (C_{ox}WV_{OV}) (\\mu_n\\frac{V_{DS}}{L}) \\\\ \u0026amp; = \\Big[ (\\mu_n C_{ox} \\frac{W}{L} V_{OV}) \\Big] V_{DS} (对于较小的V_{DS}) \\\\\\ \\\\ g_{DS} \u0026amp;= \\frac{i_{DS}}{V_{DS}} \\\\ \u0026amp;= (\\mu_n C_{ox}) \\Big(\\frac{W}{L}\\Big) V_{OV} \\\\ k_n\u0026rsquo; \u0026amp;= \\mu_n C_{ox} \\\\ k_n \u0026amp;= k_n\u0026rsquo; \\frac{W}{L} \\\\ \\therefore g_{DS} \u0026amp;= k_n V_{OV} \\\\ r_{DS} \u0026amp;= \\frac{1}{k_nV_{OV}}(\\Omega) \\end{aligned} $$\n影响参数 $\\mu_n C_{ox}$是process transconductance parameter\n$W/L$是aspect ratio\n伏安图像 电压增大 电路 过程 $$ \\begin{aligned} V_{GD} \u0026amp;= V_{GS} - V_{DS} \\\\ \u0026amp;= V_t + (V_{OV}-V_{DS}) \\\\ S_{梯形} \u0026amp;\\propto \\frac{1}{2}[V_{OV}+(V_{OV}-V_{DS})] \\\\ |Q| \u0026amp;= C_{OX}(WL)(V_{OV}-\\frac{1}{2}V_{DS}) \\\\ \\therefore i_D \u0026amp;= \\Big[ (\\mu_n C_{OX})\\frac{W}{L}(V_{OV}-\\frac{1}{2}V_{DS}) \\Big]V_{DS} \\end{aligned} $$\n三极管区 饱和区 $$ \\begin{aligned} (1)当 V_{DS} \u0026amp;= V_{OV}时 \\\\ V_{GD} \u0026amp;= V_t \\\\ i_D \u0026amp;= \\frac{1}{2} (\\mu_n C_{OX})\\frac{W}{L}V_{OV}^2 \\\\\\ \u0026amp;\\pmb{漏极的深度为0} \\\\\\ \\\\ (2) 当V_{DS} \u0026amp;\\ge V_{OV}时 \\\\ i_D \\ \u0026amp;不变 \\\\ i_D \u0026amp;= \\frac{1}{2} (\\mu_n C_{OX})\\frac{W}{L}V_{OV}^2 \\end{aligned} $$\n结论 $$ i_D = \\begin{cases} (\\mu_n C_{OX})\\frac{W}{L}(V_{OV}-\\frac{1}{2}V_{DS})V_{DS} = k_n(V_{OV}-\\frac{1}{2}V_{DS})V_{DS} \u0026amp; V_{DS} \\lt V_{OV} \\\\ \\frac{1}{2} (\\mu_n C_{OX})\\frac{W}{L}V_{OV}^2 =\\frac{1}{2}k_nV_{OV}^2 \u0026amp; V_{DS} \\ge V_{OV} \\end{cases} $$\nPMOS 对比 NMOS 对比 NMOS PMOS 主要载流子 电子 空穴 电流方向 D$\\rightarrow$S S$\\rightarrow$D 不同之处 $$ i_d = \\frac{1}{2} k_p (\\pmb{V_{SG} - |V_t|})^2 $$\nMOSFET特性 伏安曲线 设计放大器 在Saturation Area，电流只与$V_{DS}$有关\n三极管 等效于 VCCS\n这叫做大信号等效电阻 饱和时有效的输出电阻 $$ 沟道宽度调制引起的电流增加 \\\\\\ \\\\ i_D = \\frac{1}{2}\\mu_nC_{OX} (\\frac{W}{L})v_{OV}^2 (1 + \\lambda v_{DS}) \\\\\\ \\\\ 沟道宽度调制引起的电阻增加 \\\\\\ \\\\ r_0 = \\frac{V_A}{i_D} = \\frac{1}{\\lambda i_D} \\\\\\ \\\\ \\lambda: 电流调制系数 \\\\\\ \\\\ V_A: 击穿电压(V_{DSmax}) $$\nMOSFET at DC Circuit 可以当作开关 附录 Channel Pinch-off Channel pinch-off是指在MOSFET中，当门极电压增加到一定程度时，沟道区域的电子密度会逐渐减小，直到最终被完全截断，形成一个电子截止区域。这个电子截止区域被称为channel pinch-off，也称为channel cut-off。在这种情况下，MOSFET的输出电流会受到限制，因为电子无法通过被截断的沟道区域流动。\nLarge-Signal Equvilent Circuit 大信号等效电路是指将电路中的非线性元件（如二极管、晶体管等）用一个等效的线性电路来代替，以便于分析和计算电路的性能。大信号等效电路一般是由电路中的直流分量和交流分量组成的，可以用于分析电路的直流偏置、放大倍数、输出功率等性能。\nChannel Length Modulation 当MOSFET的沟道宽度缩短时，沟道电阻减小，导致漏电流增加，从而影响MOSFET的输出特性。这种现象在MOSFET的低电压操作中尤为突出\n","date":"2023-03-29T10:17:02+08:00","permalink":"https://downeyflyfan.com/p/5.mosfet/","title":"5.MOSFET"},{"content":"GPIO结构图 结构解释 Pull-Up Resistance 将一个输入端连接到高电平，以确保输入端在没有外部信号的情况下保持高电平。当外部信号拉低输入端时，输入端的电平会变为低电平. Pull-Down Resistance 将一个输入端连接到低电平，以确保输入端在没有外部信号的情况下保持低电平。当外部信号拉高输入端时，输入端的电平会变为高电平. Schmitt Trigger Converts an input signal into a digital output signal.\nRemove noise and provide hysteresis, which helps in stabilizing the output when the input signal is near the threshold level.\nIt has two threshold voltage levels. When the input voltage crosses these threshold levels, it triggers a change in the output state.\nApplications: level shifting, noise filtering, waveform shaping.\n工作模式 输入模式 Floating Input 将GPIO引脚不连接到任何信号上，需要外部信号输入才能确定GPIO引脚的电平。 Pull-Up 将GPIO引脚连接到一个高电平信号上，通过内部上拉电阻将GPIO引脚拉高，当外部信号低于GPIO引脚电平时，GPIO引脚为低电平。 Pull-Down 将GPIO引脚连接到一个低电平信号上，通过内部下拉电阻将GPIO引脚拉低，当外部信号高于GPIO引脚电平时，GPIO引脚为高电平。 Analog Mode 双向输入模式，将GPIO引脚连接到双向信号上，可以通过软件控制来选择GPIO引脚是输入还是输出 输出模式 General purpose output Open-drain 只能输出低电平(Sink Current) Alternate function output Open-drain 复用输出,被用于其他模式 General purpose output push-pull 输出稳定，可高可低 Alternate function output push-pull PWM 函数 PwmOut 创建PWM的接口 write 写入duty cycle(0.0-1.0) read 读取duty cycle(0.0-1.0) period,period_ms,period_us 设置周期 pulsewidth,pulsewidth_ms,pulsewidth_us 设置脉冲宽度 operator = 设置duty cycle 其他函数与对象 tone 定义 一个驱动扬声器发生的函数 语法 1 2 tone(pin,frequency,duration) // 其中，duration是可选项 pc C++中的Serial类对象 UART 工作原理 Baud Rate: 每秒钟传输的二进制位数 发送和接受的Baud Rate必须相同 发送Start Bit 逻辑为0的一位信号 发送Data Frame 5-8位不等,通常是8位 一个可选的Parity bit 根数据帧中的1的个数，奇数为0,偶数为1 发送Stop Bit 逻辑为1而1、1.5或2位信号 idle State 闲置状态为1 优缺点 优点 缺点 简单易操作 慢 有奇偶校验位检查错误 不支持多主从系统 不需要时钟 速度变化要稳定在10%以内，都则会造成数据丢失 Quiz 为什么过大的数会导致程序无法运行 超出类型范围和内存大小 3 Bus Data Bus (Bidirectional)\nAddress Bus\nControl Bus\nWhat parameters should be agreed on between TX and RX for UART protocol? Baud Rate Data Bits Stop Bit Start Bits (Parity Bit) 传输速率 一次传几位(5,6,7,8) 什么时候结束一次传开始位 可选 ","date":"2023-03-24T18:06:41+08:00","permalink":"https://downeyflyfan.com/p/3.-gpio-pwm-uart/","title":"3. GPIO PWM UART"},{"content":"组合电路 Multiplexer 数学表达式 $$ Z = \\Sigma_{i=0}^{n-1} \\ m_i D_i $$\n74x151 - 压缩卡诺图 2-1 Multiplier 加法器 Full Adder 过程 真值表与实现效果 $$ x_i + y_i + c_i = s_i \\\\\\ \\\\ 溢出到c_{i+1} $$\n逻辑表达 $$ \\begin{aligned} s_i \u0026amp;= SOP \\\\ c_{i+1} \u0026amp;= POC \\\\ s_i \u0026amp;= x_i \\oplus y_i \\oplus z_i \\\\ c_{i+1} \u0026amp;= x_iy_i + c_i(x_i \\oplus y_i) \\end{aligned} $$\n电路 逻辑符号 Verilog Code for a 1-bit FA 1 2 3 4 5 6 7 module FA( input x,y,c0, output s,c1 ); assign s = x^y^c0; assign c1 = (x \u0026amp; y) | (c0 \u0026amp; (x^y)); endmodule Ripple-Carry Adder (串位进行加法器) 定义 级联多个FA, 每一个FA都要等待上一位的输出，效率低下 通过 RCA实现4-bit adder Verilog 1 2 3 4 5 6 7 module Adder4( input A,B; output Sum; output Cout ); assign {Cout,Sum} = A + B; // 多路赋值 endmodule Carry-Lookahead Adder (进位预测加法器) 只适用于无符号数\n前提与分析\n$$ \\begin{aligned} c_{i+1} \u0026amp;= x_iy_i + (x_i + y_i)c_i \\\\\\ \\\\ Let \\ g_i \u0026amp;= x_iy_i \\\\ \\ p_i \u0026amp;= x_i + y_i \\\\\\ \\\\ c_1 \u0026amp;= g_0 + p_0c_0 \\\\ c_2 \u0026amp;= g_1 + p_1c_1 \\\\ \u0026amp;= g_1 + p_1(g_0 + p_0c_0) \\\\ \u0026amp;= g_1 + p_1g_0 + p_ip_0c_0 \\\\ c_3 \u0026amp;= g_2 + p_2g_1 + p_2p_1g_0 + p_2p_1p_0c_0 \\\\ c_4 \u0026amp;= g_3 + p_3g_2 + p_3p_2g_1 + p_3p_2p_1g_0 + p_3p_2p_1p_0c_0 \\end{aligned} $$\n电路 减法器 (无符号数) 输出 实现方式 $$ \\begin{aligned} 被减数为B,减数为A \\\\ A-B \u0026amp;= A+(-B) \\\\ 通过补码,-B \u0026amp;= B\u0026rsquo; + 1 \\\\ 因此, F \u0026amp;= A - B = A+ B\u0026rsquo; +1 \\end{aligned} $$\n逻辑函数与其他参数 $$ \\begin{aligned} d_i \u0026amp;= x_i \\oplus y_i \\oplus z_i \\\\ b_{i+1} \u0026amp;= x_i\u0026rsquo;b_i + x_i\u0026rsquo;y_i + y_ib_i \\end{aligned} $$\n加法和减法器的结合 原理 真值表 电路 逻辑符号 溢出的处理与公式 $$ \\begin{aligned} 减法: Signed \\ Overflow \u0026amp;= (A_n\\cdot B_n\u0026rsquo; \\cdot F_n\u0026rsquo;) + (A_n\u0026rsquo;\\cdot B_n\\cdot F_n) \\\\ 加法: Signed \\ Overflow \u0026amp;= (A_n\u0026rsquo; \\cdot B_n\u0026rsquo; \\cdot F_n) + (A_n\\cdot B_n\\cdot F_n\u0026rsquo;) \\end{aligned} $$\nVerilog实现代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 module AddSub ( input S, // select 0=add, 1=subtract input [3:0] A, B, output reg [3:0] F, output reg Unsigned_Overflow, output reg Signed_Overflow ); reg [4:0] TempF; always @ (S or A or B) begin if (S == 0) begin // addition // zero extend A and B before add TempF = {1\u0026#39;b0,A} + {1\u0026#39;b0,B}; F = TempF[3:0]; Unsigned_Overflow = TempF[4]; // Signed overflow = MSB of A\u0026#39;B\u0026#39;F + ABF\u0026#39; Signed_Overflow = ((!A[3]) \u0026amp; (!B[3]) \u0026amp; (TempF[3])) + ((A[3]) \u0026amp; (B[3]) \u0026amp; (!TempF[3])); end else begin // subtract // zero extend A and B before subtract TempF = {1\u0026#39;b0,A} - {1\u0026#39;b0,B}; F = TempF[3:0]; Unsigned_Overflow = TempF[4]; // Signed overflow = MSB of AB\u0026#39;F\u0026#39; + A\u0026#39;BF Signed_Overflow = ((A[3]) \u0026amp; (!B[3]) \u0026amp; (!TempF[3])) + ((!A[3]) \u0026amp; (B[3]) \u0026amp; (TempF[3])); end end endmodule ALU 4位ALU电路和逻辑符号 操作表 真值表 通过卡诺图化简(只考虑$s_2 = 0 \\ or \\ 1$, 这样就只有四个变量) 组成单元 LE (Logic Extender) AE (Arithmatic Extender) CE (Carry Extender) Verilog代码 行为代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 module alu ( input [2:0] S, input [n-1:0] A, B, output reg [n-1:0] F ); parameter n = 4; always @ (S or A or B) begin case (S) 0: F = A; 1: F = A \u0026amp; B; 2: F = A | B; 3: F = ~A; // bitwise NOT 4: F = A + B; 5: F = A - B; 6: F = A + 1; 7: F = A - 1; endcase end endmodule 数据流和结构代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 module LE ( input [2:0] s, input ai, bi, output xi ); // using the equation derived for the LE assign xi = (s[2] \u0026amp; ai) | (~s[0] \u0026amp; ai) | (~s[1] \u0026amp; ai \u0026amp; bi) | (~s[2] \u0026amp; s[1] \u0026amp; ~ai \u0026amp; (bi | s[0])); endmodule module AE ( input [2:0] s, input bi, output yi ); // using the equation derived for the AE assign yi = (s[2] \u0026amp; s[0] \u0026amp; (s[1] | ~bi)) | (s[2] \u0026amp; ~s[1] \u0026amp; ~s[0] \u0026amp; bi); endmodule module CE ( input [2:0] s, output c0 ); // using the equation derived for the CE assign c0 = (s[2] \u0026amp; (s[1] ^ s[0])); endmodule module FA ( input ci, xi, yi, output ci1, fi ); // using the equations derived for the FA // bitwise \u0026amp;=AND; |=OR; ^=XOR assign ci1 = (xi \u0026amp; yi) | (ci \u0026amp; (xi ^ yi)); assign fi = xi ^ yi ^ ci; endmodule module bitslice ( input [2:0] s, input ai, bi, input ci, output ci1, fi ); wire xi, yi; // each bit slice consists of the LE, AE and FA LE U2(s, ai, bi, xi); AE U1(s, bi, yi); FA U0(ci, xi, yi, ci1, fi); endmodule module alu ( input [2:0] S, input [n-1:0] A, B, output [n-1:0] F, output Unsigned_Overflow, Signed_Overflow ); parameter n = 4; wire [n:0] C; // only correct for this one assign Unsigned_Overflow = C[4] ^ S[0]; assign Signed_Overflow = C[4] ^ C[3]; // top level: connect the four bit slices and the CE together bitslice U3(S, A[3], B[3], C[3], C[4], F[3]); bitslice U2(S, A[2], B[2], C[2], C[3], F[2]); bitslice U1(S, A[1], B[1], C[1], C[2], F[1]); bitslice U0(S, A[0], B[0], C[0], C[1], F[0]); CE U4(S, C[0]); endmodule Decoder 电路和逻辑符号 Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 module decoder( input A,B,C, output reg [7:0] Y ); always@(*) begin Y[0] = (~A) \u0026amp; (~B) \u0026amp; (~C); Y[1] = (~A) \u0026amp; (~B) \u0026amp; (C); Y[2] = (~A) \u0026amp; (B) \u0026amp; (~C); Y[3] = (~A) \u0026amp; (B) \u0026amp; (C); Y[4] = (A) \u0026amp; (~B) \u0026amp; (~C); Y[5] = (A) \u0026amp; (~B) \u0026amp; (C); Y[6] = (A) \u0026amp; (B) \u0026amp; (~C); Y[7] = (A) \u0026amp; (B) \u0026amp; (C); end endmodule Encoder 74x148 Encoder 电路图 工作原理 Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 module decoder( input [7:0] in, output reg [2:0] out ); always @ (in) begin case (in) 8\u0026#39;b00000001: out = 3\u0026#39;b000; 8\u0026#39;b00000010: out = 3\u0026#39;b001; 8\u0026#39;b00000100: out = 3\u0026#39;b010; 8\u0026#39;b00001000: out = 3\u0026#39;b011; 8\u0026#39;b00010000: out = 3\u0026#39;b100; 8\u0026#39;b00100000: out = 3\u0026#39;b101; 8\u0026#39;b01000000: out = 3\u0026#39;b110; 8\u0026#39;b10000000: out = 3\u0026#39;b111; default: out = 3\u0026#39;b000; endcase end endmodule Tri-State Buffer 性质与作用 三种状态: 高电平、低电平、高阻态(等价于断路)\n放大输入信号后输出\n高阻态下不干扰其他电器工作\n电路和逻辑符号 Verilog 1 2 3 4 5 6 7 8 module TriState_Buffer #(parameter n = 4)( input E, input [n-1:0] D, output [n-1:0] Y ); assign Y = (E) ? D : {n{1\u0026#39;bz}}; endmodule Comparator 常见的四位比较器 4-bit X \u0026gt; Y Comparator 设计 Verilog (Behavioral Code) 1 2 3 4 5 6 module Greater( input [3:0] X,Y; output G ); assign G = (X \u0026gt; Y) ? 1\u0026#39;b1 : 1\u0026#39;b0; endmodule Shifter 类型 4-bit Shifter Verilog 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 module shifter( input [1:0]S; input [7:0]data_in; output reg [7:0]date_out; ) always @(S or date_in) begin case(S) 0: data_out = date_in; 1: data_out = date_in \u0026lt;\u0026lt; 1; 2: data_out = date_in \u0026gt;\u0026gt; 1; 3: data_out = {date_in[0],data_out[7:1]}; endcase end endmodule Multiplier 原理 电路图 Verilog 1 2 3 4 5 6 module Multiplier( input [3:0] M,Q, output [7:0] P ); P = M*Q; endmodule Parity Generator/Checker 电路 校验位 奇数为1. 偶数为0 Verilog 1 2 3 4 5 6 7 module parity_checker( input DB[7:0]; output EVEN, ODD ); ODD = DB[0]^DB[1]^DB[2]^DB[3]^DB[4]^DB^[5]^DB[6]^DB[7]; EVEN = ~ODD; endmodule 门电路 Fan Fan-in (of a logic family) The number of inputs that a gate can have in a particular logic family\nFan-out (of a logic family) The number of outputs that a gate can have in a particular logic family\nCMOS反相器 电路 图像 低电位时，PMOS导通，NMOS截止\n高电位时，PMOS截止，NMOS导通\nCMOS 逻辑系列电平规格 上/下拉电阻 上拉$p$电阻 $$ 上拉电阻 \\ R_{p(on)} = \\frac{V_{CC} - V_{OHminT}}{|I_{OHmax}|} $$\n下拉$p$电阻 $$ R_{n(on)} = \\frac{V_{OLmax}}{I_{OLmax}} $$\nSchmitt-trigger Inverter 当输入信号超过阈值时，输出信号会发生反转\n具有高的噪声抑制能力和稳定性\n与非门 最多6输入 或非门 最多4输入 非反相门 与或非门 附录 有源电路 有源电路是指包含电源或其他能够提供电能的元件的电路，例如电子管、晶体管、集成电路等 与非门最快,最便宜 ","date":"2023-03-21T10:23:50+08:00","permalink":"https://downeyflyfan.com/p/4.%E7%BB%84%E5%90%88%E7%94%B5%E8%B7%AF/","title":"4.组合电路"},{"content":"定义 爬虫是一种自动化程序，通过模拟浏览器行为或直接访问网站的接口，从网页中提取有用信息的程序\n作用 用于从大量网页中收集数据，例如商品价格、股票行情、新闻、社交媒体信息等等\n流程 了解目标网站：在开始爬取之前，需要对目标网站进行了解，包括目标网站的 URL 结构、HTML/CSS/JavaScript 的代码结构等等。\n发送 HTTP 请求：Python 爬虫使用 requests 库向目标网站发送 HTTP 请求，获取网页的 HTML 源码。\n解析 HTML：使用 Beautiful Soup 或 lxml 等库对 HTML 源码进行解析，提取需要的信息，例如标题、摘要、正文、图片链接等等。\n存储数据：将爬取到的数据存储到数据库、文件或者内存中，方便后续的分析和使用。\n定期更新：定期更新爬取的数据，保证数据的及时性和准确性。\n范例 1 2 3 4 5 6 7 8 9 10 11 12 13 from bs4 import BeautifulSoup import requests # 发送 HTTP 请求 url = \u0026#39;http://www.example.com\u0026#39; response = requests.get(url) # 解析 HTML 内容 soup = BeautifulSoup(response.text, \u0026#39;html.parser\u0026#39;) title = soup.title.string # 输出页面标题 print(title) 常用工具 BeautifulSoup 参数 类 css选择器 定义 用于选择 HTML 或 XML 文档中某个或某些元素的模式\n分类 标签选择器：通过元素的标签名进行选择，如 p 选择所有 \u0026lt;p\u0026gt; 元素。\n类选择器：通过元素的class 属性值进行选择，如 .class-name 选择所有 class 属性值为 class-name 的元素\nid 选择器：通过元素的 id 属性值进行选择，如 #id-name 选择 id 属性值为 id-name 的元素。\n属性选择器：通过元素的属性值进行选择，如 [attribute=value] 选择所有具有 attribute 属性，且属性值为 value 的元素。\n后代选择器：通过元素的父子关系进行选择，如 div p 选择所有 \u0026lt;p\u0026gt; 元素，其父元素为 \u0026lt;div\u0026gt;。\n子选择器：通过元素的父子关系进行选择，但只选择直接子元素，如 div \u0026gt; p 选择所有 \u0026lt;p\u0026gt; 元素，其父元素为 \u0026lt;div\u0026gt;。\n通配符选择器：选择所有元素，如 * 选择所有元素。\n防反爬虫 降低爬虫程序的访问频率，避免短时间内对网站的过多访问。\n通过设置 User-Agent、Referer、Cookie 等 HTTP 头部信息，模拟浏览器的访问行为，避免被识别为爬虫程序。\n使用代理 IP，避免单一 IP 大量访问同一个网站而被封禁。\n避免同时进行大量并发访问，采用异步请求或者分布式爬虫等技术来分散访问压力。\n遵守网站的 robots.txt 规则，避免访问被禁止的页面和内容。\n添加延时和随机性\n1 2 3 # 随机生成一个 1-3 秒的延时 delay = random.uniform(1, 3) time.sleep(delay) 使用验证码识别库 1 2 3 4 5 6 7 8 9 10 11 12 13 import requests import pytesseract from PIL import Image response = requests.get(url) # 将验证码图片保存到本地 with open(\u0026#39;captcha.jpg\u0026#39;, \u0026#39;wb\u0026#39;) as f: f.write(response.content) # 使用 pytesseract 对验证码图片进行识别 image = Image.open(\u0026#39;captcha.jpg\u0026#39;) captcha = pytesseract.image_to_string(image) ","date":"2023-03-17T21:00:26Z","permalink":"https://downeyflyfan.com/p/%E7%88%AC%E8%99%AB/","title":"爬虫"},{"content":"基本组成元素 Instruction MOV 1 2 3 MOV AX, 1 ; 将值1存储到AX寄存器中 MOV BX, AX ; 将AX寄存器中的值存储到BX寄存器中 MOV [BX], 2 ; 将值2存储到BX寄存器指向的内存地址中 ADD SUB 1 2 3 MOV AX, 1 ; 将值1存储到AX寄存器中 ADD AX, 2 ; 将AX寄存器中的值加上2，结果存储回AX寄存器中 SUB AX, 1 ; 将AX寄存器中的值减去1，结果存储回AX寄存器中 INC DEC 1 2 3 MOV AX, 1 ; 将值1存储到AX寄存器中 INC AX ; 将AX寄存器中的值加1，结果存储回AX寄存器中 DEC AX ; 将AX寄存器中的值减1，结果存储回AX寄存器中 AND OR XOR 1 2 3 4 5 MOV AX, 1 ; 将值1存储到AX寄存器中 MOV BX, 2 ; 将值2存储到BX寄存器中 AND AX, BX ; 将AX寄存器中的值和BX寄存器中的值进行按位与运算，结果存储回AX寄存器中 OR AX, BX ; 将AX寄存器中的值和BX寄存器中的值进行按位或运算，结果存储回AX寄存器中 XOR AX, BX ; 将AX寄存器中的值和BX寄存器中的值进行按位异或运算，结果存储回AX寄存器中 MOVSB 将源地址中的字节复制到目标地址，并将指针都加上1 LOOP LOOP指令会将CX寄存器中的计数器值减1，然后检查计数器的值是否为0，如果不为0则跳转到标号所指定的位置继续执行循环体，否则退出循环 NOP No Operation，目的为延时或填充 CMP TEST CMP指令将第一个操作数减去第二个操作数，并根据结果设置标志位，以表示比较的结果。 如果第一个操作数大于第二个操作数，则标志位中的ZF（零标志位）将被清除，SF（符号标志位）和OF（溢出标志位）将被设置。\n如果第一个操作数等于第二个操作数，则ZF将被设置，SF和OF将被清除。\n如果第一个操作数小于第二个操作数，则ZF、SF和OF都将被清除。\nTEST将两个操作数进行逐位的逻辑AND运算，并设置标志位来指示运算结果。 如果运算结果为0，则将零标志位（ZF）设置为1。\n如果运算结果中有奇数个1，则将奇偶标志位（PF）设置为1。\n将符号标志位（SF）设置为运算结果的最高位（即最左边的位）。\n将进位标志位（CF）和溢出标志位（OF）清零。\n跳转指令 无条件跳转:JMP 1 2 3 4 JMP Loop //跳转到Loop处 ... Loop: ... 条件跳转:JZ,JNZ 1 2 3 4 5 MOV AX, 0 JZ Zero //在ZF为1时跳转到Zero处 ... Zero: ... 条件跳转: JE、JNE 1 2 3 4 5 6 MOV AX, 5 CMP AX, 5 JE Equal //在ZF为1时跳转到Equal处 ... Equal: ... 条件跳转: JA、JAE、JB、JBE 1 2 3 4 5 6 MOV AX, 10 CMP AX, 5 JA Greater //在AX中的值大于5时跳转到Greater处 ... Greater: ... INT 1 2 3 MOV AH, 0x4C ; 设置AH寄存器为4Ch MOV AL, 0 ; 设置AL寄存器为0，表示退出程序 INT 0x21 ; 触发中断，中断号为21h DB EQU DB (Date Byte) 范例 1 label DB initial_value[, additional_values...];实际操作中不需要中括号 实例 1 MY_DATA DB 0x41 0x42 0x43 ; 定义了包含三个字节的数据段 运算符 offset 获取偏移量，即标签在程序中的地址与段基址之差\n修饰符 [ ] 1 2 mov [AX] BX ; 表示AX中的地址 mov AX [BX] ; 表示BX中的内容 Register (以x86为例) 通用寄存器 16位 AX 累加器寄存器 BX 基址寄存器 CX 计数器寄存器 DX 数据寄存器 SI(Source Index) 源地址寄存器 DI 目的地址寄存器 32位 加上前缀E 64位 加上前缀R 段寄存器 CS 代码段寄存器 DS 数据段寄存器 ES 附加段寄存器 SS 堆栈段寄存器 FS 存储一个段的基地址(与线程相关) GS 存储一个段的及地址(与进程相关) 指针寄存器 PC 程序计数器 BP 基址指针寄存器 SP 堆栈指针寄存器 HP 管理堆内存的分配和释放 DP 数据指针(索引寄存器),用于数组或其他结构的访问 操作码 0：无操作\n1：存储器读取\n2：存储器写入\n3：寄存器-寄存器算术操作\n4：常量扩展和寄存器-立即数算术操作\n5：逻辑操作\n6：条件分支\n7：无条件跳转\n8：函数调用\n9：函数返回\n10：中断处理\n11：输入输出\n12-15：保留\nMemory Label Constant 数值常量 1 2 3 4 5 1234 ; 十进制常量 0b1110 ; 二进制常量 0123h ; 十六进制常量 0x41 ; 十六进制常量 0331o ; 八进制常量 字符常量 1 2 \u0026#39;A\u0026#39; 字符常量 \u0026#39;\\\u0026#39;\u0026#39; 转义字符常量 字符串常量 1 \u0026#34;Hello,world\u0026#34; 符号常量 定义方式 使用宏指令或EQU定义 实例 定义缓冲区大小 1 BUFFER_SIZE EQU 100 处理器 处理器状态 \u0026ndash; 标志位(flags) —— 特殊的处理器状态 零标志位（ZF）：最近执行的操作结果是否为0\n符号标志位（SF）：最近执行的操作结果的最高有效位（MSB）是否为1。\n进位标志位（CF）：在无符号数加法或减法中，判断结果是否超出了当前的数据类型范围. 在位运算中，该标志位通常表示最高位的溢出情况。\n溢出标志位（OF）：在有符号数加法或减法中，判断结果是否超出了当前的数据类型范围. 在位运算中，该标志位通常表示最高位的溢出情况。\n奇偶标志位（PF）：判断最近执行的操作结果的二进制表示中1的个数是否为偶数。\nCPU的指令执行 取指(Fetch) 译码(Decode) 执行(Execute) 访存(Memory Access) 写回(Wirte Back) ","date":"2023-03-16T12:48:56Z","permalink":"https://downeyflyfan.com/p/a1-%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/","title":"A1: 汇编基础"},{"content":"结构 结构描述 数字电路的结构 行为描述 数字电路的行为 时序逻辑 时钟信号的逻辑,例如触发器和计数器 组合逻辑 没有时钟信号的逻辑,比如加法器和比较器 语法 关键字 assign 赋值 always 常见用法 always @ (A,B) 当A或B变化时 always @ (A or B) 当A或B或A和B都变化时 if/else for/while case input/output/inout forever 表示无限循环 reg 定义一个寄存器变量(时序变量), 并将其初始值设为0. initial initial语句只会被执行一次，而且只有在仿真开始时才会被执行. 操作符 \u0026lt;= 与 = \u0026lt;\u0026gt;= = 非阻塞赋值 阻塞复制(在其他赋值语句后赋值) # 用于指示参数化的值是以编译时常量的形式传递的\n","date":"2023-03-16T10:46:19Z","permalink":"https://downeyflyfan.com/p/verilog%E5%9F%BA%E7%A1%80/","title":"Verilog基础"},{"content":"几个概念 Polling (轮询) 定义 轮询设备的状态，确保它们正常工作\n特点 可以实现简单、可靠的设备管理\n消耗大量的处理器时间\n中断 定义 外部设备通过向处理器发送信号打断正在运行的程序\n特点 异步的，由外部事件触发 实例 移动鼠标\n使用键盘\n打印\n结果 当前指令被打断\n保护当前指令的状态,八个寄存器被放入栈\n寄存器\nLR(Link)被设为0xFFFFFFF9\nIPSR (Interrupt Program Status Register) 被设为Interrupt Number\nPC(Program Counter)加载Interrupt vector\n比较 中断是一种事件驱动的控制方式，当一个事件发生时（例如外部设备发出的信号），处理器会暂停当前执行的程序，转而执行与该事件相关的中断服务程序（ISR）。ISR执行完毕后，处理器会恢复之前的执行状态，继续执行被中断的程序。中断具有实时响应、低处理器占用率等优点，适用于需要快速响应外部事件的应用场景。\n轮询是一种基于循环的控制方式，程序会周期性地检查某个条件是否满足，然后决定下一步操作。轮询通常在一个无限循环中执行，会占用处理器的大量时间。轮询适用于处理器资源较为充足，但需要周期性检查某个条件的应用场景。\n分类 中断 轮询 背景 在需要时调用处理器 定期查询 机制 机制 协议 Servicing Interrupt Handler CPU 中断处理程序设计 Let us consider a main process with an interrupt, where the main process is to input 10 random numbers with range [0, 100], and the interrupt is to input {$11^2 , 12^2 , 13^2 , \u0026hellip; , 20^2$} once the input number in the main process is out of range. C++程序(不确定能不能跑) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 #include\u0026lt;iostream\u0026gt; #include\u0026lt;vector\u0026gt; #include\u0026lt;Windows.h\u0026gt; Using namespace std; extern vector\u0026lt;int\u0026gt; Register(10,0); //仿真寄存器 extern vector\u0026lt;int\u0026gt; Stack(10,0); //仿真栈 /*保护状态，把数据从寄存器放到栈中*/ void Protect() { Sleep(2000); // 延迟2s cout \u0026lt;\u0026lt; \u0026#34;Start to protect Status! \\n\u0026#34;; for (int m=0;m\u0026lt;10;m++) { Stack[m] = Register[m]; } Sleep(2000); cout \u0026lt;\u0026lt; \u0026#34;Finish the protect process! \\n\u0026#34;; } /*恢复状态,把数据从栈放到寄存器中*/ void Recover() { Sleep(2000); cout \u0026lt;\u0026lt; \u0026#34;Begin to Recover State!\\n\u0026#34;; for (int n=0;n\u0026lt;10;m++) { Register[n] = Stack[n]; Stack[n] = 0; } Sleep(2000); cout \u0026lt;\u0026lt; \u0026#34;Finish the Recover Process!\\n\u0026#34;; } int main(void) { int Flag = 0; //中断标志位 char Choice[] = \u0026#34;N\u0026#34;; // 决定打开还是关闭“中断”进程 cout \u0026lt;\u0026lt; \u0026#34;Please indicate whether or not to switch on Interrupt (Y; on , N:off): \\n\u0026#34;; cin \u0026gt;\u0026gt; Choice; if strcmp((Choice,\u0026#34;Y\u0026#34;) == 0) { Flag = 1; } for (int i=0;i\u0026lt;10;i++) { cout \u0026lt;\u0026lt; \u0026#34;Please insert number\u0026#34; \u0026#34; \u0026#34; \u0026lt;\u0026lt; i + 1 \u0026lt;\u0026lt; \u0026#34;:\u0026#34; \u0026lt;\u0026lt; endl; cin \u0026gt;\u0026gt; tem; cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; if ((tem \u0026gt; 100) || (tem \u0026lt; 0)) { cout \u0026lt;\u0026lt; \u0026#34;Out of range. Interrupt is triggered! \\n\u0026#34;; if (Flag == 1) { Protect(); Sleep(2000); cout \u0026lt;\u0026lt; \u0026#34;Execute Interrupt!\\n\u0026#34;; Interrupt(); Sleep(2000); cout \u0026lt;\u0026lt; \u0026#34;Interrupt is finished\u0026#34;; Recover(); i-=1; continue; } else { Sleep(1000); cout \u0026lt;\u0026lt; \u0026#34;Interrupt is switched off!\\n\u0026#34; } } } // Output the 10 numbers cout \u0026lt;\u0026lt; \u0026#34;The input 10 numbers are:\\n\u0026#34;; for (int j=0;j\u0026lt;10;j++) cout \u0026lt;\u0026lt; Register[j] \u0026lt;\u0026lt; \u0026#34;\\t\u0026#34;; return 0; } 汇编程序 中断的情况 当除法溢出时，就会中断 程序-输出overflow 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 code segment ; 开始定义代码段 start: ; 定义程序入口标签 mov as, cs ; 将代码段的段地址 CS 赋值给 AS 寄存器 mov ds, as ; 将 DS 寄存器的值设置为 AS 寄存器的值，用于访问数据段 mov si, offset do0 ; 将标签 do0 的偏移地址赋值给 SI 寄存器 ; 将 ES 寄存器的值设置为 0，用于访问内存地址 0 - FFFFH mov ax, 0 mov es, ax ; 将 DI 寄存器的值设置为内存地址 200H，用于存储数据 mov di, 200h ; 将 CX 寄存器的值设置为标签 do0end 和 do0 之间的字节数， ; 用于循环复制数据到 DI 所指向的内存地址 mov cx, offset do0end - offset do0 ; 将处理器的方向标志位 DF 清零，设置为正向操作 cld ; 重复执行将源地址（SI）所指向的数据复制到目标地址（DI）所指向的内存地址 ; 的操作，重复次数为 CX 寄存器的值 rep movsb ; 将 ES 寄存器的值设置为 0，用于访问内存地址 0 - FFFFH mov ax, 0 mov es, ax ; 将内存地址 0 处的值设置为 200H，用于存储数据 mov word ptr es:[0*4], 200h ; 将内存地址 2 处的值设置为 0，用于存储数据 mov word ptr es:[0*4+2], 0 ; 调用 DOS 中断 21H，功能码为 4C00H，用于结束程序并返回操作系统 mov ax, 4c00h int 21h ; 定义标签 do0，用于显示字符串 do0: jmp short do0start ; 无条件跳转到标签 do0start db \u0026#34;overflow!\u0026#34; ; 字符串 \u0026#34;overflow!\u0026#34;，以字节方式存储 ; 定义标签 do0start，用于显示字符串 do0start: mov ax, cs ; 将代码段的段地址 CS 赋值给 AX 寄存器 mov ds, ax ; 将 DS 寄存器的值设置为 AX 寄存器的值，用于访问数据段 mov si, 202h ; 将偏移地址 202H 赋值给 SI 寄存器，用于读取数据 mov ax, 0b800h ; 将文本缓冲区地址 0B800H 赋值给 AX 寄存器 mov es, ax ; 将 ES 寄存器的值设置为 AX 寄存器的值，用于访 ","date":"2023-03-16T09:24:02Z","permalink":"https://downeyflyfan.com/p/2.-%E4%B8%AD%E6%96%AD/","title":"2. 中断"},{"content":"A Short Progress Report On 概要 钙钛矿太阳能电池的发展历程、优点、挑战和未来前景。\n内容 钙钛矿太阳能电池在太阳能领域中具有重要的潜力，其高效率和低成本等特点使其成为一种有希望应用于商业化生产的太阳能电池。\nA Second Order Noise Shaping SAR ADC With Passive Integrator and Tri-Level Voting 链接 https://ieeexplore.ieee.org/abstract/document/8661510 术语 MV Technique (Multiple Voltages) 多个参考电压被使用，以便在不同的电压范围内进行精确的数字化转换。这种技术可以提高ADC的精度和动态范围，并减少误差和噪声。 Conversion Residual 与 Residual Voltage 模数转换器（ADC）中输入信号与ADC输出码字之间的差值\nNS Noise-Shaping (噪声整形), 采用技术减小噪声 SAR Successive Approximation Register\n通过逐步逼近的方式获得模拟信号的数字表示\nOTA (Operational Transconductance Amplifier) 跨导运算放大器 Dynamic amplifiers 优点 在不使用电容的情况下实现频率补偿\n成本和设计复杂度低\n速度和带宽较高\n缺点 需要精确控制偏置电流,避免失真和噪声 Passively-integrated capacitor 将电容器直接集成到芯片的衬底（substrate）中，而无需使用附加的电容器器件\n与传统的离散电容器相比，它可以减少信号传输的不稳定性和噪声干扰\nClock Jitter 由各种因素引起的数据采样误差和信号失真 Gate Voltage Feedback(栅压反馈) 作用 调整FET的栅极电压，以控制 FET 的导通和截止 原理 多个控制信号被反馈到 FET 的栅极，根据反馈信号的大小和极性来调整栅极电压，使 FET 的电流和电阻发生变化。 内容与结论 I. Introdution single-bit NS SAR ADC的优缺点 更高的resolution\n更低的功耗\n传统的SAR ADC有噪声干扰、失配误差等问题 分类 OTA Dynamic Amplifier Switches and Capacitors 优点 NS好 功耗低 低功耗，简单 缺点 功耗高 NS 不行 NS 不行 通过passively-integrated capacitor和tri-level voting技术提高ADC的动态性能，减少signal to noise ratio(SNR)的影响 II. Second-Order Passive NS-SAR ADC 传统SAR ADC的优缺点 优点 缺点 简单易实现 速度慢 功耗低 易受母线电压影响，不稳定 短时间内完成高功率数模转换 由于电容器分压器和开关电容器的失配，可能存在非线性误差和噪声干扰 一阶无源噪声整形SAR ADC的优缺点 优点 缺点 功耗低 III. Tri-Level Voting 作用 进一步减少 SAR ADC 中因非理想元件和电路布局等因素引起的误差和噪声干扰 Tri-Level Voting 技术利用了 3 个不同的数字量化阈值，并对每个采样周期进行 3 次数字比较，以确定最终的输出码。\n优点\n显著减少噪声干扰和非线性误差，从而提高 ADC 的精度和稳定性\n不需要额外的电路或芯片面积\nIV. Dynamic Non-overlapping clock generator 作用 驱动 SAR ADC 的各个子模块 优点 根据采样电容器的电荷状态和采样信号的幅值动态调整时钟的相位和宽度，以最大限度地减少时钟抖动和相位偏移，并确保 ADC 的稳定性和精度\n采用了一种基于栅压反馈的电荷泵升压电路，可以在不增加芯片面积的情况下提高时钟的上升时间和下降时间，进一步提高 ADC 的速度和性能。\nV. MEASUREMENT RESULTS 过程 用 TSMC 65 nm CMOS 工艺实现了一个 12-bit 的 SAR ADC，并进行了多种测试，包括 DNL、INL、SNR、SFDR 和 ENOB 等 结果 ADC 可以在 10 MS/s 的采样速率下实现 12-bit 的有效分辨率，DNL 和 INL 均在 0.5 LSB 以内，SNR 和 SFDR 均超过了 65 dB，ENOB 达到了 10.2 bits。此外，作者还通过与其他先进的 SAR ADC 进行比较，证明了该文中所提出的技术在精度、速度和功耗方面具有显著的优势。 缺陷 面积消耗 Passively-integrated Capacitor 和 Tri-Level Voting 需要一定的面积和布局资源 时钟不足 dynamic non-overlapping clock generator对电源噪声和温度漂移敏感,会影响精度和可靠性 不够高速，分辨率不够高 基于时间间隔的ADC、Sigma-Delta ADC、Flash ADC的采样率和分辨率更高 可能的改进 稳定时钟发生器 晶振 A Systematic Study of ESD Protection Co-Design With High-Speed and High-Frequency ICs in 28 nm CMOS 链接 https://ieeexplore.ieee.org/abstract/document/7552573 术语 CMOS Complementary Metal-Oxide-Semiconductor\n互补金属氧化物半导体\nmulti-GHz and multi-Gbps ICs 运行频率在多个GHz（千兆赫）级别和传输速率在多个Gbps（千兆比特每秒）级别的集成电路。这些IC通常用于高速数据传输和处理，如无线通信、高速计算、数字信号处理和视频处理等领域。这些IC需要高度集成的电路设计和复杂的制造技术，以满足高速、高精度和低功耗等要求。\ndischarge resistor(放电电阻) 电路在遭受静电放电时产生的阻力 leakage current(漏电流) 电路中发生的非意愿流动的电流 意外的沟道开启(unexpected channel turn-on) 电荷注入或电场等因素导致沟道形成导通状态，使得电路产生非预期的电流路径 Human Body Model (HBM) 后端ESD互连 后端ESD互连指的是在芯片的后端制程中设计的针对ESD（静电放电）的互联结构，包括金属线路、垫圈、电阻、电容等。这些互连结构的设计对于实现全片ESD保护电路至关重要\n寄生效应和寄生参数 寄生效应是指电路中非期望出现的电性能。这些电性能通常是由电路的构造和电子元件的物理特性导致的，如电感、电容和电阻等。寄生效应在高频、高速、低功耗等要求严格的电路设计中会产生不利的影响，例如信号衰减、时序偏差、干扰和功耗等问题\n寄生参数\n电容（Capacitance）：由于器件本身的结构和材料，以及器件和周围环境之间的电场耦合等原因，导致器件之间和器件与地之间存在一定的电容\n电感（Inductance）：由于ESD放电时产生的瞬时电流很大，会产生较大的瞬时磁场，进而在器件中感应出电压，这些电压可能会对器件产生破坏。\n电阻（Resistance）：器件内部和器件与周围环境之间都会存在一定的电阻，ESD放电时会产生大电流，电流通过这些电阻会产生较大的电压，可能会对器件产生破坏。\n前端设计与后端设计 前端设计的主要任务是设计和验证电路的功能和性能，通常包括电路原理图设计、逻辑设计、验证和仿真等。\n后端设计的主要任务是把电路设计转化为实际的芯片版图，并进行布局和布线。后端设计还包括物理验证和验证芯片的可靠性和制造性等。\nRing Oscillator (环形振荡器) 环形振荡器（Ring oscillator）是一种基于反馈电路的振荡器，它是由一个奇数个数字反相器和若干个延迟电路构成的环形电路。环形振荡器的频率取决于数字反相器和延迟电路的延迟时间，一般来说，延迟时间越长，振荡频率就越低.\n拍频 拍频是指两个音调之间的频率差。当两个音调的频率非常接近时，它们会产生一种交替增强和减弱的效果，这种效果被称为拍。拍频的大小取决于两个音调的频率差，频率差越大，拍频就越快，反之亦然。例如，当一个音调的频率为440 Hz，另一个音调的频率为442 Hz时，它们之间的拍频为2 Hz，也就是说，每秒钟会有2个拍。\nEMMI (Emission Microscopy) 发射显微镜（EMMI）是半导体工业中用于识别集成电路（IC）故障源的一种故障分析技术。它涉及在IC在应力条件下工作时，例如在ESD事件期间或当电路超出其规格时，对其光发射进行成像。通过分析光发射模式，EMMI可以确定故障的位置和性质，例如短路或开路，并提供有价值的信息以进行IC设计的调试和优化。EMMI是一种非破坏性技术，可以实时执行，允许进行IC故障的实时调试。\n概述 ESD器件优化和表征、ESD行为建模、后端互连特性表征、寄生ESD参数提取、ESD失效分析以及面向最高达15 GHz和40 Gbps的IC的ESD共同设计评估。环形振荡器、虚拟I/O缓冲器和电流模式逻辑（CML）电路被用来演示这种共同设计方法。\nMethodology 聚酰亚胺栅二极管 ESD 结构 优点 直接通过浅层横向放电路径将大电流引导到 N+ 和 P+ 扩散区之间，放电电阻较低\nESD 放电路径非常短，由28 nm CMOS通道定义，放电电阻也低\n缺点 相对较高的漏电流\n必须对聚酰亚胺栅二极管 ESD 设备进行适当的偏置, 来避免相对较高的漏电流\n混合模式ESD模拟设计的必要性 ESD测试模型 人体模型(HBM)\nESD放电电流往往会聚集在STI插头的底部，因此STI二极管比门极二极管ESD器件更容易出现热聚集。\nSPICE电路仿真使用提取的ESD模型与TLP测试I-V曲线之间的优秀匹配证实了新的可扩展ESD行为建模技术的有效性，该技术对于实现全片ESD电路仿真和ESD-IC协同设计仿真至关重要，以实现芯片级ESD设计预测。\n后端ESD互连的特性和设计原则 如何准确提取ESD的寄生参数 ESD保护环形振荡器 ESD 保护虚拟输入和输出缓冲器 ESD 在整个芯片级别的保护和分析的重要性 展示了全芯片ESD保护使用STI二极管ESD保护结构从I/O到VDD和GND的复杂ESD放电电流路径模式，并指出了ESD保护的局限性\n如何使用发射显微镜技术进行实时ESD故障分析，以识别ESD损伤的位置和原因\nWhole-Chip ESD Protection Design Verification by CAD 链接 https://ieeexplore.ieee.org/abstract/document/5340146 I. Introdution 静电放电（ESD）的危害和对芯片设计的影响，以及传统的ESD保护设计的局限性。\nII. Whole-Chip ESD Protection 传统的ESD保护设计方法\n集中式保护 输入和输出端口附近安装保护电路来保护整个芯片 分布式保护 在芯片内部的各个电路单元附近安装保护电路来保护芯片 混合保护 将集中式保护和分布式保护结合起来，以获得更好的保护效果 局限性 设计复杂度、性能损失和芯片面积 III. Whole-Chip ESD CAD ESD 保护电路设计 需要考虑的因素有芯片应用环境、芯片结构和 ESD 保护要求 ESD 仿真工具 IV. Application Example 以一个实际的芯片设计为例，介绍了如何应用上述的 ESD 保护 CAD 设计流程进行 ESD 保护电路设计和验证\n该芯片的应用环境和 ESD 保护要求，并提出了设计的目标和要求。然后，设计人员根据芯片结构和 ESD 保护要求，选择了合适的 ESD 保护电路结构，并进行了电路设计和优化。\n文章介绍了针对该芯片的 ESD 仿真分析过程，使用了 Cadence Virtuoso 工具进行了 HBM、CDM 和 MM 测试，评估了 ESD 保护电路的保护性能和可靠性。最后，文章总结了该设计的优点和局限性，并提出了进一步的改进和优化方向。\n展示了 ESD 保护 CAD 设计流程的应用和效果，说明了这种方法可以提高 ESD 保护电路的设计质量和可靠性，降低芯片开发成本和风险。\n错误 Application Example和Whole-Chip ESD CAD A CMOS 210-GHz Fundamental Transceiver With OOK Modulation \u0026ndash; WangZheng 链接 https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=\u0026arnumber=6718086 术语 SOI (Silicon on Insulator) MAG(Maximum Available Gain) 又叫$G_{max}$，Mason\u0026rsquo;s U OOK (On-off-key) 脉冲调制，一种将数字信号转换为脉冲信号的方法，其中高电平表示1，低电平表示0。 LNA (Low-noise Amplifier) VCO(Voltage Controlled Oscillator) NF(Noise Figure) 噪声系数 DAR(Distributed active radiator) HFSS(High Frequency Structure Simulator) PAE (Power Added Efficiency) i.d. 意为也就是 breakout 将芯片引脚连接到外部器件或测试点的过程\n将一个器件或模块从其原始设计中分离出来，以便进行单独测试或修改\nCouple(耦合) 两个或多个电路之间的相互作用 Source degeneration for cross-coupled pair 一个或多个电阻被串联到交叉耦合对的源极，以减小电路的增益并提高电路的稳定性和线性度。这种技术常用于放大器和振荡器电路中。 CPW (CoPlanar Waveguide) 共面波导线。一种微波传输线，由一条中心导体和两条平面地面导体组成。CPW广泛应用于微波电路中，具有低损耗、高速度、高阻抗和易于集成等优点 Square-Law Region 在某些电子器件中，电流和电压之间的关系在某个范围内呈平方定律 VDI WR5.1 一种波导标准，用于毫米波和亚毫米波频段的通信和雷达系统。它定义了一系列标准化的波导尺寸和接口，以确保不同设备和系统之间的互操作性。 EIRP (Equivalent Isotropic Radiated Power) 等效各向同性功率辐射 IF (Intermediate Frequency) 内容 I. Introdution THz的应用 Schottky diodes [6],\nnonlinear optical [7], [8]\nIII-V devices [9]\nnano CMOS 有实现THz级别系统的潜力\nA CMOS 210-GHz Fundamental Transceiver With OOK Modulation\nII. System Architecture TX a $2\\times 2$ spatial power-combining array architecture\nVCO at 210 GHz with an OOK modulator\nPA drive + 4 PAs\nnovel balun-based differential power distribution network\nOn-chip $2\\times 2$ dipole antenna array\nRX on-chip antenna\nLNA\nPower detector\nbalun-based differential power distribution network 减少了交叉电路(crosstalk) III. ON-CHIP A NTENNA ARRAY AND BALUN DESIGN $2 \\times 2$ Antenna Array 天线的Gain - Frequency 天线的Gain - Theta Marchand Balun 一种广泛用于无线通信和射频电路中的平衡器件，用于将单端信号转换为平衡信号或将平衡信号转换为单端信号。 IV. OVER-NEUTRALIZATION TECHNIQUE AND PA DESIGN Neutralization Technique for Differential Pair $$ MAG \\ \\ U = \\frac{Y_{12}-Y_{21}}{4(Re[Y_{11}]Re[Y_{22}] - Re[Y_{21}]Re[Y_{12}])} $$\nRevisiting the Neutralization Technique 以上公式在$f \\lt 2f_{max}$的前提下得出，从而得出下式 $$ U \\approx \\frac{|g_m|^2}{4[\\omega^2 (C_{gs} + C_{gd})^2 r_gg_{ds}+\\omega^2 (C_{gs} + C_{gd})C_{gd}r_gg_m] } $$\nMaximum power gain with respect to neutralization capacitance at (a) 100 GHz and (b) 200 GHz 200-GHz Transistor Layout for PA 三极管布局 PA 电路 Over-neutralization Techniques 选择3dB,$K_f=1.1$\nPA电路效果的测量数据 V. VCO, LNA, AND POWER DETECTOR DESIGN VCO Source degeneration for cross-coupled pair 测量结果 210-GHz LNA Popular Design: Common Source , Cascode topology\n电路图\n测量结果 Power Detector 电路图 $$ V_D = \\frac{1}{4} \\mu_n C_{OX} (\\frac{W}{L}) R_L V_{in}^2 $$\n仿真结果 VI. MEASUREMENTS 电路板 System Measurements CW 测量结果 信噪比 测量结果总结 与其他产品的比较 A 0.2-V Energy-Harvesting BLE Transmitter With a Micropower Manager Achieving 25% System Efficiency at 0-dBm Output and 5.2-nW Sleep Power in 28-nm CMOS 链接 https://ieeexplore.ieee.org/document/8605512/;jsessionid=daOy6MqWBWfm74fUoCp-3KUeemUsHAkSOgpCmIlpsmkYsJV8wg-G!688335416 术语 ULV ULV Ultralow-Voltage BLE Bluetooth Low-Energy ","date":"2023-03-13T21:56:29Z","permalink":"https://downeyflyfan.com/p/essay-notes/","title":"Essay Notes"},{"content":"二极管正向特性 终端特性 $$ i = I_S (e^{V/V_T}-1) \\\\ V_T:热电压，室温下(20C^\\circ),V_T = 25.3(mV) \\approx 25mV $$\n其他特性 $$ I_1 = I_S e^{V_1/V_T} \\\\\\ \\\\ I_2 = I_S e^{V_2/V_T} \\\\\\ \\\\ \\frac{I_2}{I_1} = e^{(V_2-V_1)/V_T} \\\\\\ \\\\ \\because lnx = 2.3 \\ lgx \\\\\\ \\\\ \\therefore V_2 = V_1 + V_T ln(\\frac{I_2}{I_1}) = V_1 + 2.3V_T lg(\\frac{I_2}{I_1}) \\\\\\ \\\\ 其中2.3 V_T \\approx 60(mV) $$\n正向偏置 $$ V \\gg V_T \\Longrightarrow i \\approx I_Se^{V/V_T} \\\\\\ \\\\ i = I_Se^{V/V_T} \\Longrightarrow V = V_T \\ ln\\Big(\\frac{i}{I_S}\\Big) $$\n反向偏置 $$ v \\lt 0 \\Longrightarrow i\\approx -I_S $$\n击穿区域 $$ V \\lt V_{ZK} \\\\\\ \\\\ I_{max} \\lt P_{max} / V_Z $$\n图示 热效应 由于$I_S,V_D$都与温度有关，所以温度会改变图像 二极管正向属性模型化 指数二极管模型 代数分析法 $$ V_{DD} = V_D + V_R \\\\\\ \\\\ \\begin{align} I_D= I_S e^{V_D/V_T} \\\\ I_D = \\frac{V_{DD}-V_D}{R} \\end{align} \\\\\\ \\\\ 根据以上两式\\pmb{画图}或\\pmb{计算}求解 $$\n图像分析法 直观，但不准确，不适用于复杂问题 恒压降模型(CVDM) 将$I_S-V_D$关系在$V_D=0.7V$时近似为垂直 理想二极管模型 将$I_S-V_D$关系在$V_D=0$时近似为垂直 小信号模型(信号增加模型) 原因 使用非线性元件传输信号\n保证不失真\n图像 代数分析 电路 电流方程 $$ 把电源分成直流和交流两种叠加 \\\\\\ \\\\ i_D(t) = I_D + i_d(t) \\\\\\ \\\\ 总电流 = DC偏移量 + AC信号(失真) \\\\\\ \\\\ \\begin{aligned} i_D(t) \u0026amp;= I_S e^{(V_D+V_d)/V_T} \\\\ \u0026amp;= I_S \\ e^{V_D/V_T} e^{V_d/V_T} \\\\ \u0026amp;= I_D e^{V_d/V_T} (泰勒展开，取前两项) \\\\ \u0026amp;= I_D (1 + \\frac{V_d}{V_T}) \\\\ \u0026amp;= I_D + \\underset{i_d}{\\frac{I_D}{V_T}V_d} \\end{aligned} $$\n小信号电阻 $$ \\begin{aligned} i_d \u0026amp;= \\frac{I_D}{V_T}V_d \\\\ \\therefore r_d \u0026amp;= \\frac{V_T}{I_D} \\\\ \u0026amp;= \\frac{dV_D}{di_D}\\Big|_Q \\end{aligned} \\\\\\ \\\\ 注意，这个\\pmb{近似}只有在v_d \\lt 5mV时才\\pmb{有效} $$\n直流分量$I_D$只取决于$\\pmb{V_D}$和温度 例题 The power supply $V_{+}$ has a DC value of 10V over which is superimposed a 60Hz sinusoid of 1V peak amplitude (known as the ripple)\n$$ 假设I=1mA时, V_D = 0.7V\\\\\\ \\\\ \\begin{aligned} I_D \u0026amp;= \\frac{10-0.7}{R} = 0.93(mA) \\\\ r_d \u0026amp;= \\frac{V_T}{I_D} = 26.9(\\Omega) \\\\ V_d(peak) \u0026amp;= \\frac{r_d}{r_d + R}V_s = 2.68(mV) \\end{aligned} $$\n总结 把电压分为稳定的直流和随时间变化的交流两部分\n稳定时，二极管当作CVDM\n变化时，二极管当作电阻器\n模型的选择 模型 指数模型 恒压降模型 理想二极管模型 适用情况 低电压 中等电压 高电压 特点 准 实用 适用电路 简单 最复杂 较为复杂 电压管理 图像 推理 $$ \\begin{aligned} I_R = \\frac{10-3\\times 0.7}{R} \u0026amp;= 7.9(mA) \\\\ V_0 = 3\\times 0.7 \u0026amp;= 2.1(V) \\\\ r_d = \\frac{V_T}{I_R} \u0026amp;= 3.2(\\Omega) \\\\ r = 3r_d \u0026amp;= 9.6 (\\Omega) \\\\ \\end{aligned} \\\\ (1) \\ \\ 当电压源变化为10%时 \\\\\\ \\\\ \\Delta V_0 = 2\\frac{r}{r+R} = 19(mV) \\\\\\ \\\\ (2) \\ \\ 当R_L连接到电路中时 \\\\\\ \\\\ \\begin{aligned} I_{R_L} \u0026amp;= \\frac{2.1V}{1k\\Omega} = 2.1(mA) \\\\ \\therefore \\Delta V_0 \u0026amp;= -I_{R_L} r = -20(mV) \\end{aligned} $$\n齐纳二极管 符号 特性分析 $V_Z$: 稳压二极管通过额定电流时两端产生的稳定电压值\n$V_{Z0}$: 在一定温度下，稳压二极管两端电压随温度变化率为零的点\n$$ V_{Z0} = V_Z - r_Z I_{ZT} \\\\\\ \\\\ I_{ZT}:典型工作电流 $$\n$V_{ZK}$: 稳压二极管进入稳压状态的最小反向电压 The $6.8V$ zener diode in the circuit is specified to have $V_Z =6.8V$ at $I_Z =5mA$, $r_z=20Ω$, and $I_{ZK} =0.2mA$. The supply voltage $V^+$ is nominally $10V$ but can vary by$±1V$.\n过程 $$ (1)找出不加R_L时的V_0 \\\\\\ \\\\ \\begin{aligned} V_{Z0} \u0026amp;= V_Z - r_Z I_{ZT} = 6.7(V) \\\\ I_Z \u0026amp;= \\frac{V^+- V_{Z0}}{R+r_z} = 6.35(mA) \\\\ V_O \u0026amp;= V_{Z0} + I_Z r_Z = 6.83(V) \\end{aligned} \\\\\\ \\\\ (2)找到电压变化10%时的V_O \\\\\\ \\\\ \\Delta V_O = \\Delta V^+\\frac{r_z}{r_z+R} = \\pm 38.5(mV) \\\\\\ \\\\ (3)求加上R_L后的V_0(I_L = 1mA) \\\\\\ \\\\ \\begin{aligned} \\Delta V_O \u0026amp;= r_z \\Delta I_Z = -20(mV) \\\\ Load \\ Regulation \u0026amp;= \\frac{\\Delta V_O}{\\Delta I_L} = -20 (mV/mA) \\end{aligned} $$\n整流器电路 定义 将AC转换为DC\n工作原理 通过能量转换器将振幅放大或缩小\n通过二极管整流器将全波AC转为半波直流\n通过LPF减小振幅\n通过电压稳压器消除锯齿\n提供直流电\n半波整流器(CVDM) 电路 公式 $$ \\begin{aligned} (1) \\ 若 \\ V_i \u0026amp;\\gt V_D \\\\ V_o \u0026amp;= V_i - V_D \\\\\\ \\\\ (2) \\ 若 \\ V_i \u0026amp;\\le V_D \\\\ V_0 \u0026amp;= 0 \\\\\\ \\\\ PIV \u0026amp;= V_S \\end{aligned} $$\n全波整流器 电路和原理 $$ \\begin{aligned} \u0026amp;(1) \\ 若 \\ V_S \\gt V_D \\\\ \u0026amp;V_o = V_S - V_D \\\\\\ \\\\ \u0026amp;(2) \\ 若 \\ V_S \\lt -V_D \\\\ \u0026amp;V_o = -V_S - V_D \\\\\\ \\\\ \u0026amp;(3) \\ 若 \\ -V_D \\le V_S \\le V_D \\\\ \u0026amp;V_o = 0 \\\\\\ \\\\ \u0026amp; PIV = 2V_S - V_D \\end{aligned} $$\n桥式整流器 电路 $$ \\begin{aligned} (1) \\ \u0026amp;若 \\ V_S \\gt 0 \\\\ \u0026amp; D_1、D_2连通 \\\\ (2) \\ \u0026amp;若 \\ V_S \\lt 0 \\\\ \u0026amp; D_3 、D_4连通 \\\\\\ \\\\ \u0026amp;PIV = V_S - V_D \\end{aligned} $$\n峰值整流器 电路 限幅电路和钳位电路 限幅电路 电路 推理 $$ \\begin{aligned} (1) 当 \\ V_i \u0026amp;\\lt V_1 + V_D: \\\\ V_o \u0026amp;= V_i \\\\ (2) 当 \\ V_i \u0026amp;\\gt V_1 + V_D: \\\\ V_o \u0026amp;= V_i + V_D \\end{aligned} $$\n图像 钳位电路 电路 图像 电压增倍器 电路 附录 二极管的额定电压 二极管在正向导通时的最大允许电压，以及在反向偏置时的最大允许电压\n直流脉冲电压 直流脉冲电压是一种电信号，它由直流（DC）和脉冲（AC）组成。它通常是由一个直流电源和一个脉冲发生器组合而成\nPIV (Peak Inverse Voltage) zz\n","date":"2023-03-13T10:07:39Z","permalink":"https://downeyflyfan.com/p/4.%E4%BA%8C%E6%9E%81%E7%AE%A1/","title":"4.二极管"},{"content":"Machine Learning Basics Learning Algorithms Definition 一个计算机程序以Performace P从有关Task T的Experience E中学习\nDescription Example Feature(被量化的特征)的集合\n$x\\in\\R^n$,每一个$x_i$都是一个feature\n通过计算机处理Example的方式来定义Machine Learning Common Tasks that can be done by Machine Learning Classification(With Missing Inputs)\nRegression(回归)\n预测 Transcription 把无序的数据变成固定的、有序的形式 Translation\nPerformace Measure P Accuracy 正确输出的比例 Error Rate 错误输出的比例 Experience E Unsupervised Learning Algorithms 学习$\\pmb x$并得到它的$p(\\pmb x)$ Supervised Learning Algorithms 学习$\\pmb{x和y}$,并最终通过$\\pmb x$预测$\\pmb y$ 以上两个术语并不是严格定义的 Linear Regression $$ \\hat y =\\pmb{w^Tx} + b\\\\\\ \\\\ MSE_{test} = \\frac{1}{m}\\sum_i(\\pmb {\\hat y}{test} - \\pmb y{test})^2_i = \\frac{1}{m}||\\pmb {\\hat y}{test} - \\pmb y{test}||2^2 \\\\\\ \\\\ To \\ minimize, \\ \\nabla\\omega \\frac{1}{m} ||\\hat {\\pmb y}^{(train)} - \\pmb y^{(train)} ||2^2 = 0 \\\\\\ \\\\ \\nabla\\omega \\frac{1}{m} || \\pmb X^{(train)}\\pmb w - \\pmb y^{(train)} ||_2^2 = 0 \\\\\\ \\\\ \\nabla_w (\\pmb X^{(train)}\\pmb w - \\pmb y^{(train)})^T (\\pmb X^{(train)}\\pmb w - \\pmb y^{(train)}) = 0 \\\\\\ \\\\ \\pmb w = (\\pmb X^{(train)T}\\pmb X^{(train)})^{-1} \\pmb X^{(train)T}y^{(train)} $$\n满足上述条件的叫做Normal Equation Capacity, Underfitting, Overfitting Introduction Generalization: 预测数据的能力\nData generating distribution$p_{data}$\nTraining Error and Test Error\nTraining Error通常比Test Error低\nTest Error是更重要的评估指标\nUnderfitting Overfitting Capacity Underfitting Overfitting Underfitting Overfitting 两种误差都很高 Training Error高，Test Error低 Capacity 训练模型适应新数据的能力\n以下示例对应一次，2次，9次多项式模型\nAdjust Capacity 调整参数\n增加数据量大小\n换训练模型\nNon-parametric Model ; Bayes Error Non-parametric Model 它在训练数据集中找到与新数据点最接近的k个数据点，然后将它们的输出值进行加权平均，作为新数据点的输出值。 $$ When \\ i = min||\\pmb X_i -\\pmb x||_2^2: \\ \\hat y = y_i $$\nBayes Error 在一个分类问题中，使用任何算法所能达到的最小错误率 $$ P(error) = 1 - P(correct) = 1 - \\int_{\\mathcal{X}} P(correct|x)P(x)dx \\\\\\ \\\\ \\mathcal X是样本分布 \\ \\ P(correct): 正确分类的概率 $$\nRegularization Weight Dacay $$ J(\\pmb \\omega) = MSE_{(train)} + \\lambda\\omega^T \\omega \\\\\\ \\\\ \\lambda: Orthogonal \\ parameter \\\\\\ \\\\ \\omega \\uparrow \\Longrightarrow J \\uparrow \\Longrightarrow 过拟合\\downarrow $$\nRegularizer 在Weight Decay中，$\\pmb{\\Omega(\\omega) = \\omega^T\\omega}$\nRegularization是通过优化模型降低其Generalization Error，而不是Test Error\nHyperparameters and Cross-Validation Hyperparameters 训练前设置好的参数 Cross-Validation 定义 Cross-validation是一种评估机器学习模型性能的技术，它将数据集分成训练集和验证集，并使用不同的训练集和验证集组合来评估模型的性能。在交叉验证中，数据集被分成k个相等的子集，其中一个子集被保留用于验证模型，而其他k-1个子集被用于训练模型。这个过程重复k次，每次使用不同的子集作为验证集。最终，交叉验证会生成k个模型，每个模型都被评估一次，然后将这些评估结果的平均值作为模型的性能评估指标。\nk-fold Cross-Variance Algorithm 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def KFoldXV(D, A, L, k): # Require: D, the given dataset, with elements z (i) # Require: A, the learning algorithm, seen as a function that takes a dataset as input and outputs a learned function # Require: L, the loss function, seen as a function from a learned function f and an example z (i) ∈ D to a scalar ∈ R # Require: k, the number of folds # Split D into k mutually exclusive subsets D_i, whose union is D. n = len(D) fold_size = n // k # 整除运算符，向下取整 folds = [D[i:i+fold_size] for i in range(0, n, fold_size)] errors = [] for i in range(k): train_set = [] for j, fold in enumerate(folds): if j != i: for z in fold: train_set.append(z) f_i = A(train_set) for z in folds[i]: ej = L(f_i, z) errors.append(ej) return errors Bias and Variance Bias \u0026amp; MSE $$ bias(\\hat{\\pmb \\theta}_m) = \\mathbb E(\\hat{\\pmb \\theta}_m) - \\pmb \\theta \\\\\\ \\\\ \\begin{aligned} MSE \u0026amp;= \\mathbb E[(\\hat{\\pmb \\theta}_m - \\pmb \\theta)^2] \\\\ \u0026amp; = Bias^2(\\hat{\\pmb \\theta}) + Var(\\hat{\\pmb \\theta}) \\end{aligned} $$\nSupervised Learning Algorithm Category SVM (Support Vector Machine) - Binary Problem $y$与kernel $$ \\begin{aligned} f(\\pmb x) \u0026amp;= \\pmb{w^Tx} + b = b + \\sum_{i=1}^n \\alpha_i \\pmb{x^Tx^{(i)}} \\\\ \u0026amp;= b + \\sum_i k(\\pmb{x,x^{i}}) \\end{aligned} \\\\\\ \\\\ Gaussian \\ Kernal: k(\\pmb{u,v}) = \\mathcal N (u-v;0.\\sigma^2\\pmb I) \\ \\ \\ \\\\\\ \\\\ Also \\ known \\ as \\ \\pmb{RBF(radical \\ basis function)} $$\nUnsupervised Learning Algorithm Principal Component Analysis (PCA) 详见Linear Algebra K-means Clustering $$ J(\\theta) = \\mathbb E $$\nGradient Descent 定义 不断地沿梯度方向前进,逐渐减小函数值的过程\n迭代公式 $$ \\theta = \\theta - \\alpha \\nabla J(\\theta) \\\\\\ \\\\ \\nabla J(\\theta) = \\begin{pmatrix} \\frac{\\partial J}{\\partial \\theta_1} \\\\ \\frac{\\partial J}{\\partial \\theta_2} \\\\ \u0026hellip; \\\\ \\frac{\\partial J}{\\partial \\theta_n} \\end{pmatrix} \\\\\\ \\\\ \\theta: 优化参数 \\ \\ \\alpha:学习率 \\ \\ J: 目标参数 $$\n学习率过大，结果会超大\n学习率过小，结果几乎没有改变\n思想 沿着梯度的负方向更新参数，求得函数的最小值\nChallenges 计算资源和时间成本\n数据偏差和公平性\nDeep Learning 神经网络 图示 解释 中间层又被称为隐藏层\n用第0,1,2层表示输入、中间、输出层\n示例 图示——含有偏置的简单神经网络 $$ y = \\begin{cases} 0 \u0026amp; w_1x_1 + w_2x_2 + b \\le 0 \\\\ 1 \u0026amp; w_1x_1 +w_2x_2 + b \\gt 0 \\end{cases} \\\\\\ \\\\ 引入\\pmb{激活函数h(x)}=\\begin{cases} 1 \u0026amp; x\\gt 0 \\\\ 0 \u0026amp; x\\le 0 \\end{cases} \\\\\\ \\\\ 那么y = h(w_1x_1 + w_2x_2 + b) \\\\\\ \\\\ 此处的激活函数是一种\\pmb{阶跃函数} \\\\\\ \\\\ \\pmb{阶跃函数} 是感知机的激活函数 $$\n进一步推导 图示 $$ a = w_1x_1 + w_2x_2 + b \\\\\\ \\\\ y = h(a) $$\n激活函数 sigmoid函数 $$ h(x) = \\frac{1}{1+e^{-x}} $$\n比较 共同点 输出信号始终$\\in(0,1)$\n输入重要信息，输出较大的值\n均为非线性函数\n不同点 Sigmoid平滑，而阶跃函数突变 ReLU - Rectified Linear Unit $$ h(x) = \\begin{cases} x \u0026amp; x \\gt 0 \\\\ 0 \u0026amp; x \\le 0 \\end{cases} $$\n神经网络的内积 三层神经网络的实现 权重的符号 实现 $$ a_1^{(1)} = x_2w_{12}^{(1)} + x_1w_{11}^{(1)}+b_1^{(1)} \\\\\\ \\\\ A^{(1)} = XW^{(1)} + B^{(1)} \\\\\\ \\\\ 其中，A^{(1)} = \\begin{pmatrix} a_1^{(1)} \u0026amp; a_2^{(1)} \u0026amp; a_3^{(1)} \\end{pmatrix} \\\\\\ \\\\ X = \\begin{pmatrix} x_1 \u0026amp; x_2 \\end{pmatrix} \\\\\\ \\\\ W^{(1)} = \\begin{pmatrix} w_{11}^{(1)} \u0026amp; w_{21}^{(1)} \u0026amp; w_{31}^{(1)}\\\\ w_{21}^{(1)} \u0026amp; w_{22}^{(1)} \u0026amp; w_{23}^{(1)} \\end{pmatrix} \\\\\\ \\\\ B^{(1)} = \\begin{pmatrix} b_1^{(1)} \u0026amp; b_2^{(1)} \u0026amp; b_3^{(1)} \\end{pmatrix} $$\n输出层的设计 回归问题 —— 恒等函数 $$ h(x) = x \\ \\ x \\in R $$\n上述代码总和 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 import numpy as np import matplotlib.pylab as plt ## 定义激活函数 def step_function(x): return np.array(x \u0026gt; 0, dtype=int) def sigmoid(x): return 1/(1+np.exp(-x)) def ReLU(x): return np.maximum(0,x) ## 注意这个参数的使用 def identity(x): return x def softmax(a): c = np.max(a) exp_a = np.exp(a - c) ## 溢出对策 sum_exp_a = np.sum(exp_a) y = exp_a / sum_exp_a return y \u0026#39;\u0026#39;\u0026#39; 函数绘制 ## 绘制阶跃函数 x = np.arange(-5.0, 5.0, 0.1) y = step_function(x) plt.plot(x, y) plt.ylim(-0.1, 1.1) ## 指定 y 轴的范围 plt.show() ## 绘制sigmoid函数 z = sigmoid(x) plt.plot(x, z) plt.ylim(-0.1, 1.1) ## 指定 y 轴的范围 plt.show() ## 绘制ReLU w = ReLU(x) plt.plot(x, w) plt.ylim(-0.1, 6) ## 指定 y 轴的范围 plt.show() \u0026#39;\u0026#39;\u0026#39; ## 0-1层的信号传递 X = np.array([1.0, 0.5]) W1 = np.array([[0.1, 0.3, 0.5], [0.2, 0.4, 0.6]]) B1 = np.array([0.1, 0.2, 0.3]) ## 随机取特征、权重、偏差 A1 = np.dot(X, W1) + B1 ## 计算第一层A1 Z1 = sigmoid(A1) ## 计算A1的sigmoid函数 ## 1-2层的信号传递 W2 = np.array([[0.1, 0.4], [0.2, 0.5], [0.3, 0.6]]) B2 = np.array([0.1, 0.2]) ## 随机取权重和偏差 A2 = np.dot(Z1, W2) + B2 Z2 = sigmoid(A2) ## 2-输出层的信号传递 W3 = np.array([[0.1, 0.3], [0.2, 0.4]]) B3 = np.array([0.1, 0.2]) A3 = np.dot(Z2, W3) + B3 Y = identity_function(A3) ## 或者 Y = A3 ## 整理 def init_network(): ## 权重和偏置的初始化 network = {} network[\u0026#39;W1\u0026#39;] = np.array([[0.1, 0.3, 0.5], [0.2, 0.4, 0.6]]) network[\u0026#39;b1\u0026#39;] = np.array([0.1, 0.2, 0.3]) network[\u0026#39;W2\u0026#39;] = np.array([[0.1, 0.4], [0.2, 0.5], [0.3, 0.6]]) network[\u0026#39;b2\u0026#39;] = np.array([0.1, 0.2]) network[\u0026#39;W3\u0026#39;] = np.array([[0.1, 0.3], [0.2, 0.4]]) network[\u0026#39;b3\u0026#39;] = np.array([0.1, 0.2]) return network def forward(network, x): ## 输入到输出方向的传递处理 W1, W2, W3 = network[\u0026#39;W1\u0026#39;], network[\u0026#39;W2\u0026#39;], network[\u0026#39;W3\u0026#39;] b1, b2, b3 = network[\u0026#39;b1\u0026#39;], network[\u0026#39;b2\u0026#39;], network[\u0026#39;b3\u0026#39;] a1 = np.dot(x, W1) + b1 z1 = sigmoid(a1) a2 = np.dot(z1, W2) + b2 z2 = sigmoid(a2) a3 = np.dot(z2, W3) + b3 y = identity(a3) return y network = init_network() x = np.array([1.0, 0.5]) y = forward(network, x) print(y) ## [ 0.31682708 0.69627909] 神经网络的学习 损失函数 均方误差 $$ E = \\sum_k\\frac{1}{2}(y_k - t_k)^2 \\\\\\ \\\\ t_k:训练数据 \\ \\ y_k:输出 \\ \\ k:维数 $$\n交叉熵误差 $$ E = - \\sum_k t_k \\cdot ln(y_k) $$\nmini-batch学习 定义 从大量数据中随机选取小批量数据进行学习\n损失函数总和 (以交叉熵误差为例) $$ E = -\\frac{1}{N}\\sum_k \\sum_k t_{nk} \\ ln(y_{nk}) $$\n数学知识补充 数值微分 $$ \\frac{df(x)}{dx} = \\frac{f(x+h)-f(x-h)}{2h} \\\\\\ \\\\ 通过\\pmb{中心差分}实现更高的\\pmb{精度} $$\n","date":"2023-03-11T14:16:50Z","permalink":"https://downeyflyfan.com/p/deep-learning-basics/","title":"Deep Learning Basics"},{"content":"ARM 处理器 计算机结构 Bus 总线，在module之间传输数据 Port 端口，I/O的实体设备 Device Driver 驱动I/O设备的软件(硬件设备的软件界面) Interface 软件是Device Driver, 硬件是I/O + 外部设备 Memory CPU 指令集结构 Low-level Programming 名称 Advanced RISC Machine\nRISC = Reduced Instruction Set Computer\nCISC = Complex Instruction Set Computer\n比较 RISC CISC 指令多 指令少 更多编译器 更多微指令 更多寄存器 更少寄存器 ARM vs. MIPS ARM MIPS 16个寄存器 32个寄存器 更高效，支持64位数据线 ARM的指令集不一样 结论：ARM比MIPS更NB！ 嵌入式编程语言 常见语言 C, C++, Python, Java, MicroPython PWM - Pulse Width Modulation 原理 用数字源产生模拟信号 图像分析 $$ Duty \\ Cycle = \\frac{Active \\ time}{T} \\times 100% \\\\\\ \\\\ Average \\ Time = high \\cdot Duty \\ Cycle / 100% $$\n串行通信的方式 UART \u0026ndash; Universal Asynchronous Reception and Transmission 部件与原理 RX - Receiver\nTX - Transmitter\nProtocal - 总线异步通信系统协议\n工作原理 Start Bit $0$ $\\longrightarrow$ Stop Bit $1$\nData Length\n理想状态下，串行线为$1$ I2C - Inter-Integrated-Circuit 部件与原理 一主机，多从机\n只有主机可以初始化传输数据\n总线系统同步通信的协议\nSDA - Serial Data Line: 传输数据、地址、控制信号\nSCL - Serial Clock Line：用于同步\n工作原理 Data Length: 8-bit\nStart (Stop) Condition\n地址字节(8位) 前7位构成从机地址\n最后1位作为读/写指令\n0是写入(从机) 1是读取 确认位和非确认位(ACB/NACB) 每字节数据输入成功，接受者返回ACB;失败返回NACB\n在SCL为High时，保持SDA为low,以此产生ACB\n数据位 8位字节格式\n以地址字节开头，每个地址字节后必须跟着一个ACB/NACB\n必须在SCL保持high时才能发送和接收数据\nSCL保持低位时可以操作数据线\nSPI - Serial Peripheral Interface 部件与协议 总线系统的串行通信协议\n一主机，(一)多从机\n全双工\n主从层次结构\n结构 SS(CS): Slave Select (Chip Select),从机并行连接，处于low位时被激活 原理 stateDiagram 主机向从机发送时钟信号 --\u003e 将对应从机的SS/CS调成low 将对应从机的SS/CS调成low --\u003e MOSI发送数据 MOSI发送数据 --\u003e MISO接受从机发回的数据: 如果有必要的话 时钟参数 Bit CPOL(Clock Polarity) CPHA(Clock Phase) 0 Idle State = 0 In Phase 1 Idle State = 1 Out of Phase 对比 比较项目 UART I2C SPI Communication Type Serial Serial/Parallel (multi-master, one at a time) Serial (single-master) Number of Wires Required Minimum of two (TX and RX) Two wires (SDA and SCL) plus optional ground wire Minimum of three (MOSI, MISO, and CLK) plus optional slave select wire(s) Data Transfer Speed Typically up to several Mbps Typically up to several hundred Kbps Typically up to tens of Mbps Maximum Distance Supported Up to a few meters Up to several meters Up to several meters Simplicity Simple Simple Relatively Complex 工作方式 异步 Half-duplex Full-duplex ","date":"2023-03-10T14:43:37Z","permalink":"https://downeyflyfan.com/p/1.-arm-%E7%BC%96%E7%A8%8B/","title":"1. ARM 编程"},{"content":"基本逻辑系统表达 三种基本运算 AND $\\cdot$ OR $+$ NOR $'$ 对偶定律 反演定律 定义 等号两边同时对偶，等式依然成立\n对偶的法则 与变或，或变与\n真变假，假变真\n遵循原函数的运算先后顺序\n不属于单个变量上的取“非”符号应保留不变\n取反和对偶的区别 取反对一切取反\n对偶只对0,1取反，而不对变量取反\n例如\n$$ 已知Y=A’B’+C’DE’+0 \\\\\\ \\\\ 取反式为Y’= (A+B) \\cdot (C+D’+E)\\cdot 1 \\\\\\ \\\\ 对偶式为YD= (A’+B’)\\cdot (C’+D+E’)\\cdot 1 $$\n导出的逻辑运算 NAND(与非) $F = (A \\cdot B)'$ NOR $F = (A +B)'$ AND-OR INVERT $F =(A\\cdot B + C \\cdot D)'$ XOR $F = A \\textcircled + B = AB\u0026rsquo; + AB'$ NXOR $F = A\\textcircled \\cdot B = (A \\textcircled + B)\u0026rsquo; = A\u0026rsquo;B\u0026rsquo; + AB$ 逻辑符号 逻辑代数的公理和定理 二变量和三变量定理 满足交换律,结合律 分配律 (Distributivity) $$ A \\cdot (B +C ) = A\\cdot B + A \\cdot C \\\\\\ \\\\ A + B \\cdot C = (A+B) \\cdot (A +C) $$\n合并律(Combining) $$ A\\cdot B + A\\cdot B\u0026rsquo; =A \\\\\\ \\\\ (A+B)\\cdot (A+B\u0026rsquo;) = A $$\n吸收率(Covering) $$ A + A\\cdot B = A \\\\\\ \\\\ A\\cdot(A+B) = A \\\\\\ \\\\ A + A\u0026rsquo;\\cdot B = A+B \\\\\\ \\\\ A \\cdot (A\u0026rsquo; + B) =A\\cdot B $$\n一致性定律 (Consensus) $$ A\\cdot B + A\u0026rsquo; \\cdot C + B\\cdot C = A\\cdot B + A\u0026rsquo; \\cdot C $$\nn变量定理 广义同一律 $$ A + A + .. + A = A \\\\\\ \\\\ A\\cdot A \\cdot \\cdot \\cdot A = A $$\n德摩根定律 $$ (A_1\\cdot \\cdot \\cdot A_n)\u0026rsquo; =A_1\u0026rsquo; + \u0026hellip; + A_n\u0026rsquo; \\\\\\ \\\\ (A_1 + .. + A_n)\u0026rsquo; = A_1\u0026rsquo;\\cdot\\cdot\\cdot A_n\u0026rsquo; \\\\\\ \\\\ 用数学归纳法证明 $$\n德摩根定律得到的等效电路符号 最小项(Minterm)与最大项(Maxterm) 要求 必须包含每一个变量 性质 最小项取反是逆的最大项: $m_i\u0026rsquo; = M_i$\n$m_i^D = M_j, i + j = 2^n - 1$ (n为变量数)\n卡诺图 画法 圈要大 $\\gt$ 圈要少 $\\gt$ 圈要整齐\n圈的大小必须是$2^n$\n卡诺图是全闭合的\n先圈自主蕴涵项\n写法 圈0 圈1 和之积 积之和 0是真，1是假 1是真，0是假 奇异单元 包含奇异单元的主蕴涵项叫做自主蕴涵项 缺点 只适用于不超过6个变量的情况\n不一定能求得最化简的解\n常见卡诺图 例题 $$ Z_1 = AB + B\u0026rsquo;D\u0026rsquo; + A\u0026rsquo;CD,求 \\\\\\ \\\\ \\begin{aligned} \u0026amp;(1) NAND - NAND \\ \\ 与非-与非 \\\\ \u0026amp;(2) NOR - NOR \\ \\ 或非-或非 \\\\ \u0026amp;(3) AOI \\ \\ 与或非 \\\\\\ \\\\ 解: (1) Z_1 \u0026amp;= ((Z_1)\u0026rsquo;)\u0026rsquo; \\\\ \u0026amp;= [(AB)\u0026rsquo;(B\u0026rsquo;D\u0026rsquo;)\u0026rsquo;(A\u0026rsquo;CD)\u0026rsquo;]\u0026rsquo; \\\\ (2) 先求Z_1\u0026rsquo; \u0026amp;= A\u0026rsquo;C\u0026rsquo;D + AB\u0026rsquo;D + A\u0026rsquo;BD\u0026rsquo; \\\\ Z_1 \u0026amp;= \\Big[[(A\u0026rsquo;+B+D\u0026rsquo;)(A+C+D\u0026rsquo;)(A+B\u0026rsquo;+D)]\u0026rsquo;\\Big]\u0026rsquo; \\\\ \u0026amp;= [(A\u0026rsquo; +B + D)\u0026rsquo; +(A + C + D\u0026rsquo;)\u0026rsquo; + (A + B + D)\u0026rsquo;]\u0026rsquo; \\\\ (3)Z_1 \u0026amp;= (AB\u0026rsquo;D + A\u0026rsquo;C\u0026rsquo;D + A\u0026rsquo;BD\u0026rsquo;)' \\end{aligned} $$\n","date":"2023-03-09T11:25:47Z","permalink":"https://downeyflyfan.com/p/3.%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80/","title":"3.逻辑代数基础"},{"content":"Cover Letter——\u0026ldquo;Connect the dots\u0026rdquo; CV Just an outline of your Professional History.\n特点 Professional Introduction\nSales Pitch\nStructure —— A Possible One 开头 姓名 + 自己的居住地\n日期\n公司名称 + 公司地址\n正文 Where did I find the ad\nBrief Self-Introduction\nWhy do I write this\nWhy do I fit for this job\nHighlight my Exp. and skills\nA strong finish\nPersonal Profiles \u0026amp; Portfolio Development CV Career Objective 结构 是谁+会啥+想干啥\n要求 明确职业目标 seeking keen to wishing to 强调技能、经验 with \u0026hellip; 注重个人特点\n简洁\n不要人称 Video Profiles 内容 要求 调好相机视角\n保证声音清晰\n和谐的背景\n打好灯光\n不要有背稿痕迹,也不要临场发挥\n眼神\nGroup Interview 自我介绍 原则 专业化\n突出学历和工作经验\n突出成就\n注重逻辑\n优缺点 (Dos and Don\u0026rsquo;ts) Dos 您的技能和经验与职位相关的方面\n您对公司和职位的了解，包括其文化和价值观。\n您的热情和动机，以及您为什么对这个职位感兴趣。\n与过去的职位和项目相关的成功故事和经验。\n关于您的教育和培训的信息。\nDon\u0026rsquo;ts 不要提及个人信息，除非它们与职位相关\n避免涉及敏感话题\n不要谈论您过去的雇主或同事的负面评论\n避免过多地提及您的薪资期望。\n不要出现过于自大或傲慢，也不要表现出过于谦虚\nSTAR 技巧 Situation\nTask\nAction\nResults\n考试要求 纲要 TMAY $\\lt 1 \\ min$ Questions 用自己经历回答准备好的问题\n回答关于广告的问题\n问一个有关组织的问题 要求 使用STAR技巧\n只准带白纸，不准带手机\n","date":"2023-03-08T14:28:42Z","permalink":"https://downeyflyfan.com/p/cs4-68-portfolio-interview/","title":"CS4-6,8 Portfolio Interview"},{"content":"本征半导体 半导体 导电性在导体和绝缘体之间的一种物质\n分类 单元素半导体 锗(Ge)，硅(Si) 化合物半导体 镓-砷(Ga-As) Si的原子结构与结合 原子结构 结合 Si晶体结构 Si的导电性 绝对零度 所有原子都在化合键中\n导电性为0\n室温下—— 热电离 过程 部分电子吸收了足够的热能脱离核子束缚,产生空穴,变成自由电子\n邻近电子可能又被吸引到该空穴上(recombination)，产生导电性\n产生电子-空穴对\n两种载流子 电子\n空穴\n载流子浓度(半导体物理) $$ pn = n_i^2 \\\\\\ \\\\ p: 电导率 \\\\\\ \\\\ n: 杂质粒子浓度 \\\\\\ \\\\ n_i: 本征载流子浓度 \\\\\\ \\\\ 载流子浓度：n_i \\approx 1.5 \\times 10^{10}/cm^3 \\\\\\ \\\\ 原子密度：n = 5.22 \\times 10^{22}/cm^3 $$\n载流子可以移动，离子不能移动 结论 本征半导体呈电中性\n杂质半导体 掺杂质的原因 增强导电性\n分类 分类 n型半导体 p型半导体 最外层电子 5($Si^{-1}$) 3($Si^{+1}$) 原理 增加自由电子数量 增加空穴数量 实例 磷(P) 硼(B) n型半导体 掺P的Si半导体图示 自由电子占大头\n空穴是少数\n杂质正离子+自由电子\n载流子浓度 $$ \\pmb{施主}原子浓度N_D \\gg n_i \\\\\\ \\\\ \\pmb{n型半导体} \\ 自由电子的 \\ 载流子浓度n_n \\approx N_D (因为自由电子\\pmb{占大头})\\\\\\ \\\\ \\therefore p_n \\approx \\frac{n_i^2}{N_D} \\\\\\ $$\np型半导体 掺B的Si半导体图示 空穴占大头\n自由电子是少数\n杂质负离子+空穴\n$$ 受主原子浓度N_A \\gg n_i \\\\\\ \\\\ p_p \\approx N_A \\\\\\ \\\\ n_p \\approx \\frac{n_i^2}{N_A} $$\n半导体的电流流动 漂移电流 图示 定义 沿着电场方向移动的正负电荷\n扩散电流 定义 当载流子浓度不均匀时，载流子会从高密度向低密度移动\n图示 总电流 漂移电流与电场大小成正比\n扩散电流与载流子浓度梯度成正比\n开路终端的pn结 图示 解释 中间区域叫做耗尽区(dpletion area)\n两边的电压差形成电场$\\Longrightarrow$漂移电流$I_S$\n两边的载流子浓度差形成扩散电流$I_D$\n直到两边达到平衡$I_D = I_S$,耗尽区宽度不变，形成PN结\n外加电压的pn结 pn结操作的量化描述 forward bias 图示 解释 $$ V_F 与原电压方向相反 \\Longrightarrow 有效障碍减少 \\\\\\ \\\\ 扩散率增加,\\pmb{I_D \\uparrow ,I_S不变}\\\\\\ $$\n结果 $pn$结产生显著的电流$(I_D - I_S)$\n耗尽区变窄\nreverse bias 图示 解释 $$ 当V_R \\ge \\pmb V时，I_D = 0 \\\\\\ \\\\ I_S只受温度影响(\\pmb{为什么呢}) $$\n结果 $pn$结产生少量电流$(I_S)$\n耗尽区变宽\n开路 $$ I_D = I_S $$\n总结 施加电压只影响$I_D$,不影响$I_S$\n耗尽区的宽度会受到影响\npn结的I-V关系 公式 $$ I = I_S (e^{\\frac{v}{v_T}}-1) \\\\\\ \\\\ I_S: 饱和电流 \\\\\\ \\\\ V_T = \\frac{kT}{q}: 热电压 \\\\\\ \\\\ k: 波兹曼常数 \\ 1.38 \\times 10^{-23}(J/K) \\\\\\ \\\\ 当T_{室温} = 300K, V_T = 25mV $$\n分析 $$ 当|v| \\gg V_T\\\\\\ \\\\ Forward-Bias: i = I_Se^{\\frac{v}{v_T}} \\\\\\ \\\\ Reverse-Bias: i = - I_S $$\n反向击穿 齐纳击穿 当电压增加到化学键破裂和形成自由电子-空穴对的那一点\n雪崩击穿 当势垒获得足够的动能使得原子撞击足以击穿化学键时发生\npn结的电容效应 耗尽层电容(结电容) $$ C_j = \\frac{\\Delta Q}{\\Delta V} $$\n扩散电容 图示 $$ p区比n区杂质更多 \\Longrightarrow N_A \\gg N_D $$\n半导体的简化物理结构图 附录 载流子 载流子是指在材料中可以携带电荷并参与电流运输的自由电子和空穴\n电势垒(耗尽区) 在电势垒中，由于空穴和电子的浓度非常低，导致区域中几乎没有自由载流子，因此电势垒是一个电子和空穴不能通过的屏障，它阻碍了电子和空穴的扩散和漂移，形成了一种高电阻区域\n","date":"2023-03-08T10:14:43Z","permalink":"https://downeyflyfan.com/p/3.%E5%8D%8A%E5%AF%BC%E4%BD%93/","title":"3.半导体"},{"content":"Skills for Career Success transferrable skills Communication Problem-solving Leadership Time management Organizational skills Adaptability Self-motivation Interpersonal skills Teamwork Critical thinking 21th Century Skills Critical thinking Problem solving Collaboration Adaptability Communication Creativity Leadership Digital literacy Emotional intelligence Cultural awareness Graduate Attributes (GA) Definition Graduate Attributes are the skills, knowledge, values and attributes that students are expected to acquire during their studies.\nTypes Academic\nPersonal\nTransferable\nInternship and Work Placement Internship An internship is a form of experiential learning that provides students and recent graduates with the opportunity to gain hands-on work experience in a professional setting. Internships can be paid or unpaid, and can last anywhere from a few weeks to a year.\nWork Placement Work placement is a type of job experience that allows students to gain practical experience in a professional working environment.\nDifference WP is a part of the degree(course)\nFinish WP earns academic credits.\nJobs and CVs A curriculum vitae (CV) is a document that summarizes your academic and professional achievements, skills and experiences. A CV is different from a resume, which is typically shorter and more focused on specific skills and accomplishments relevant to a particular job.\nWhat to Include in a CV Contact information: Include your full name, address, phone number and email address. You can also add other relevant information such as your LinkedIn profile or personal website.\nProfile\nProfessional experience: Include the organization where you worked, the job title, the dates you were employed and a summary of your experience and achievements. Use bullet points to highlight your main responsibilities and accomplishments. Use action verbs and quantify your results whenever possible.\nAcademic history: List all schooling from high school through postdoctoral (if applicable). Include the title of the degree you earned, the year you graduated and the name of the school. You can also mention any honors, awards or scholarships you received.\nSkills: List any relevant skills that you have developed or demonstrated in your academic or professional career. These can include hard skills (such as languages, software or technical skills) or soft skills (such as communication, teamwork or leadership skills). You can also mention any certifications or licenses you have obtained.\nPublications: If you have published any papers, books, chapters or articles in academic journals or other outlets, list them here. Include the title of the publication, the name of the journal or publisher, the date of publication and any co-authors.\nAwards and honors: If you have received any recognition for your academic or professional work, such as prizes, grants, fellowships or scholarships, list them here. Include the name of the awarding institution or organization, the date of receipt and a brief description of what it was for.\nReferences: If requested by the employer or institution you are applying to, provide contact details of two or three people who can vouch for your qualifications and performance. These can be former professors, supervisors or colleagues who know you well. Include their name, title and affiliation, phone number and email address.\nHow to Format Your CV There is no one right way to format your CV, but there are some general guidelines to follow:\nUse a clear and professional font such as Arial, Times New Roman or Calibri. The font size should be between 10 and 12 points.\nUse consistent formatting throughout your CV, such as bolding or italicizing headings, using bullet points or numbers for lists, and aligning text to the left margin.\nUse white space to separate different sections and make your CV easy to read. Avoid using too many colors, graphics or fancy fonts that may distract from your content.\nKeep your CV concise and relevant. Ideally, it should be no longer than two pages, unless you have extensive publications or experience that require more space. Focus on highlighting your most important achievements and skills that match the position you are applying for.\nProofread your CV carefully before sending it.\nPower Verb Definition Verbs that convey a stronger sense of action and meaning when describing a behavior or action. These verbs often make sentences more *vivid, forceful, and expressive.\nFunction Using power verbs can enhance your ability to communicate, making your language more precise and specific.\nTypes Leadership skills Communication: articulated communicated conveyed delivered explained facilitated influenced negotiated persuaded Collaboration: aligned\ncollaborated\ncoordinated,\nengaged\nfostered\npartnered\nsupported\nunited\nInnovation conceived,\ncreated\ndesigned\ndeveloped\ndiscovered\nimplemented\ninnovated\nlaunched\npioneered\nStrategy analyzed\ndevised\nestablished\nformulated\nled\norchestrated\nplanne\nstrategized\nExecution achieved completed delivered executed managed oversaw produced 使用方法 Use specific and relevant power verbs Use varied and diverse power verbs. Avoid using the same verb over and over again Instead use varied and diverse verbs that show different aspects of your leadership skills For example instead of saying \u0026ldquo;I managed several projects\u0026rdquo; say \u0026ldquo;I managed several projects coordinated with cross-functional teams and delivered high-quality results on time\u0026rdquo;\nUse action-oriented and positive power verbs Avoid using passive or negative verbs like \u0026ldquo;was\u0026rdquo; \u0026ldquo;had\u0026rdquo; or \u0026ldquo;failed\u0026rdquo; Instead use action-oriented and positive verbs that show your initiative and achievements For example instead of saying \u0026ldquo;I was responsible for a budget\u0026rdquo; say \u0026ldquo;I administered a budget of $1 million and reduced costs by 15%\nSummary ","date":"2023-03-01T15:53:01Z","permalink":"https://downeyflyfan.com/p/cs2-3-%E6%AF%95%E4%B8%9A%E7%94%9F-%E7%AE%80%E5%8E%86-%E5%AE%9E%E4%B9%A0/","title":"CS2-3 毕业生 简历 实习"},{"content":"词语 连接词 开头 One of the \u0026hellip; 中间(顺承) In addition\nAdditionally\nFurthermore\nBesides\nWhat\u0026rsquo;s more\n\u0026hellip; is also \u0026hellip;\nMoreover\n中间(转折) but\nHowever\nstill\n中间(因果) The aim was to\nAs a result\nIn this way\nThus\nThereby\n引用 Research conducted by \u0026hellip; states/discovers that\nIt was found/discovered that\n就\u0026hellip;而言 In terms of\nWith regard to\nIn respect of\nWith reference to\nAs to\nIn relation to\nWhen it comes to\n结束语 Overall\nGenerally (Speaking)\nAll in all\n形容词 好与坏 好 advantage\nbenefits\npositive\nuseful characteristic of\n坏 disadvantage\nnegative\ndrawback\nflaw\n多 quite a lot\nA large quantity (number) of\nnumerous\ncountless\nA multitude of\n表示程度的 显著的 大幅度 sharp\nrapid\ndramatic\n稳步的 steady\ngradual\nconsistent\n轻微的 slight\nminimal\nmarginal\n重要 vital\nsignificant\nimportant\ncrucial\nessential\n几乎 大概 nearly\nalmost\nabout\naround\nroughly\napproximately\n原因与结果 原因 As\nResult from\nSince\nDue to\nOn account of\nOwing to\n结果 result in\nconsequently\nCredit to\nattribute to\nlead to\nbring about\n动词 发光 illuminate\nglow\nlighten\n摔 倒 掉 fall(down/into/to)\ndrop\n能够 could/can\nbe able to\nis capable to/of\n做得好 be proficient in\nbe adept at\nbe good at\n增和降 增(ICRGR) increase\nrise to\nreach to\ngrow\nclimb to\n降(fddddr) decrease\ndrop\ndecline\nfall\nreduce\ndownward trend\n损害 destory\ndamage\nhurt\nruin\nbreak\nspoil\n处理 deal with\nhandle\ncope with\n连词 通过 through\nvia\nby\n介词 随着(wtaaf) With the \u0026hellip;\nthanks to \u0026hellip;\nas \u0026hellip;\nalong with\nfollowing\n相反(ICIO) In contrast\nConversely\nIn comparison\nOn the other hand\n开头 结尾 开头 One of the (major advantage/benefit) is \u0026hellip; IELTS Task 1 线性图 词组 大变化 rapid sharp dramatic 平稳(SSCL) (stay) steady (remain) stable (keep) constant stand at this level 波动() fluctuate linear trend viriability 最高点 peak reach the highest point(level) largest 最低点 valley reach the lowest level(point) 句式 X fell sharply in XXXX.\nThere was a rapid growth in X in XXXX.\nThe year XXXX witnessed a dramatic decrease in X.\nA sharp fall in X took place in XXXX.\nX showed a downward trend in XXXX.\n关注点 开始点、结束点、相交点、大致趋势、转折点、极值 柱状图 描述 X in XXXX was three times more than that in YYYY. （这是“A是B的3倍”的意思，不是4倍！）\nIn XXXX, X produced three times more Y than in YYYY.\nThere was three times more Y emitted by X in XXXX than in YYYY.\n词组 关注 对于数据较多的柱状图,考虑转换成线性图 饼状图 描述 The majority of sales in Bob\u0026rsquo;s store come from DVDs, with exactly 60%.\nDVDs account for three fifths of the total sales.\nThe percentage of PC games sold is exactly 20%.\nFifteen percent of items sold in the store are CDs.\nThere is merely 5% of the total revenue generated by selling posters.\nFor the sales of posters, only 5% contributes to the turnover（营业额）.\n各类文章怎么写 Literature Review 定义 A published collection of written knowledge on or related to a particular subject.\n分类 Scholarly Articles\nBooks\nReports\n要求 Based on Existing Research\nGaps in the literature\nTheory\nWhere do you fit\nEvaluation Title Concise\nBrief\n首字母大写\n大多是名词\n技巧 Paraphrase 替换同义词\n改变词性\n改变句式\n主动$\\Longrightarrow$被动\n简化长句，增长短句\n添加(删除)细节\n解释关键词\nHedging Language 解释 委婉、含糊的词语\n实例 possibly Abstract 什么是Abstract Overview of a study based on information from other sections of the report/paper.\nmore specialised form of summary.\nEach new sentence introduces new information so that a concise summary is achieved without paragraphing.\nReader can read the abstract to obtain enough information about the study to decide if they want to read the complete paper/report.\nbe composed after the report/paper has been completed.\nThe abstract answers the question:\nMain Content\nInvestigation\nThe Finding\n怎么写 背景\n研究目的、范围\n简说研究方法\n研究成果\n简单总结\n为什么要写 说白了就是吸引眼球 分类 Descriptive Informative Cohesion \u0026amp; Coherence Cohesion Coherence ","date":"2023-02-27T21:53:43Z","permalink":"https://downeyflyfan.com/p/%E5%86%99%E4%BD%9C/","title":"写作"},{"content":"电子系统的运作图 信号与放大器 信号 概念 Process 将信号转换成人能理解的信息 Transducer 将信号从非电形式转换为电信号 如何表示信号源 戴维南电路 $$ V_o = \\frac{R_L}{R_L+R_S}V_S \\\\\\ \\\\ 显然，R_S越小，V_0越接近V_S $$\n诺顿电路 最好在$R_S$较高时 如何表示信号 用 波形——时间 图像表示\n用频谱表示\n模拟信号与数字信号 stateDiagram 模拟信号 --\u003e 取样 取样 --\u003e 量化 量化 --\u003e 数字信号 信号频谱 定义 根据 谐波部分强度 定义时域信号\n傅里叶级数 函数表示 $$ f(x) = \\frac{a_0}{2} + \\sum_{k=1}^\\infin \\big[ a_kcos(kx) + b_k sin(kx) \\big] \\\\\\ \\\\ a_k = \\frac{1}{\\pi} \\int_{-\\pi}^\\pi f(x) cos(kx)dx, k\\ge 0 \\\\\\ \\\\ b_k = \\frac{1}{\\pi}\\int_{-\\pi}^\\pi f(x)sin(kx)dx,k\\ge 1 $$\n表示方波函数 $$ 原式 \\\\\\ \\\\ f(t) = \\begin{cases} V \u0026amp; nT \\le t \\le (n+\\frac{1}{2})T \\\\ -V \u0026amp; (n-\\frac{1}{2})\\le t \\le nT \\end{cases} \\\\\\ \\\\ 傅里叶变换 \\\\\\ \\\\ f(t) = \\frac{4V}{\\pi}\\Big[ sin(\\omega_0 t) + \\frac{1}{3} sin(3\\omega_0t) + \\frac{1}{5} sin(5\\omega_0 t) + \u0026hellip; \\Big] $$\n定义 周期性的函数可以用傅里叶变换表示为离散型频谱\n放大器 特点 Linearity 确保信号放大过程中不被改变 减少Distortion 减少任何输出过程中的无意改变 放大器符号 Gain $$ Current \\ Gain = 20 lg(|A_i|)dB \\\\\\ \\\\ Voltage \\ Gain = 20 lg(|A_v|)dB \\\\\\ \\\\ A_p = \\frac{v_oi_o}{v_ii_i} = A_iA_v \\\\\\ \\\\ \\pmb{Power \\ Gain = 10 log(|A_p|)dB} $$\n放大器模型 模型 对电路的terminal bebavior的描述\n电压放大器 图示 普通电压放大器 $$ \\begin{align} v_o = \\frac{R_L}{R_L + R_o}A_{v0}v_i \\\\ v_i = \\frac{R_i}{R_i + R_s}v_s \\end{align} \\\\\\ \\\\ \\therefore v_0 = A_{v0}v_s \\frac{R_L}{R_L+R_o}\\frac{R_i}{R_i+ R_s}\\\\\\ \\\\ 显然，Gain不是常数，它受各类电阻大小的影响 \\\\\\ $$\n理想放大器 $$ R_L \\gg R_o \\\\\\ \\\\ R_i \\gg R_s \\\\\\ \\\\ \\therefore v_0 = A_{v0}v_s $$\n多个放大器的组合问题 第一个 高$R_i$,中等$R_o$ 最后一个 中$R_i$,高$R_o$ $aggregate$ 高$R_i$,低$R_o$ 其他放大器 增益系数 Voltage amplifier $$ A_{vo} = \\frac{v_0}{v_i}\\Big|_{i_0=0} \\\\\\ \\\\ R_i = \\infin \\ \\ R_o = 0 $$\nCurrent amplifier $$ A_{is} = \\frac{i_0}{i_i}\\Big|_{v_o=0} \\ \\ \\ i_s意为\\pmb{电流短路} \\\\\\ \\\\ R_i = 0 \\ \\ R_o = \\infin $$\ntransconductance amplifier $$ G_m = \\frac{i_0}{v_i}\\Big|_{v_o=0} \\\\\\ \\\\ R_i = \\infin \\ \\ R_o = \\infin $$\ntransresistance amplifier $$ R_m = \\frac{v_0}{i_i} \\Big|_{i_o=0} \\\\\\ \\\\ R_i = 0 \\ \\ R_o = 0 $$\n$R_i$和$R_o$取值的要点 尽可能准确地获得输入\n使输出尽可能大\n四个放大器模型之间的关系 $$ 根据以上公式可知 \\\\\\ \\\\ A_{v0} = A_{is} \\frac{R_o}{R_i}= G_mR_o = \\frac{R_m}{R_i} $$\n测量 输入电阻与输出电阻 输入电阻 $$ R_i = \\frac{v_i}{i_i} $$\n输出电阻 撤销电源($v_i = i_i =0$)\n对输出端施加电压$v_x$\n测量输出端电流$i_0$\n得到输出电阻\n$$ R_o = \\frac{v_x}{-i_0} $$\n总结 放大器增强了信号功率，因此需要直流电 经典差动放大器 电路 输出电压 $$ V_{out} = \\Big(\\frac{R_4}{R_3 + R_4}\\Big) \\times \\Big(\\frac{R_1 + R_2}{R_1}) \\times V_2 - \\frac{R_2}{R_1}V_1 \\\\\\ \\\\ 当R_1 = R_3, R_2 = R_4时 \\\\\\ \\\\ V_{out} = \\frac{R_2}{R_1}(V_2 - V_1) $$\n","date":"2023-02-27T09:35:27Z","permalink":"https://downeyflyfan.com/p/1-2.%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%94%BE%E5%A4%A7%E5%99%A8/","title":"1-2.信号与放大器"},{"content":"转移函数 定义 将电路方程从时域转为频域，获得一个关于$\\omega$的方程\n$$ H(\\omega) = \\frac{V_{out}}{V_{in}} $$\n相关概念 $$ |H(\\omega)|被称为magnitude \\ response，20lg(|H(\\omega)|)叫做\\pmb{Gain} \\\\\\ \\\\ \\angle H(\\omega)被称为phase \\ response $$\n理想滤波器 定义 通过特定频率的信号，阻碍不需要的频率的信号\n分类 LPF: Lowpass filter 低通滤波器\nHPF: Highpass filter 高通滤波器\nBPF: Bandpass filter 带通滤波器\nBSF: Bandstop filter 带阻滤波器\nGain 图示\nabcd分别对应1234 应用 RC电路-LPF 图示 推导 $$ H(\\omega) = \\frac{\\frac{1}{j\\omega C}}{\\frac{1}{j\\omega C}+R} = \\frac{\\frac{1}{RC}}{j\\omega + \\frac{1}{RC}} = \\frac{\\frac{1}{RC}}{\\sqrt{\\omega^2 + (\\frac{1}{RC}})^2}e^{-jtan^{-1}(\\omega RC)} \\\\\\ \\\\ \\therefore |H(\\omega)| = \\frac{\\frac{1}{RC}}{\\sqrt{\\omega^2 + (\\frac{1}{RC}})^2} \\\\\\ \\\\ \\angle H(\\omega) = tan^{-1}(\\omega RC) \\\\\\ \\\\ 当\\omega = \\frac{1}{RC}时，|H(\\omega)| = \\frac{1}{\\sqrt 2} ，Gain = 20lg(|H(\\omega)|) = -3.01(dB) \\\\\\ \\\\ 其中，\\omega_0 = \\frac{1}{RC}叫做3dB的截止频率 $$\n结论 RC电路是LPF（低通滤波器） CR电路-HPF 图示 推导 $$ 同理，H(\\omega) = \\frac{\\omega}{\\sqrt{\\omega^2 + (\\frac{1}{RC})^2}} e^{j\\Big[\\frac{\\pi}{2} - tan^{-1}(\\omega RC) \\Big]} \\\\\\ \\\\ |H(\\omega)| = \\frac{\\omega}{\\sqrt{\\omega^2 + (\\frac{1}{RC})^2}} \\\\\\ \\\\ \\angle H(\\omega) =\\frac{\\pi}{2} - tan^{-1}(\\omega RC) \\\\\\ \\\\ 当\\omega_0 = \\frac{1}{RC}时，可以得出与RC电路相同的计算结果 $$\n串联RLC-LPF 图示 推导 $$ H(\\omega) = \\frac{\\frac{1}{LC}}{-\\omega^2 + \\frac{R}{L}j\\omega + \\frac{1}{LC}} \\\\\\ \\\\ |H(\\omega)| = \\frac{\\omega^2}{\\sqrt{\\Big(\\frac{1}{LC} - \\omega^2\\Big)^2 } + \\Big( \\frac{R}{L}\\omega\\Big)^2} \\\\\\ \\\\ \\angle H(\\omega) = \\pi - tan^{-1}\\Big(\\frac{\\frac{R}L{\\omega}}{\\frac{1}{LC}- \\omega^2} \\Big) \\\\\\ \\\\ 转角频率 \\omega_0 = \\frac{1}{\\sqrt{LC}} $$\n串联RCL-HPF 电路 相量 串联LCR-BPF 图示 推导 $$ H(\\omega) = \\frac{\\frac{R}{L}j\\omega}{-\\omega^2 + \\frac{R}{L}j\\omega + \\frac{1}{LC}} \\\\\\ \\\\ |H(\\omega)| = \\frac{\\frac{R}{L}\\omega}{\\sqrt{\\Big(\\frac{1}{LC} - \\omega^2\\Big)^2 + \\Big( \\frac{R}{L}\\omega\\Big)^2}} \\\\\\ \\\\ \\angle H(\\omega) = \\frac{\\pi}{2} - tan^{-1}\\Big(\\frac{\\frac{R}L{\\omega}}{\\frac{1}{LC}- \\omega^2} \\Big) \\\\\\ \\\\ 转角频率 \\omega_0 = \\frac{1}{\\sqrt{LC}} \\\\\\ \\\\ 下截止频率 \\ \\omega_1 = -\\frac{R}{2L} + \\frac{R}{2L} \\sqrt{1 + \\frac{4L}{R^2C}} \\\\\\ \\\\ 上截止频率 \\ \\omega_2 = \\frac{R}{2L} + \\frac{R}{2L} \\sqrt{1 + \\frac{4L}{R^2C}} \\\\\\ \\\\ 3dB带宽 \\omega_{3dB} =\\omega_2 - \\omega_1 =\\frac{R}{L} $$\n串联RCL-BSF 电路 相量 $$ |H(\\omega)| = \\frac{|V_o|}{|V_{in}|} = |\\frac{sL+\\frac{1}{sC}}{sL + \\frac{1}{sC}+R}| \\overset{除以L,乘以s}{=} \\\\\\ \\\\ \\Big|\\frac{\\frac{1}{LC}-\\omega^2}{\\frac{1}{LC}-\\omega^2 + j\\frac{\\omega R}{L}}\\Big| = \\\\\\ \\\\ \\frac{\\frac{1}{LC}-\\omega^2}{\\sqrt{(\\frac{1}{LC}-\\omega^2)^2 + (\\frac{\\omega R}{L})^2 }} \\\\\\ \\\\ \\angle H(\\omega) = tan^{-1}\\Big( \\frac{\\frac{\\omega R}{L}}{\\frac{1}{LC}-\\omega^2} \\Big) $$\n带宽 与LCR电路相同 并联RLC-LPF 电路 相量 $$\n$$\n并联RLC-HPF 电路 相量 $$\n$$\n并联RLC-BPF 电路 相量 $$\n$$\n并联RLC-BSF 并联RLC的带通和带阻滤波器的带宽都是$\\frac{1}{RC}$ 附录 转角频率($\\omega_0$) 解方程$|H(\\omega_0)|= 1$得到\n截止频率 HPF和LPF的频率过滤临界点\n通过解方程$|H(\\omega)| = \\frac{1}{\\sqrt 2}$得到 判断滤波器类型 判断$\\omega$的变化与输出阻抗占总阻抗的比例 的关系 当\\omega与该比例正（负）相关时，为HPF(LPF) 当输出端同时有电容和电感时,一定为带通或带阻 ","date":"2023-02-21T16:22:32Z","permalink":"https://downeyflyfan.com/p/%E6%BB%A4%E6%B3%A2%E5%99%A8/","title":"滤波器"},{"content":"实验背景 前提 光可以被偏振这一事实说明了光是横波，而不是纵波(因为纵波无法被偏振)\n光的能量是通过光子束传播的\n光在传播过程中，一般而言，电向量、磁向量与传播方向三者互相垂直\n偏振介绍 定义 光在传播过程中，电磁波振动方向不变，而电场振动方向在特定平面内振动的现象\n偏振光的类型(type) $Partially \\ polarized$ 光照到透明介质上，部分反射，部分折射,其中反射光被偏振，折射角被称为Brewster\u0026rsquo;s angle，在下图中有以下关系 $$ \\pmb{折射率 n = tan i} \\\\\\ \\\\ \\pmb{反射光与折射光垂直} $$\n$Totally \\ polarized$ 偏振光的状态(States) $linear$ 电场矢量在特定平面内振动，而垂直方向上不发生振动，这个垂直方向被称为偏振方向，一旦确定就不能改变\n线偏振光可以通过偏振片实现\n$circular$ 电场矢量大小不变，但始终绕光的传播方向旋转 $elliptical$ 被视为线偏振光与圆偏振光的混合 Polarizer 举例 Polaroid sunglasses\n它可以偏振阳光反射产生的眩光(glare from reflected sunlight) 对光偏振的方式 使用偏振片\n让光照射透明物体\n让光穿过各向异性的材料\n实验 实验目的 使用起偏器获得线性偏振光\n使用起偏器判断偏振的类型和状态\n偏振器可以使自然光变为线偏振光\n检偏器可以鉴别线偏振光、自然光和部分偏振光\n了解half-wave plate和quarter-wave plate的功能\n起偏器和检偏器在本质上是一样的\n了解波板的功能 实验器材 Diode laser: 二极管激光器\nDetector (to measure the intensity of light):侦测器\nTwo polaroid sheets:两块偏振片\nmicroammeter (to display the intensity of light): 微安计\nQuarter-wave and half-wave plates: 四分之一波板与半波板\n沿着fast axis的光直接穿过波板，而垂直方向上的光会与它产生$\\frac{\\lambda}{2}$或$\\frac{\\lambda}{4}$的相位差\n这就是双折射现象\n实验图示 Law of Malus $$ I = I_0 cos^2\\theta \\\\\\ \\\\ \\theta表示图中transmission \\ axis的夹角 $$\n实验过程 实验1: 证明Malus定律 实验2：证明半波板的功能 实验3：证明四分之一波板的功能 实验结论 1.\n数据和问题 问题 偏振现象如何证明光是横波 If we stack two polarizing filters together and make their polarization directions perpendicular to each other, then unpolarized natural light cannot pass through. Only when the polarization direction of the second polarizing filter is the same as that of the first one, can the polarized light pass through.\nThis demonstrates that light must be a transverse wave, because only transverse waves can be filtered to have a single direction of polarized light.\n区分自然光和偏振光 区分自然光和线偏振光\nPlace a polarizer in front of the light source and gradually rotate the direction of the polarizer. If the intensity of light remains unchanged, the light is linearly polarized because only linearly polarized light has polarization in a specific direction.\nIf the intensity of light changes as the polarizer rotates, the light is elliptically polarized or circularly polarized because they can be produced by the superposition of two orthogonally polarized linearly polarized lights.\nNatural light can be seen as the superposition of linearly polarized light in all possible polarization directions, so the intensity of light passing through the polarizer will change as the polarizer rotates.\n区分自然光和圆偏振光\nPassing natural light and circularly polarized light through a polarizer, such as a polarizing mirror or polarizing filter, reveals that the intensity of natural light is reduced by half after passing through the polarizer, while the intensity of circularly polarized light remains unchanged. ","date":"2023-02-20T09:40:14Z","permalink":"https://downeyflyfan.com/p/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E8%80%83%E8%AF%95/","title":"大物实验考试"},{"content":"对象 使用对象键值对 1 2 3 key: child-key1: value1 child-key2: value2 当对象较复杂，比如为数组时\n问号加一个空格代表一个复杂的 key\n一个冒号加一个空格代表一个 value\n1 2 3 4 5 6 ? - complexkey1 - complexkey2 : - complexvalue1 - complexvalue2 数组 以-开头的行表示一个数组 1 2 - A - B 支持多维数组 1 2 3 4 5 6 7 8 9 # 行内表示 key: [value1,value2] # 多行表示 - - A - B - C 很多元素$\\rightarrow$数组元素$\\rightarrow$数组 例子 1 2 3 4 5 6 7 8 9 10 11 companies: - id: 1 name: company1 price: 200W - id: 2 name: company2 price: 500W # 或者 companies: [{id: 1,name: company1,price: 200W},{id: 2,name: company2,price: 500W}] 复合结构 例 1 2 3 4 5 6 7 8 9 languages: - Ruby - Perl - Python websites: YAML: yaml.org Ruby: ruby-lang.org Python: python.org Perl: use.perl.org 纯量 定义 最基本、不可再分的值\n分类 字符串 1 2 3 4 5 string: - 哈哈 - \u0026#39;Egnlish word\u0026#39; - newline newline2 #字符串可以被拆成多行，每行会被转换成一个空格 布尔值 1 2 3 boolean: - True # 或者true - False # 或者false 整数和浮点数 1 2 3 4 5 6 float: - 3.14 - 8.85E-12 # 可以使用科学记数法 int: - 123 - 0b1010_0111_0100_1010_1110 # 二进制表示 Null 1 2 3 null: nodeName: \u0026#39;node\u0026#39; parent: ~ # ~表示null 日期 1 2 date: - 2023-2-11 # 必须是这种格式 时间 1 2023-2-11T22:07:02+8:00 # 用+代表时区 引用(暂定) ","date":"2023-02-12T05:51:51+08:00","permalink":"https://downeyflyfan.com/p/yaml/","title":"YAML"},{"content":"探究氢原子中的量子数(Quantum Number) 主量子数(Principal) $$ E_n = \\frac{-13.6eV(E_1)}{n^2} \\\\\\ \\\\ 此处的n即为主量子数 $$\n轨道量子数(Orbital) 轨道量子数$l$与电子的轨道角动量的大小有关系 $$ L = \\sqrt{l(l+1)}\\hbar \\\\\\ \\\\ \\pmb{0 \\le l \\le (n-1)} $$\n磁量子数(magnetic) 磁量子数表示轨道角动量的方向 $$ L_z = m_l \\hbar \\\\\\ \\\\ -l \\le m_l \\le l $$\n自旋量子数(spin) 自旋量子数表示自旋的方向 $$ m_s = +\\frac{1}{2} \\Leftrightarrow 上旋(Spin \\ Up) \\\\\\ \\\\ m_s = -\\frac{1}{2} \\Leftrightarrow 下旋(Spin \\ Down) \\\\\\ \\\\ 电子的自旋角动量S = \\sqrt{s(s+1)}\\hbar = \\frac{\\sqrt{3}}{2}\\hbar $$\n总结 在氢原子中，只有$n$影响能量 在其他原子中，$n$和$l$对电子能量的影响最大，$m_l$和$m_s$影响甚微 电子的跃迁 Selection Rule 电子跃迁的轨道角动量变化只可能是$\\Delta l = \\pm 1$之间,\n其他范围(包括$l=0$)叫做forbidden transition\n氢原子波方程 基态氢原子薛定谔方程的解 $$ \\psi_{100} = \\frac{1}{\\sqrt{\\pi r_0^3}}e^{-\\frac{r}{r_0}} \\\\\\ \\\\ 其中, r_0 = \\frac{h^2 \\varepsilon_0}{\\pi me^2} = 0.0529(nm),为\\pmb{波尔半径} \\\\\\ \\\\ \\psi的下标分表表示n,l,m_l $$\n氢原子中电子的概率分布 基态 $$ 假设P_r 是电子的半径分布概率，则 \\\\\\ \\\\ P_rdr 可以看作电子分布在半径r处的概率 \\\\\\ \\\\ 对于一个球壳来说，其体积 \\\\\\ \\\\ dV = 4\\pi r^2 dr \\Longrightarrow |\\psi|^2 dV = |\\psi|^2 4\\pi r^2 dr \\\\\\ \\\\ \\therefore P_r dr = |\\psi|^2 dV \\Longrightarrow P_r = 4\\pi r^2 |\\psi|^2 \\\\\\ \\\\ 对于基态氢原子，P_r = 4\\frac{r^2}{r_0^3}e^{-\\frac{2r}{r_0}} $$\n非基态的一些解 $$ \\psi_{200} = \\frac{1}{\\sqrt{32\\pi r_0^3}} (2-\\frac{r}{r_0})e^{-\\frac{r}{2r_0}} \\\\\\ \\\\ P_{r200} = \\frac{1}{8}\\frac{r^2}{r_0^3}(2-\\frac{r}{r_0})^2 e^{-\\frac{r}{r_0}} \\\\\\ \\\\ \\psi_{210} = \\frac{Z}{\\sqrt{32\\pi r_0^5}}e^{-r/2r_0} \\\\\\ \\\\ \\psi_{211} = \\frac{x + iy}{\\sqrt{64 \\pi r_0^5}}e^{-r/2r_0} \\\\\\ \\\\ \\psi_{21-1} =\\frac{x - iy}{\\sqrt{64 \\pi r_0^5}}e^{-r/2r_0} $$\n元素周期表 泡利不相容原理 定义 每个轨道只能容纳两个电子，且自旋相反配对\n即每个电子的四个量子数不可能完全相同 能量最低原理 原子的基态是能量最低的状态\n洪特规则 电子分布到能量能级相同的轨道时，优先以自旋相同的方式分别占据不同的轨道\n元素周期表 $Subshell$与$l$的关系 元素周期表 X射线和原子数 产生原因 由高能电子撞击X射线管道中的特定金属产生\nX-射线 光强 —— 波长 关系图 随着撞击电子的能量(即加速撞击电子的电压)增高，$\\lambda_0$减小\n$K_{\\alpha}$和$K_{\\beta}$两个峰体现了被撞击材料的特性,不因入射电子能量的改变而改变\n关系 $$ 电子从n=2向n=1跃迁的过程中产生了K_{\\alpha}\\\\\\ \\\\ \\lambda_{min} \\propto \\frac{1}{(Z-1)^2} \\\\\\ \\\\ \\lambda_{min}：最短的X射线 $$\n电子与光子撞击过程中的能量转换 $$ E = hf_0 =eV \\\\\\ \\\\ \\therefore \\lambda_0 =\\frac{hc}{eV} $$\n磁偶极矩 总角动量* 磁偶极矩 $$ \\mu = IA = \\frac{1}{2}evr \\\\\\ \\\\ 又L = mvr \\\\\\ \\\\ \\therefore \\mu = \\frac{1}{2}\\frac{e}{m}L \\\\\\ \\\\ 由于电流中是电子(附点),所以磁偶极矩与角动量反向 \\\\\\ \\\\ \\begin{align} \\therefore \\pmb{\\mu} = -\\frac{1}{2}\\frac{e}{m}\\pmb{L} \\\\ U =- \\pmb{\\mu \\cdot B} \\end{align} \\\\ 假设B都在z方向上 \\\\\\ \\begin{align} 有 U = -\\mu_z \\cdot B_z \\\\ 又L_z = m_l\\hbar \\end{align} \\\\\\ \\\\ 可以得到\\mu = - \\frac{e\\hbar}{2m}m_l \\\\\\ \\\\ 其中\\mu_B = \\frac{e\\hbar}{2m} = 9.27 \\times 10^{-24}(J/T)，被称作\\pmb{玻尔磁子} \\\\\\ \\\\ 有 \\mu = - \\mu_B m_l $$\n","date":"2023-02-10T22:28:52+08:00","permalink":"https://downeyflyfan.com/p/%E5%8E%9F%E5%AD%90%E7%9A%84%E9%87%8F%E5%AD%90%E5%8A%9B%E5%AD%A6/","title":"原子的量子力学"},{"content":"二进制的数字表达 进制 $$ \\begin{aligned} \u0026amp;r(r进制数) = (a_{n-1}a_{n-2}\u0026hellip;a_0a_1\u0026hellip;a_{-m})r \\\\ \u0026amp;大小 \\ R = a{n-1}\\times r^{n-1} + \u0026hellip; + a_{-m}\\times r^{-m} = \\sum_{i=-m}^{n-1} a_i\\times r^i \\end{aligned} $$\n最左边的叫高阶位(High-order Bit)或最高有效位(Most Significant Bit)，对应的权最大\n最右边的叫低阶位(Low-order Bit)或最低有效位(Least Significant Bit)，对应的权最小\n重要概念 数码(Digit) 构成数的数字 数位(Digit Pisition)\n基数(Base/Radix)\n决定数码有多少类 权(Weight) 二进制数的转换 二进制与十进制 十进制 $\\rightarrow$ 二进制 整数:用十进制数除以2，反写得出二进制数 小数 将十进制小数部分乘以2，得到乘积 取乘积的整数部分作为二进制结果的一位，将乘积的小数部分继续乘以2 重复上步，直到乘积的小数部分为0，或者已经得到了所需位数的二进制结果 二进制到十进制 按权按位展开 二进制到八进制和十六进制 关系 转换技巧 整数在前面补零\n小数在后面补零\n注意 十六进制数码被称为半字节(Nibble)\n一串数码又称为一个字(Word)\n小数点前的数字都是整数，后的都是小数，适用于任何进制\n二进制数的计算 加减法 加法:逢2进1\n减法: $0-1$,向高位借2\nstateDiagram 1 --\u003e0:被借 0 --\u003e1:被借 乘除法 乘法 $n$位数和$m$位数相乘，得到$(n+m)$位数 除法 跟十进制差不多 原码 反码 补码 符号位 几种码 分类 正数 负数 原码 ~ 绝对值的原码，再补个符号位1 反码 与原码相同 取反 补码 与原码相同 原码取反+1 符号位 0 1 补齐 补0 补1 0的补码是0，-128的补码和128的补码相同(8进制) 其他的码 一些码 格雷码 示意图 二进制码与格雷码 stateDiagram 二进制码 --\u003e 格雷码:相邻位XOR,最后一位保留 格雷码 --\u003e 二进制码:相邻位XOR,最后一位保留 要求 相邻两个区域只能有$\\pmb 1$个位差 ASCII码 ","date":"2023-02-10T20:05:54+08:00","permalink":"https://downeyflyfan.com/p/2.%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BF%A1%E6%81%AF/","title":"2.二进制信息"},{"content":"一、电子系统 1.1 图示 1.2 模拟信号 定义 模拟真实物理量变化的信号形式，例: 麦克风记录的语音信号，图像各点的亮度变化\n特点 连续信号，在任何时间都没有确定的值 以麦克风为例 1.3 数字信号 定义 离散信号(Discrete Signal),在任何时间都有确定的值\n特点 采样密度越高，越接近于模拟信号 脉冲信号 1.4 数电和模电 如何保存信号 stateDiagram 模电 --\u003e 数电:将原始(模拟)信号转化为数字电路(ADC) 数电 --\u003e 模电:恢复模拟信号(DAC) DAC后的模电信号不是原始信号的精确复制 数字电路的优点 数字信号更稳定，不易失真 (High stability,High reliability) 长期存储，无限复制\n易于设计(Easy to Desgin)\n可编程性 ( P rogramming )\n可实时控制 (Real-time Control)\n快速(Fast Speed)\n经济性(Economic)\n二、实现数字系统的方法 2.1 编程微处理器 (A programmed microprocessor) 2.2 固定的数字电路 (Fixed Digital Circuit) 在不同的步骤中，微处理器和数字电路的效率不同，需要平衡两者的效率\n三、数字系统设计 3.1 组成 逻辑门(Gates) 触发器(Flip-Flops) 计数器(Counter) 寄存器(Register) 逻辑器件(Logic Devices) 3.2 层次结构(由低到高) 元件级(第1级) 如电阻、电容、二极管、传感器、晶体管\n它们组成功能块(Funciton Block),被看作更大功能单元的组成单位\n第2 - 4 级 $1IC \\ (SSI \\ Small-scale Integration)$\n$2IC \\ (MSI \\ LSI \\ Medium\u0026hellip; \\ Large\u0026hellip;)$\n$3IC \\ (VLSI \\ Very \\ Large \u0026hellip;)$\n专用（半定制）IC (Application-Specific IC,$ASIC$)\n它通过制造商提供的标准构建实现结构化\n第5级 3.3 为降低成本生产的单元 3.3.1 标准单元(Standard Cells)库 MSI Decoder Register Counter LSI Memories Programmable Logic Array(PLA) 可编程逻辑阵列\nMicroprocessors\n3.3.2 门阵列(Gate Array) 内部结构尚未指定 由设计者指定门类型(Gate Type)和连接(Interconnection) 3.3.3 两者的区别和联系 门阵列和宏单元不能像标准单元设计那样进行高度优化\n3.4 PLD PLD(Programmable Logic Device)\nCPLD (Complex Programmable Logic Device)\nFPGA (Field Programmable Gates Array)\n3.5 数字系统设计流程 ","date":"2023-02-07T20:06:02+08:00","permalink":"https://downeyflyfan.com/p/1.%E5%BC%95%E8%AE%BA/","title":"1.引论"},{"content":"波运动的特点 波源来自振动\n振幅 $A$\n波峰的高度 波长 $\\lambda$ 波峰之间的距离 周期$T$\n频率$f = \\frac{1}{T}$\n单位时间内经过某给定点的波峰(周期)数量 波的速度$v$ 波峰移动的速度 $$ v = \\lambda f $$\n波的类型 横波 定义 振动方向与运动方向垂直的波\n横波的移动速度 决定因素 介质 在细绳上横波的速度 图示 推导 $$ SHM \\Longrightarrow F \\propto x \\\\\\ \\\\ \\therefore \\frac{F_y}{F_T} = \\frac{v\u0026rsquo;t}{vt} = \\frac{v\u0026rsquo;}{v} \\\\\\ \\\\ F_y t = \\Delta p = \\Delta m\\cdot v \\\\\\ \\\\ F_T t \\cdot \\frac{v\u0026rsquo;}{v} = F_y t = (\\mu vt)v\u0026rsquo; \\\\\\ \\\\ \\therefore \\pmb{v = \\sqrt{\\frac{F_T}{\\mu}}} $$\n纵波 定义 振动方向与运动方向相同的波\n纵波的特点 在纵波中，压缩和扩张对应着横波中的波峰和波谷\n常见的纵波\n声波 纵波速度 $$ v = \\sqrt{\\frac{elastic \\ force \\ factor}{inertia \\ factor}} \\\\\\ \\\\ 在长绳中， v= \\sqrt{\\frac{E}{\\rho}},弹性系数 \\\\\\ \\\\ 在流体中，v = \\sqrt{\\frac{B}{\\rho}},体积系数 $$\n其他的波 表面波 定义 在两种物质的交界处的波\n实例 水面波\n地震的表面波\n波的能量 波的运动方程 运动方程 $$ y(x,t) = Acos(\\omega t \\pm \\frac{\\omega}{v}x + \\varphi) \\\\\\ \\\\ \\omega = \\frac{2\\pi}{T} \\\\\\ \\\\ Wave \\ number \\ k = \\frac{2\\pi}{\\lambda} = \\frac{\\omega}{v} \\\\\\ \\\\ 表示\\pmb{相位随距离的变化率}或\\pmb{2\\pi 长度内的全波数目} \\\\\\ $$\n波的能量与强度 波的运动是能量的传播 $$ 对于 SHM \\\\\\ \\\\ dm = \\rho S dx \\\\\\ \\\\ dE = \\frac{1}{2} dm \\omega^2 A^2 \\\\\\ \\\\ \\therefore dE = \\frac{1}{2}\\rho S dx \\omega^2A^2 \\\\\\ \\\\ \\overline{P} = \\frac{dE}{dt} = \\frac{1}{2} \\rho S v \\omega^2 A^2 \\\\\\ \\\\ I = \\frac{\\overline{P}}{S} = \\frac{1}{2}\\rho v\\omega^2 A^2 $$\n叠加原理 反射和传播 干涉 光电干涉结果 幅度与光强 $$ 幅度: A = \\sqrt{A_1^2 + A_2^2 +2A_1A_2cos\\Delta \\varphi} \\\\\\ \\\\ \\Delta \\varphi = k\\Delta r = \\frac{2\\pi}{\\lambda} \\Delta r \\\\\\ \\\\ I = I_1 + I_2 + 2\\sqrt{I_1I_2}cos{\\Delta \\varphi} $$\n亮与暗 $$ \\Delta \\varphi = 2m\\pi \\Longrightarrow \\Delta r = m \\lambda \\Longrightarrow I_{max} \\\\\\ \\\\ \\Delta \\varphi = (2m + 1) \\pi \\Longrightarrow \\Delta r = (m + \\frac{1}{2}) \\lambda \\Longrightarrow I_{min} $$\n干涉的类型 双缝干涉 条件 单色光照到两个缝上 杨氏双缝干涉实验 图示 公式 $$ \\Delta r = r_2 - r_1 \\approx dsin\\theta \\\\\\ \\\\ 亮纹: dsin\\theta = m \\lambda \\\\\\ \\\\ 暗纹：dsin\\theta = (m+\\frac{1}{2}) \\lambda \\\\\\ \\\\ 又sin\\theta \\approx tan\\theta = \\frac{x}{L} \\\\\\ \\\\ \\therefore 亮纹:x = \\frac{L}{d} \\cdot m\\lambda \\\\\\ \\\\ 暗纹：x = \\frac{L}{d}(m+\\frac{1}{2}) \\lambda \\\\\\ \\\\ 当\\theta \\rightarrow 0 时: \\theta \\approx sin\\theta \\\\\\ \\\\ \\therefore \\Delta \\theta_{max} = \\frac{\\lambda}{d} $$\nThin films —— 反射与干涉 条件:光从两个表面反射 光程差(OPD) $$ \\delta = n_1r_1 - n_2r_2 \\\\\\ \\\\ \\Delta = 2n_2 t(+\\frac{\\lambda}{2}) = \\begin{cases} m\\lambda \u0026amp; bright \\\\ (m+\\frac{1}{2})\\lambda \u0026amp; dark \\end{cases} $$\n驻波 共鸣 衍射与偏振 单缝衍射 图示\n光程差\n$$ \\delta = \\overline{BP} - \\overline{AP} = \\overline{BC} = asin\\theta $$\n半波法 将缝以半波长等分\n两个光程差为$\\frac{\\lambda}{2}$的区域会抵消\n这样我们有以下结论\n$$ 亮:asin\\theta = m\\lambda \\\\\\ \\\\ 暗：asin\\theta =(m+\\frac{1}{2})\\lambda $$\n","date":"2023-02-01T19:09:12+08:00","permalink":"https://downeyflyfan.com/p/%E6%B3%A2%E7%9A%84%E8%BF%90%E5%8A%A8/","title":"波的运动"},{"content":"海森堡不确定性原理 1.1 内容 一个物体的动量和它的位置不可能被同时准确地观测到\n1.2 解释 原理 需要用光子撞击电子才能知道它的位置,而撞击会增加电子的动量，改变其位置 根据$p = \\frac{h}{\\lambda}$ 波长越大，动量越大，动量测不准，位置也会改变\n波长越小，动量太小，仪器没法精确测量，位置不准\n1.3 公式 动量和位置 $$ 对于波长为\\lambda的光子 \\\\\\ \\\\ \\Delta x \\approx \\lambda \\\\\\ \\\\ \\Delta p \\approx \\frac{h}{\\lambda} \\\\\\ \\\\ \\therefore (\\Delta x)(\\Delta p) \\approx h \\\\\\ \\\\ 根据海森堡的精确计算(这课本真省事) \\\\\\ \\\\ (\\Delta x)(\\Delta p) \\ge \\frac{h}{2\\pi} $$\n能量与时间 $$ \\Delta E = hf = \\frac{hc}{\\lambda} \\\\\\ \\\\ \\Delta t \\approx \\frac{\\lambda}{c} \\\\\\ \\\\ (\\Delta E )(\\Delta t) = h \\\\\\ \\\\ (\\Delta E )(\\Delta t) \\ge \\frac{h}{2\\pi} \\\\\\ \\\\ 科学家们给这个常用的量换了个名字: \\ \\hbar = \\frac{h}{2\\pi} $$\n一维薛定谔方程时间无关形式 2.1 不考虑时间 $$ 假设\\psi(x) = Asinkx + Bcoskx \\\\\\ \\\\ k = \\frac{2\\pi}{\\lambda} = \\frac{2\\pi p}{h} = \\frac{p}{\\hbar} (1)\\\\\\ \\\\ \\frac{d^2\\psi(x)}{dx^2} = -k^2 \\varphi(x) (2)\\\\\\ \\\\ 根据能量守恒 \\\\\\ \\\\ K + U = E \\ \\ \\ \\ 动能 + 势能 = 总能量 \\\\\\ \\\\ \\frac{p^2}{2m} + U = E (3)\\\\\\ \\\\ 根据(1)式 ， p = k\\hbar \\\\\\ \\\\ \\therefore \\frac{k^2\\hbar^2}{2m} + U =E (4)\\\\\\ \\\\ 结合(2)和(3)式，-\\frac{\\hbar^2}{2m} \\frac{d^2\\psi(x)}{dx^2} = \\frac{\\hbar^2k^2}{2m}\\varphi(x) \\\\\\ \\\\ 对(4)式两端乘以\\psi(x),得到\\pmb{一维薛定谔方程的无时间形式} \\\\\\ \\\\ -\\frac{\\hbar^2}{2m}\\frac{d^2\\psi(x)}{dx^2} + U(x) \\cdot \\varphi(x) = E\\cdot \\varphi(x) $$\n2.2 三维形式 将上式的$(x)$改为$(x,y,z)$即可\n2.3 一维形式的正交化条件 $$ \\int_{三维} |\\psi|^2dV = \\int_{一维} |\\varphi|^2dx = 1 $$\n薛定谔方程的时间有关形式* 公式 $$ -\\frac{\\hbar^2}{2m}\\frac{\\partial^2 \\psi(x,t)}{\\partial x^2} + U(x) \\cdot \\psi(x,t) = i\\hbar \\frac{\\partial \\psi(x,t)}{\\partial t} \\\\\\ \\\\ 很多时候， \\psi(x,t) = \\varphi(x)\\cdot f(t)\\\\\\ \\\\ \\therefore -\\frac{\\hbar}{2m} \\frac{d\\varphi^2(x)}{dx^2}\\cdot f(t) + U(x) \\cdot \\varphi(x)\\cdot f(t) = i\\hbar \\frac{df(t)}{dt}\\varphi(x) \\\\\\ \\\\ 两边同时除以f(t)\\cdot \\varphi(x) \\\\\\ \\\\ -\\frac{\\hbar}{2m}\\frac{1}{\\varphi(x)} \\frac{d\\varphi^2(x)}{dx^2} + U(x) = i\\hbar \\frac{1}{f(t)} \\frac{df(t)}{dt} = C \\\\\\ \\\\ 对于上式，两边分别只有一个变量 \\\\\\ \\\\ 故分别让两边等于同一个常数即可 \\\\\\ \\\\ -\\frac{\\hbar}{2m} \\frac{d^2\\varphi(x)}{dx^2} +U(x) \\varphi(x) = C\\varphi(x) \\\\\\ \\\\ 注意到，上式与时间无关的以为薛定谔方程相同 \\\\\\ \\\\ \\therefore C = E \\\\\\ \\\\ \\therefore i\\hbar \\frac{1}{f(t)} \\frac{df(t)}{dt} = E \\\\\\ \\\\ \\therefore \\frac{df(t)}{dt} = -i\\frac{f(t)}{\\hbar} E \\\\\\ \\\\ 解得：f(t) = e^{-i(\\frac{E}{\\hbar})t} \\\\\\ $$\n波的方程 $$ \\psi(x,t) =\\varphi(x) e^{-i(\\frac{E}{\\hbar})t}\\\\\\ \\\\ 根据欧拉公式：|f(t)| =1 \\Longrightarrow |f(t)|^2 = 1 \\\\\\ \\\\ \\therefore |\\psi(x,t)|^2 = |\\varphi(x)|^2 $$\n自由粒子 平面波 波包 自由粒子 不受任何外力的粒子\n其势能为0 自由粒子的薛定谔方程 $$ \\frac{d^2\\psi(x)}{dx^2} + \\frac{2mE}{\\hbar^2}\\psi(x) = 0 \\\\\\ \\\\ 其中, k =\\frac{2\\pi}{\\lambda} = \\frac{p}{\\hbar} = \\sqrt{\\frac{2mE}{\\hbar^2}} $$\n粒子在无限深的井中的势能 5.1 图示 $$ 我们规定 \\\\\\ \\\\ U(x) = \\begin{cases} 0 \u0026amp; 0 \\lt x \\lt L \\\\ \\infin \u0026amp; x \\le 0 \\ or \\ x \\ge L \\end{cases} $$\n5.2 波方程 $$ 当x \\lt 0 \\ or \\ x \\gt L ，U(x) = \\infin \\\\\\ \\\\ 为了使得薛定谔方程成立，U(x) \\cdot \\psi(x)= 0 \\\\\\ \\\\ \\therefore \\psi(x) =0 \\\\\\ \\\\ 我们认为一个波函数是\\pmb{连续的} \\\\\\ \\\\ \\therefore 当x= 0和x = L 时，\\psi(x) = 0 \\\\\\ \\\\ \\psi(0) = B = 0\\\\\\ \\\\ \\psi(L) = A\\cdot sinkL = 0 \\\\\\ \\\\ \\therefore k = \\frac{n\\pi}{L} \\\\\\ \\\\ \\therefore \\psi_n(x) = Asin\\frac{n \\pi}{L}x\\\\\\ \\\\ 根据归一化条件 \\\\\\ \\\\ \\int_{0}^{L} |\\psi(x)|^2dx = 1 \\\\\\ \\\\ 解得: A = \\sqrt{\\frac{2}{L}} \\\\\\ \\\\ \\therefore \\psi_n(x) =\\sqrt{\\frac{2}{L}}sin\\frac{n\\pi}{L}x $$\n5.3 能量方程 方程 $$ \\because k = \\sqrt{\\frac{2mE}{\\hbar^2}} \\\\\\ \\\\ E_n = \\frac{k^2\\hbar^2}{2m} = n^2 \\frac{h^2}{8mL^2} \\\\\\ \\\\ \\therefore E_1 =\\frac{h^2}{8mL^2},\\pmb{零点能量} $$\n观察与解释 $$ p = \\frac{h}{\\lambda} = \\hbar k = n\\hbar\\frac{\\pi}{L} \\\\\\ \\\\ p与L 成反比 $$\n这可以理解为不确定性原理的一种体现 粒子在有限深井中的势能 6.1 图示 6.2 波方程 $$ 设 \\psi = Asinkx + Bcoskx \\\\\\ \\\\ -\\frac{\\hbar^2}{2m} \\frac{d^2\\psi}{dx^2} + U\\psi = E\\psi \\\\\\ \\\\ \\frac{d^2\\psi}{dx^2} - \\Big[\\frac{2m(U_0 -E)}{\\hbar^2}\\Big] \\psi = 0 \\\\\\ \\\\ 设G^2 = \\frac{2m(U_0-E)}{\\hbar^2} \\\\\\ \\\\ \\pmb{当U_0 \\gt E}时: \\\\\\ \\\\ \\psi_{I,III} = Ce^{Gx} + De^{-Gx} \\\\\\ \\\\ 在I处，x \\lt 0 \\Longrightarrow 当x \\rightarrow -\\infin 时, \\psi \\rightarrow +\\infin \\\\\\ \\\\ 这显然不可能，故D = 0 \\\\\\ \\\\ 同理，在III处，C = 0 \\\\\\ \\\\ 我们得到 \\begin{cases} \\psi_I = Ce^{Gx} \\\\ \\psi_{III} = De^{-Gx} \\end{cases} \\\\\\ \\\\ 由于波方程是连续且可微的 \\\\\\ \\\\ 故有x =0 时: \\psi_I = \\psi_{II}，\\frac{d\\psi_I}{dx} = \\frac{d\\psi_{II}}{dx} \\\\\\ \\\\ x= L时: \\psi_{II} = \\psi_{III} ，\\frac{d\\psi_{II}}{dx} = \\frac{d\\psi_{III}}{dx} \\\\\\ \\\\ 解得 \\pmb{B = C， GC = kA} $$\n6.3 另一种情况 $$ 当U_0 \\lt E \\\\\\ \\\\ 我们有 \\lambda =\\begin{cases} \\frac{h}{p} = \\frac{h}{\\sqrt{2mE}} \u0026amp; 0 \\le x \\le L \\\\ \\frac{h}{p} = \\frac{h}{\\sqrt{2m(E-U_0)}} \u0026amp; x\\gt L \\ or \\ x \\lt 0 \\end{cases} \\\\\\ $$\n穿越障碍 7.1 图示 7.2 解释 前提：$U_0 \\gt E$\n有一部分粒子会穿过障碍，如图(b)所示\n$$ 假设穿过概率为T,反弹概率为R,有T+R = 1 \\\\\\ \\\\ 当T 非常小时 \\\\\\ \\\\ T = \\frac{|\\psi(L)|^2}{|\\psi(0)|^2} = e^{-2GL} $$\n","date":"2023-02-01T07:03:55+08:00","permalink":"https://downeyflyfan.com/p/%E9%87%8F%E5%AD%90%E5%8A%9B%E5%AD%A6/","title":"量子力学"},{"content":"一、安装except 1.1 安装依赖tcl 1 2 3 4 5 wget https://sourceforge.net/projects/tcl/files/Tcl/8.4.19/tcl8.4.19-src.tar.gz tar zxvf tcl8.4.19-src.tar.gz cd tcl8.4.19/unix \u0026amp;\u0026amp; ./configure make sudo make install 1.2 下载并安装except 1 2 3 4 5 6 7 wget http://sourceforge.net/projects/expect/files/Expect/5.45/expect5.45.tar.gz # tar zxvf expect5.45.tar.gz # cd expect5.45 # ./configure --with-tcl=/usr/local/lib --with-tclinclude=../tcl8.4.19/generic # make # sudo make install # ln -s /usr/local/bin/expect /usr/bin/expect 二、用法 2.1 概述 1 except [选项][ -c cmds] [ [ -[f|b] ] cmdfile] [ args] 2.2 常见用法 开启子程序 1 spawn program 自动交互 1 2 3 4 5 6 7 8 9 10 11 expect { \u0026#34;字符串A\u0026#34; { send \u0026#34;字符串B\u0026#34;; exp_continue } \u0026#34;字符串C\u0026#34; { send \u0026#34;字符串D\u0026#34;; exp_continue } ... } expect eof 注意事项 用#!/usr/bin/expect作为开头\nexpect文件以.exp作为后缀\n","date":"2023-01-29T05:05:05+08:00","permalink":"https://downeyflyfan.com/p/%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%84%9A%E6%9C%AC/","title":"自动化交互式脚本"},{"content":"购买服务器 选择操作系统 建议选择Debian系统 连接服务器 输入命令ssh root@IP\n输入服务器密码\n升级\napt update\napt upgrade\n在服务器中增加安全组,开放1194端口,并关联实例\n注意内外网问题\n服务器操作 创建新用户并赋予sudo权限 创建新用户 1 adduser \u0026lt;username\u0026gt; 在管理员账号下 1 adduser \u0026lt;username\u0026gt; sudo 注意 useradd比adduser功能更强大 关闭防火墙 1 2 3 4 5 6 sudo apt install lsof # 安装lsof命令 sudo lsof -l -P -n | grep LISTEN # 查看端口状态 sudo apt install ufw # 安装ufw命令 sudo ufw allow 22 sudo ufw allow 1194 # 开放以上两个端口 下载openvpn 1 sudo apt install openvpn 下载指定脚本并运行 下载 1 2 3 4 curl -O https://raw.githubusercontent.com/Angristan/openvpn-install/master/openvpn-install.sh chmod 775 openvpn-install.sh sudo ./openvpn-install.sh sudo chmod 775 flyfan.ovpn # 改变权限 安装选项 DNS resolver选择Google 传输文件 从本地到远程 1 scp 本地路径 USER_NAME@IP:远程路径 从远程到本地 1 scp USER_NAME@IP:远程路径 本地路径 连接VPN 设置SSH密钥 创建密钥 1 ssh-keygen # 不要Overwrite 在**.ssh**中查看密钥 id_rsa是私人密钥 id_rsa.pub是公共网络密钥 将SSH密钥添加到远程 1 ssh-copy-id -i ~/.ssh/id_rsa.pub \u0026lt;USERNAME\u0026gt;@IP 注意!!!管理员用户和普通用户都要添加 让SSH密钥成为唯一的登录密码 1 sudo vi /etc/ssh/sshd_config 找到PasswordAuthentification并改成yes 在本地电脑安装openvpn及其配件 1 sudo pacman -S openvpn networkmanager-openvpn 安装openssh-client 将远端配置下载到本地 1 scp USER_NAME@IP:/home/flyfan/flyfan.ovpn Downloads/ flyfan是用户名 将配置复制到openvpn的配置文件中 1 sudo cp Downloads/flyfan.ovpn /etc/openvpn/client/client.conf 运行 1 sudo openvpn /etc/openvpn/client/client.conf Debian系统的一些指令 apt 指令 删除包 1 apt remove pkg 安装 ","date":"2023-01-24T20:03:44+08:00","permalink":"https://downeyflyfan.com/p/linux%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"Linux服务器"},{"content":"一、Linux账号与群组 1.1 使用者识别码UID与GID ID与账号存储在/etc/passwd当中 1.2 使用者账号 1.2.1 输入账号密码的处理过程 stateDiagram 在/etc/passwd里寻找输入账号与密码 --\u003e 结束: 没有 在/etc/passwd里寻找输入账号与密码 --\u003e 读取UID，GID,主文件夹与Shell设置:有 读取UID，GID,主文件夹与Shell设置 --\u003e 在/etc/shadow中核对密码表 在/etc/shadow中核对密码表 --\u003e Shell管控: 正确 在/etc/shadow中核对密码表 --\u003e 结束:错误 注意，备份时一定要备份/etc/passwd与/etc/shadow文件\n1.2.2 /etc/passwd文件结构 每一行代表一个账号 bin、daemon、adm、nobody等是系统账号 每一行的七大字段 账号\n密码\nUID\nGID\n使用者信息说明栏\n主文件夹\nShell\n字段说明 ID范围 该ID使用者特性 0 系统管理员 1-999 系统账号 1000-60000 可登录账号 1.2.3 /etc/shadow文件结构 每一行的九大字段 账号\n密码\n最近密码更变日期\n密码不可重置的天数\n密码需要重置的天数\n密码需要重置前的警告\n密码失效日\n密码过期后的账号宽限时间 账号失效日期\n保留\n字段说明 所有日期均以1970.1.1以来的天数表示 1.3 群组 1.3.1 /etc/group文件结构 每一行的四大字段 群组名称\n群组密码\nGID\n此群组支持的账号名称\n字段说明 群组密码通常是给群组管理员使用的，不需要设置 1.3.2 有效群组与初始群组 初始群组 etc/passwd里的GID 有效群组 输入groups命令得到的第一个群组为有效群组\nnewgrp GROUP_NAME切换有效群组\n1.3.3 /etc/gshadow 四个字段 群组名称\n密码栏\n群组管理员账号\n与/etc/group的第四栏内容相同\n二、账号管理 2.1 添加与移除使用者 useradd添加使用者 默认值(在/etc/default/useradd中查看) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # GID设置为1000 GROUP=1000 # 默认的主文件夹所在目录 HOME=/home # 密码失效日,-1表示永久不失效 INACTIVE=-1 # 账号失效日 EXPIRE= # 默认使用的shell SHELL=/bin/bash # 使用者主文件夹参考基准目录 SKEL=/etc/skel # 创建使用者的mailbox CREATE_MAIL_SPOOL=yes LOG_INIT=yes passwd 操作密码 参数 作用 无参数 修改密码 -d 删除密码 -f 强制下次登陆修改口令 -w 口令到期前警告的天数 -k 更新只能发送在过期之后 -l 停止账号使用 -S 显示密码信息 -u 启用已被停止的账户 -x 指定口令最常存活期 -g 修改群组密码 -i 多少天后停用账户 change 账户名显示密码参数 -l 列出详细的密码参数 usermod调整账号信息 -c 修改用户账号的备注文字 -d 登入目录 -e 修改账号的有效期限 -g 修改群组 userdel删除账户 无参数 直接删除 -r 连同使用者的主文件夹一起删除 2.2 使用者功能 id [username]查询用户的UID/GID等信息\nfinger查询用户的相关信息\n比较危险，目前的版本里没有 chfn [username](change finger) -f 接完整的大名 -o 办公室房间号 -p 办公室电话号码 -h 家里电话 chsh(change shell) -l 列出系统中有的shell -s 设置自己的shell 2.3 新增与移除群组 groupadd -g GID -r [group_name]增添群组 -g 接GID -r 创建系统群组 groupmod -g 修改GID -n 修改既有群组名称 groupdel删除群组 2.4 账号管理实例 三、ACL 3.1 ACL简介 定义 ACL，即 Access Control list，主要目的是提供传统的rwx以外的权限，包括\n使用者(user)\n群组(group)\n默认属性(mask)\n3.2 ACL的设置技巧 setfacl [-bkRd] [-m/x ACL参数] file_name(set file ACL) -m 设置ACL参数，不可与-x混用 -x 删除后续ACL参数 -b 移除所有的ACL参数 -k 移除默认的ACL参数 -R 递归 -d 针对目录设置默认ACL参数 ","date":"2022-12-27T17:48:26+08:00","permalink":"https://downeyflyfan.com/p/linux%E8%B4%A6%E5%8F%B7%E7%AE%A1%E7%90%86%E4%B8%8Eacl%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/","title":"Linux账号管理与ACL权限设置"},{"content":"用户与硬件的关系 stateDiagram User --\u003e API API --\u003e User API --\u003e Kernel Kernel --\u003e API Kernel --\u003e Hardware Hardware --\u003e Kernel Shell的变量功能 变量定义 等号两端不能有空格\n如有空格 等特殊字符需要加引号\u0026quot; \u0026quot;\n双引号、单引号都可以 双引号里可以加变量，单引号不行 字符串里可以使用转义字符 1 str1=\u0026#34;abc\\tdef\\n\u0026#34; 数值计算需要双圆括号 1 2 3 num3=$(($num1 + $num2)) # 也省略括号中的取值符号 num3=$((num1 + num2)) 简单的字符操作 1 2 3 str2=abcdef echo $str2[2,4] # 角标与元素位置相同 echo $str2[1,-1] # -1代表最后一个字符 2.2 变量比较 使用双圆括号比较数值 1 2 num=123 ((num == 123)) \u0026amp;\u0026amp; echo good 可以使用\u0026amp;\u0026amp; || !等逻辑操作符 使用双方括号比较字符串 1 2 3 str=abc # 注意，两边的变量必须与[]之间留有一个空格!!! [[ $str == abc ]] \u0026amp;\u0026amp; echo good 2.3 变量进阶 2.3.1 typeset 1 2 typeset -A 暂定 2.3.2 local 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # 强制大小写 # l代表lower u代表upper local -l(u) str # 设置环境变量 local -x str export str # 设置只读变量 local -r str # 设置数组不包含重复元素 local -U array # 设置整数位数 local -Z n num # 设置num的数位为n位。不足补0,超过截断高位 # 设置进制 local -i n num # 设置num为n进制数 [#n] num # 可以显示十进制数为n进制 # 同时对多个变量赋相同而的值 local {a,b,c}=123 # 绑定字符串和数组 local -T(tie) DIR dir dir=(.. .. ..) # 删除DIR也会删除dir,反之亦然 # 显示变量的定义方式 local -p(print) str 三、语句 3.1 条件语句 3.1.1 格式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # [[ ]] 用于比较字符串和文件 if [[ ]] { } elif { } else { } # (())用于比较数值 if (()) { } # () 用于在子shell运行命令并判断结果 if () { } 以上三种可以混合使用 3.1.2 示例 1 2 3 4 5 # 此处不需要$ if (( num \u0026gt; 3 \u0026amp;\u0026amp; num + 3 \u0026lt;= 10)) { echo $num } 3.2 循环语句 3.2.1 while与until 1 2 3 4 5 6 7 8 9 while [[ ]] 或 (( )) 或 ( ) # 此处同if { break/continue } until [[ ]] 或 (( )) 或 ( ) # 此处同if { break/continue } 3.2.2 for 用于枚举 1 2 3 4 5 # 枚举括号中的内容 for i ( ) { } C风格的for循环 1 2 3 4 for (( i=0; i\u0026lt; 10; i++ )) { echo $i } 生成数组 1 2 3 4 for ({1..10}) { echo $i } 3.2.3 repeat 用于循环固定次数 1 2 3 4 5 # 将代码块中的内容循环n次 repeat n { ... } 3.3 分支语句 3.3.1 case 1 2 3 4 5 6 case $i { (a) echo 1 } 3.3.2 select 循环，并让用户选择 1 2 3 4 select $i (...) { } 3.4 异常处理语句 如果Code 1出错，就执行Code 2 1 2 3 4 5 6 { Code 1 } always { Code 2 } 四、字符串处理 4.1 字符串长度1 1 2 3 4 5 6 7 #显示字符串长度 echo $#str # 读取函数或脚本的第一个参数的长度 echo $#1 4.2 字符串拼接 1 2 3 4 5 6 str1=abc str2=def # 第一种拼接方式 str2+=$str1 # 第二种拼接方式 str3=$str1$str2 4.3 字符串截断 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 str=abcdeabcde # 删除左端匹配内容，最小匹配 echo ${str#*b} # 结果 cdeabcde # 删除右端匹配内容，最大匹配 echo ${str%*d} # 结果 abcdeabc # 删除左端匹配内容，最大匹配 echo ${str##*b} # 结果 cde # 删除右端匹配到的内容 echo ${str%%d*}，最大匹配 # 结果 abc 4.4 字符串查找 子字符串定位 1 2 3 4 5 6 7 str=abcdef # I 表示从右往左找，i表示从左往右找 echo $str[(I)cd] # $后不能有空格 # 找不到就返回(数组大小+1) 4.5 字符串替换 只替换找到的第一个 1 2 str=abcabc echo ${str/bc/ef} 删除匹配到的第一个 1 echo ${str/bc} 替换所有找到的 1 echo ${str//bc/ef} # 多加一个/ 删除所有匹配的 1 echo ${str//bc} 匹配成功就输出空字符串 1 echo ${str:#ab*} 匹配失败就输出原字符串 1 echo ${str:#ab} 加M后效果反转 1 echo ${(M)str:#ab} 按位置删除(替换)字符串 1 2 str[1,4]= # 空值即位删除，否则就是替换 echo $str 4.6 判断字符串变量是否存在 1 2 3 (($+var)) \u0026amp;\u0026amp; echo good # 存在就返回good 仅仅用[[\u0026quot;str\u0026quot;==\u0026quot;\u0026quot;]]是无法区分其内容为空还是不存在的 4.7 字符串匹配判断 判断是否包含字符串 1 2 3 4 str1=abc str2=bc [[ $str1 == *$str2* ]] \u0026amp;\u0026amp; echo good 4.8 大小写转换 转成大写 1 2 3 4 5 6 7 str=\u0026#34;ABCDE abcde\u0026#34; echo ${(U)str} # 等价形式 echo ${str:u} 转成小写 1 2 3 4 5 echo ${(L)str} # 等价形式 echo ${str:l} 转成首字母大写 1 echo ${(C)str} 4.9 文件目录名截取 1 2 3 filepath=/a/b/c.x echo ${filepath:[hter]} h取目录名 t取文件名 e取文件扩展名,即文件.后的部分 r去掉末尾扩展名的路径 4.10 字符串分隔 使用空格 作分隔符，多个空格只算一个分隔符 1 2 3 4 5 str=\u0026#39;aa bb cc dd\u0026#39; # 显示第n个token echo ${str[(w)n]} 指定分隔符 1 2 3 4 5 str=\u0026#34;aa--bb--cc\u0026#34; # 设定分隔符为--，并显示第n个token echo ${str[(ws:--:)n]} 4.11 多行字符串 1 2 3 # 以下操作可以用于命令行 str=\u0026#34;line1 \u0026gt; line2\u0026#34; 4.12 读取文件内容到字符串 读取整个文件 1 2 3 4 5 6 7 8 9 10 11 12 str=$(\u0026lt;filename) # 注意引号 echo \u0026#34;$(\u0026lt;filename)\u0026#34; # 遍历每行 for i (${(f)\u0026#34;$(\u0026lt;filename)\u0026#34;}) { echo $i } 读取文件指定行 1 2 3 4 5 6 7 8 9 echo ${\u0026#34;$(\u0026lt;text.txt)\u0026#34;[(f)2]} # 输出包含abc的一行 echo ${\u0026#34;$(\u0026lt;text.txt)\u0026#34;[(fr)*abc*]} # 从左端输出包含aa的一行，但从左端截去\u0026#34;line\u0026#34; echo ${\u0026#34;$(\u0026lt;text.txt)\u0026#34;[(fr)*aa*]#line} #表示从字符串开头开始匹配，%表示从字符串结尾开始匹配\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2022-12-14T00:26:51+08:00","permalink":"https://downeyflyfan.com/p/zsh%E7%9A%84%E5%8F%98%E9%87%8F%E8%AF%AD%E5%8F%A5%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"Zsh的变量、语句与字符串"},{"content":"一、普朗克量子假设与光电效应 1.1 黑体 1.1.1 定义 黑体吸收一切照射其上的辐射\n1.1.2 黑体辐射 黑体产生的辐射即为黑体辐射\n1.1.3 Wien 定理 \u0026ndash; \u0026ndash; 仅在短波长时有效 光谱峰值处的波长$\\lambda_p$ 与温度T的关系 $$ \\lambda_p T = 2.90 \\times 10^{-3} m\\cdot K $$\n1.1.4 不同温度下的黑体光谱 1.2 普朗克的工作 前提 Wien公式和Rayleigh等人的公式在波长较大时失效 一定温度下光强与波长的公式 —— 普朗克辐射公式 $$ I(\\lambda,T) = \\frac{2\\pi {h}c^2\\lambda^{-5}}{e^{hc/\\lambda k T}-1} \\\\\\ \\\\ {h} = 6.626\\times 10^{-34} \\ J\\cdot s \\\\\\ \\\\ k \\ \\ Boltzman 常数 \\\\\\ \\\\ T 在此处为给定的\\pmb{常数} $$\n普朗克量子假设 能量是不连续的 $$ E = n{h}f, n=1,2,3,\u0026hellip; $$\n1.3 光电效应 1.3.1 图示 1.3.2 公式 $$ E_{k_{max}} = {h}f -W_0 \\\\\\ \\\\ E_{k_{max}} = eV_0, f = \\frac{c}{\\lambda} $$\n1.3.3 解释 最大初动能$E_{kmax}$ 光子和电子相撞，碰撞类型不同，损失的能量不同 二、康普顿效应 - 光子撞电子 2.1 光子动量 一般物质的动量为 $$ p = \\gamma mv = \\frac{mv}{\\sqrt{1-v^2/c^2}} $$\n光子的动量 由于光子的速度$v=c$，而其动量不可能为无穷，故其质量$m=0$\n$$ E = mc^2 \\longrightarrow E^2 = m^2 c^4 = p^2c^2 \\\\\\ \\\\ \\therefore \\pmb{p =\\frac{E}{c}} \\\\\\ \\\\ p = \\frac{{h}f}{c} = \\frac{h}{\\lambda} \\\\\\ $$\n2.2 康普顿效应与光子 2.2.1 实验图 2.2.2 推导 $$ 已知: 撞前，电子静止，光子波长为\\lambda; \\\\\\ \\\\ 撞后，电子速率为v，光子波长为\\lambda\u0026rsquo; \\\\\\ \\\\ 根据能量守恒有: \\\\\\ \\\\ \\begin{align} \\frac{{h}c}{\\lambda} = \\frac{hc}{\\lambda\u0026rsquo;} + (\\frac{1}{\\sqrt{1-v^2/c^2}}-1)m_e \\end{align} \\\\\\ \\\\ 根据动量守恒有: \\\\\\ \\\\ \\begin{align} \\frac{m_ev}{\\sqrt{1-v^2/c^2}}\\cdot sin\\theta = \\frac{hc}{\\lambda\u0026rsquo;}\\cdot sin\\phi \\\\ \\frac{m_ev}{\\sqrt{1-v^2/c^2}}\\cdot cos\\theta + \\frac{hc}{\\lambda\u0026rsquo;}\\cdot cos\\phi = \\frac{hc}{\\lambda} \\end{align} \\\\\\ \\\\ 根据上述三式: \\\\\\ \\\\ \\lambda\u0026rsquo; =\\lambda + \\frac{{h}}{m_ec}(1-cos\\phi) \\\\\\ \\\\ \\Delta E = h \\nu - h\\nu \u0026rsquo; = h\\nu(1-cos\\theta) \\\\\\ \\\\ \\pmb{Compton \\ S{h}ift} \\\\\\ \\\\ \\Delta\\lambda = \\lambda\u0026rsquo; - \\lambda = \\frac{{h}}{m_ec}(1-cos\\phi) \\\\\\ \\\\ \\pmb{自由电子的康普顿波长} \\\\\\ \\\\ \\lambda_C = \\frac{{h}}{m_ec} = 2.43\\times 10^{-3}nm = 2.43pm $$\n2.2.3 光子与原子的碰撞 撞击原子核 或 核外电子。失去能量，频率降低(康普顿效应)\n撞击自由电子后消失,光电子逸出(光电效应)\n撞击核外电子后消失，电子能量增加(激发态)\n撞击后消失，产生电子和正电子(Pair Production)\n这种情况下,正负电子对的动能为 $$ K = hf - 2mc^2 $$\n2.2.4 光电效应与康普顿效应 光电效应是当光照在金属中时,金属里的自由电子由于变化的电场的作用而振动.若光振幅足够大,电子会飞出金属表面.于是金属就带了电.这个实验其实证明了光的波动性,即证明了光是一种电磁波.\n康普顿效应是让光波射入石墨,企图让石墨中的电子对光进行散射,光子和电子碰撞时将一部分能量转移给电子.这样,光的能量减小,波长增加.而且如果将光子当作实物粒子的话,计算结果与实验结果符合.这便证明了光子也具有动量.即证明了光的粒子性.通常只发生在频率很高的电磁波当中\n三、波粒二象性 互补原则 3.1 互补原理 —— 波尔 理解一个物理实验，必须使用波理论或者光理论，而不是同时使用两种理论\n3.2 波粒二象性 光同时具有粒子和波的属性\n$$ E(\\pmb{粒子}的能量) = {h}f(\\pmb{波}的频率) $$\n3.3 物质的波属性 德布罗意波 $$ 对于光，\\because p = \\frac{{h}}{\\lambda} \\\\\\ \\\\ 因此，\\lambda = \\frac{{h}}{p} $$\n解释 波的属性，例如干涉与衍射，只有在物体较小时才比较显著 四、早期原子模型 4.1 图示 4.2 氢原子光谱 4.2.1 黑体辐射产生原因是 由原子和分子振动产生的\n4.2.2 吸收光谱 定义 连续光谱穿过稀有气体，产生的光谱中会有黑线，波长与稀有气体释放的相同，这叫吸收光谱\n结论 稀有气体吸收和释放的光的频率是相同的\n4.2.3 Balmer公式 适用范围 表示氢原子的发射(的光电子的)波长 $$ \\frac{1}{\\lambda} =R(\\frac{1}{2^2}-\\frac{1}{n^2})，n=3,4,5,\u0026hellip; \\\\\\ \\\\ Redberg常数 \\ \\ \\ \\pmb{R = 1.0974\\times 10^7 m^{-1}} \\\\\\ \\\\ 365nm \\le \\lambda \\le 656nm $$\n4.3 Balmer公式的延伸与图示 Lyman Series $$ \\frac{1}{\\lambda} =R(\\frac{1}{1^2}-\\frac{1}{n^2})，n=3,4,5,\u0026hellip; \\\\\\ \\\\ 91nm \\le\\lambda \\le 122nm \\\\\\ $$\nPaschen series $$ \\\\ \\frac{1}{\\lambda} =R(\\frac{1}{3^2}-\\frac{1}{n^2})，n=3,4,5,\u0026hellip; \\\\\\ \\\\ 820nm\\le \\lambda \\le 1280nm $$\n氢原子能级图 4.4 波尔模型 4.4.1 能级与跃迁 向低能级跃迁释放光子 $$ {h}f =E_u - E_l $$\n4.4.2 波尔量子化条件 条件 $$ 假设电子角动量 \\ L = n \\frac{{h}}{2\\pi} \\ \\ \\ \\ n: 轨道的量子数 \\\\\\ \\\\ 又 L =mvr_n \\\\\\ \\\\ \\therefore v = \\frac{nh}{2\\pi m r_n} (1) $$\n波尔提出这个纯纯是因为它符合Balmer 公式，合着是瞎猜，一个一个试出来的 验证 图示 证明 $$ 根据牛顿第二定律 \\\\\\ \\\\ F = ma \\\\\\ \\\\ \\frac{1}{4\\pi \\varepsilon_0} \\frac{(Ze)(e)}{r^2_n} = m \\frac{v^2}{r_n} \\\\\\ \\\\ \\therefore r_n = \\frac{Ze^2}{4\\pi \\varepsilon_0 mv^2} \\\\\\ \\\\ 又根据(1)式， v = \\frac{nh}{2\\pi r_n m} \\\\\\ \\\\ \\therefore \\pmb{r_n = \\frac{\\varepsilon_0 n^2 h^2}{Ze^2 \\pi m}} \\\\\\ \\\\ \\pmb {r_n = \\frac{n^2}{Z} r_1} \\\\\\ \\\\ 波尔半径 \\ r_1 = \\frac{\\varepsilon_0 h^2}{\\pi m e^2} = 0.529 \\times 10^{-10}(m) = 0.0529(nm) $$\n4.4.3 能级 能级推导 $$ 核外电子的电势能U = - eV \\\\\\ \\\\ U = -\\frac{Ze^2}{4\\pi \\varepsilon_0 r_n} \\\\\\ \\\\ 核外电子的总能量 E_n = E_k + E_p = \\frac{1}{2}mv^2 -\\frac{Ze^2}{4\\pi \\varepsilon_0 r_n} \\\\\\ \\\\ 在波尔量子化条件下，v = \\frac{n h}{2\\pi m r_n } , r_n = \\frac{\\varepsilon_0 n^2 \\hbar^2}{Ze^2 \\pi m}\\\\\\ \\\\ \\therefore \\pmb{E_n = -(\\frac{Z^2e^4m}{8\\varepsilon_0^2 h^2})(\\frac{1}{n^2})} \\\\\\ \\\\ \\therefore \\pmb{E_n = \\frac{Z^2}{n^2}E_1} \\\\\\ \\\\ 其中，E_1 = \\frac{me^4}{8\\varepsilon_0^2h^2} =-13.6eV $$\n关于能级解释 stateDiagram 核外电子(E\u003c0) --\u003e 自由电子(E\u003e=0): 消耗能量,挣脱束缚 其他概念 电离能/结合能：使核外电子从基态到脱离(自由到基态)原子核的最小能量 能级与波长 $$ \\frac{1}{\\lambda} = \\frac{f}{c} = \\frac{hf}{hc} = \\frac{1}{hc}(E_n - E_{n\u0026rsquo;}) \\\\\\ \\\\ \\lambda = \\frac{hc}{E_n - E_{n\u0026rsquo;}} \\\\\\ \\\\ 其中 \\pmb{hc = 1.24 \\times 10^3(eV\\cdot nm)} \\\\\\ \\\\ 换E \\\\\\ \\\\ \\frac{1}{\\lambda} = \\frac{Z^2e^4m}{8\\varepsilon_0^2h^3 c}\\Big(\\frac{1}{n\u0026rsquo;^2}- \\frac{1}{n^2}\\Big) \\\\\\ \\\\ 由此可以得到: R = \\frac{me^4}{8\\varepsilon_0 h^3 c} $$\n五、德布罗意原子假设 5.1 对波尔量子化条件的证明（回顾驻波知识） $$ 德布罗意波长 \\lambda = \\frac{h}{p} = \\frac{h}{mv} (v较小时) \\\\\\ \\\\ 2\\pi r_n =n \\lambda = n\\frac{h}{mv}，n = 1,2,3, \u0026hellip;\\\\\\ \\\\ $$\n5.2 波尔模型的局限性 只适用于氢原子和单电子离子\n量子力学最终解释了这一切\n","date":"2022-12-13T23:55:09+08:00","image":"https://downeyflyfan.com/p/%E6%97%A9%E6%9C%9F%E9%87%8F%E5%AD%90%E7%90%86%E8%AE%BA%E5%92%8C%E5%8E%9F%E5%AD%90%E6%A8%A1%E5%9E%8B/1_hub06219d070f66f8c658580c5f1108b51_11730_120x120_fill_q75_box_smart1.jpg","permalink":"https://downeyflyfan.com/p/%E6%97%A9%E6%9C%9F%E9%87%8F%E5%AD%90%E7%90%86%E8%AE%BA%E5%92%8C%E5%8E%9F%E5%AD%90%E6%A8%A1%E5%9E%8B/","title":"早期量子理论和原子模型"},{"content":"基础问题 没有声音 1 2 3 sudo vim /etc/default/grub GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;loglevel=3 snd_hda_intel.dmic_detect=0\u0026#34; sudo grub-mkconfig -o /boot/grub/grub.cfg 删除特定名称的文件 1 sudo find / -name \u0026#34;openssl\u0026#34; -type f -delete 定期清理浏览器缓存 蓝牙连接失败 1 2 sudo nvim /etc/bluetooth/main.conf ControllerMode = bredr 虚拟机 前提条件 安装软件 1 sudo pacman -S qemu-base virt-manager 开启服务 Network default 1 sudo virsh net-start default ","date":"2022-12-13T00:05:44+08:00","permalink":"https://downeyflyfan.com/p/linux%E7%9A%84%E9%97%AE%E9%A2%98/","title":"Linux的问题"},{"content":"一、拉普拉斯变换的定义 数学公式 $$ F(s) = \\mathcal L\\lbrace f(t) \\rbrace = \\int_0^{+\\infin} f(t)e^{-st}dt $$\n$t$ 代表时域 由于$e$没有量纲，所以$s$代表频率 解释 将时域变为频域 二、阶跃函数与斜坡函数 2.1 单位阶跃函数图示 2.2 阶跃函数数学定义 $$ \\begin{cases}Ku(t-a) =0 \u0026amp; t \\lt a \\\\ Ku(t-a) = K \u0026amp; t \\ge a \\end{cases} $$\n若需要定义从$a^-$到$a^+$的过渡是线性的(非突变),则可以假设 $$ Ku(0) = 0.5K \\\\\\ \\\\ u(t) = \\begin{cases} 0 \u0026amp; t \\lt 0 \\\\ 1 \u0026amp; t \\ge 0 \\end{cases} \\\\\\ \\\\ u(t) = \\frac{dr(t)}{dt} $$\n2.3 单位斜坡函数 定义 $$ r(t) = tu(t) = \\int_{-\\infin}^t u(\\lambda)d\\lambda $$\n三、冲激函数 3.1 作用 定义间断点处的导数及其拉氏变换\n3.2 举例 $$ f(0) \\rightarrow \\delta(t)，\\epsilon \\rightarrow 0 \\\\\\ \\\\ \\delta(t)即为冲激函数 $$\n3.3 条件 冲激函数是由可变参数函数的参数$\\rightarrow 0$时形成的\n幅值趋于$\\infin$\n函数持续时间趋于0\n当参数变化时，函数下的面积为常数\n在此例中，面积为1 $$ f(t) = \\frac{K}{2\\epsilon} e^{-|t|/\\epsilon} $$\n3.4 定义 $$ \\int_{-\\infin}^{+\\infin} K \\cdot \\delta (t) dt = K \\\\\\ \\\\ \\delta(t) = 0, t \\ne 0 \\\\\\ \\\\ \\delta(t) = \\underset{\\tau \\rightarrow 0 }{lim} \\frac{1}{\\tau}rect\\Big(\\frac{t + \\frac{\\tau}{2}}{\\tau}\\Big) $$\n3.5 特性 筛选特性 $$ \\int_{-\\infin}^{+\\infin} f(t)\\delta(t-a)dt = f(a) \\\\\\ \\\\ I =\\int_{-\\infin}^{+\\infin} f(t)\\delta(t-a)dt = \\int_{a-\\epsilon}^{a+\\epsilon}f(t)\\delta(t-a) dt $$\n冲激函数的拉氏变换 $$ \\mathcal L \\lbrace \\delta(t) \\rbrace = \\int_0^{+\\infin} \\delta(t)e^{-st}dt = e^{-st}\\Big|_{t=0} = 1 $$\n冲激函数微分的拉氏变换 (a)图说明了冲激函数的生成过程\n(b)图是冲激函数的微分\n冲激函数微分的拉氏变换\n$$ \\mathcal L \\lbrace \\delta\u0026rsquo;(t) \\rbrace = \\underset{\\epsilon \\rightarrow 0}{lim}\\int_{-\\epsilon}^{0^-}\\frac{1}{\\epsilon^2}e^{-st}dt + \\int_{0^+}^\\epsilon \\frac{1}{\\epsilon^2}e^{-st}dt \\\\\\ \\\\ = \\underset{\\epsilon \\rightarrow 0}{lim} \\frac{e^{-s\\epsilon}+e^{-s\\epsilon}-2}{s\\epsilon^2} \\\\\\ \\\\ = \\underset{\\epsilon \\rightarrow 0}{lim} \\frac{s^2(e^{-s\\epsilon}+e^{-s\\epsilon})}{2s} \\ \\ (洛必达法则) \\\\\\ \\\\ = s \\\\\\ \\\\ 同理可得：\\mathcal L \\lbrace \\delta^{(n)}(t)\\rbrace = s^n $$\n冲激函数是阶跃函数的导数 $$ \\delta(t) = \\frac{du(t)}{dt} $$\n四、函数变换 4.1 定义 说明 典型时域变换的拉普拉斯变换\n因为要限制其为单边变换，所以设所有函数在$t\\lt 0^-$时为0 4.2 常见函数的拉氏变换 单位阶跃函数的拉氏变换 $$ \\mathcal L \\lbrace f(t)\\rbrace = \\int_{0^-}^{+\\infin} f(t)e^{-st} dt = \\int_{0^+}^\\infin 1e^{-st} dt = \\frac{1}{s} \\\\\\ \\\\ $$\n衰减指数函数的拉氏变换 $$ \\mathcal L \\lbrace e^{-at} \\rbrace = \\int_{0^+}^{+\\infin} e^{-at}e^{-st}dt = \\frac{1}{s+a} $$\n正弦函数的拉氏变换 $$ \\begin{align} \\mathcal L \\lbrace sin\\omega t\\rbrace \u0026amp; = \\int_{0^-}^{\\infin} sin(\\omega t)e^{-st}dt \\\\\\ \u0026amp; = \\int_{0^-}^{+\\infin} \\frac{e^{j\\omega t}-e^{-j\\omega t}}{2j}e^{-st}dt \\\\\\ \u0026amp; = \\frac{\\omega}{\\omega^2 + s^2} \\end{align} $$\n4.3 拉氏变换对简表 类型 $f(t)，t\\gt 0^-$ $F(s)$ 冲激函数 $\\delta(t)$ 1 阶跃函数 $u(t)$ $1/s$ 斜坡函数 $t$ $1/s^2$ 指数函数 $e^{-at}$ $1/(s+a)$ 正弦函数 $sin(\\omega t)$ $\\frac{\\omega}{\\omega^2 + s^2}$ 余弦函数 $cos(\\omega t)$ $\\frac{s}{s^2+\\omega^2}$ 衰减斜坡函数 $te^{-at}$ $\\frac{1}{s^2+a^2}$ 衰减正弦函数 $e^{-at}sin(\\omega t)$ $\\frac{\\omega}{(s+a)^2+ \\omega^2}$ 衰减余弦函数 $e^{-at}cos(\\omega t)$ $\\frac{s+a}{(s+a)^2 + \\omega^2}$ 五、算子变换 5.1 常数与加减运算 $$ \\mathcal L \\lbrace Kf(t)\\rbrace = KF(s) \\\\\\ \\\\ \\begin{align} \\mathcal L \\lbrace f_1(t) + f_2(t) - f_e(t) \\rbrace = F_1(s) + F_2(s) - F_3(s) \\end{align} $$\n5.2 微分与积分 $$ \\begin{align} \\mathcal L \\Big\\lbrace \\frac{df(t)}{dt} \\Big\\rbrace \u0026amp; = sF(s) - f(0^-) \\\\\\ \\mathcal L \\Big\\lbrace \\int_{0^-}^t f(x)dx \\Big\\rbrace \u0026amp; = \\int_{0^-}^{+\\infin} \\Big[\\int_{0^-}^t f(x)dx\\Big]e^{-st}dt \\end{align} $$\n5.3 时域平移 六、脉冲函数 6.1 方形脉冲 $$ f(t) = A \\ rect(\\frac{t}{\\tau}) $$\n$A$表示脉冲，$\\tau$表示宽度，零值点表示中点 6.2 三角脉冲 $$ f(t) = A \\ tri \\Big(\\frac{t}{\\tau}\\Big) $$\n$A$表示脉冲，$2\\tau$表示宽度,零值点表示中点 ","date":"2022-12-12T04:35:12+08:00","permalink":"https://downeyflyfan.com/p/%E6%8B%89%E6%99%AE%E6%8B%89%E6%96%AF%E5%8F%98%E6%8D%A2%E4%B8%8E%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0/","title":"拉普拉斯变换与其他函数"},{"content":"假设检验 零假设和备择假设 假设检验的a问题 只有两种选择的假设检验问题\n检验过程(test) 判断假设的实验过程\n零假设和备择假设 $H_0$叫做零假设，$H_1$叫做备择假设。当实验结果是$\\theta \\in \\Omega_0$时，我们not reject $H_0$; 当实验结果是$\\theta \\in \\Omega_1$时，我们reject $H_0$\n简单假设 混合假设 定义 如果$\\Omega_i$包含多个值，那么$H_i$就是混合假设;如果$\\Omega_i$只包含一个值，那么$H_i$就是简单假设\n举例 一个简单空假设$H_0:\\theta = \\theta_0$ 单边和双边假设 定义 单边假设 $$ H_0 \\le \\theta ，H_1 \\gt \\theta \\\\\\ \\\\ H_0 \\ge \\theta ，H_1 \\lt \\theta $$\n双边假设 $$ (一般，若零假设为简单假设)，即H_0 = \\theta \\\\\\ \\\\ 那么H_1 \\neq \\theta，为\\pmb{双边假设} $$\n批判性区域和检验统计 批判性区域 $$ 对于一个均值未知，方差已知的正态分布 \\\\\\ \\\\ H_0 : \\mu = \\mu_0 ; H_1 : \\mu \\neq \\mu_0 \\\\\\ \\\\ c是一个很小的常数 \\\\\\ \\\\ 当\\overline {X_n}和\\mu的差值超过c,我们就拒绝H_0\\\\\\ \\\\ 即 S_0 = \\lbrace x: |\\overline{X_n} - \\mu_0| \\lt c\\rbrace . \\ S_1 = S_0^c \\\\\\ \\\\ S_1 就叫做\\pmb{批判性区域} $$\n在大多数情况下，用统计量$T = r(\\pmb X)$表示，叫做rejection region 检验统计和拒绝域 $$ 对于一个分布X, T = r(X)是统计量，R是实线 的子集\\\\\\ \\\\ 假设一个检验过程有以下假设 \\\\\\ \\\\ H_0: \\theta \\in \\Omega_0 , H_1: \\theta \\in \\Omega_1 \\\\\\ \\\\ 若在T \\in R时，我们\\pmb{拒绝 H_0} \\\\\\ \\\\ 那么T叫做\\pmb{检验统计},R叫做\\pmb{拒绝域} $$\n幂函数和错误类型 幂函数 $$ \\pi (\\theta | \\delta) 叫做测试\\delta 的幂函数 \\\\\\ \\\\ 并且 \\pi (\\theta | \\delta) = Pr(X \\in S_1 | \\theta) , \\theta \\in \\Omega \\\\\\ \\\\ 或者 \\pi (\\theta | \\delta) = Pr(T \\in R| \\theta) , \\theta \\in \\Omega $$\n两种错误类型 Type I 弃真 $H_0: \\theta \\in \\Omega_0$是真的，但是我们reject $H_0$\nType II 纳伪 $H_0: \\theta \\in \\Omega_0$是假的，但是我们not to reject $H_0$\n显著性($\\alpha$)水平 定义 显著水平，也称为α水平或显著性水平，是用于衡量在假设检验中拒绝原假设的临界值。通常情况下，显著水平的取值为0.05或0.01，代表了在一次实验中，我们允许犯错误的概率大小。\np-值 定义 一般的，p值是最小的显著性水平\\alpha_0\n计算 假设检验的步骤 确定原假设和备择假设：原假设（null hypothesis）是我们想要检验的陈述，通常是指样本数据与总体相同。备择假设（alternative hypothesis）则是与原假设相反的假设，通常是指样本数据与总体不同。\n确定显著水平：显著水平（significance level）是判断是否拒绝原假设的临界值，通常设定为0.05或0.01。\n选择合适的假设检验方法：根据样本数据类型和实验设计等因素，选择合适的假设检验方法，如t检验、F检验、卡方检验等。\n计算统计量：根据假设检验方法的要求，计算相应的统计量，如t值、F值、卡方值等。\n确定拒绝域：拒绝域是指统计量达到或超过一定临界值时，我们会拒绝原假设的范围。\n计算p值：p值是指在原假设成立的情况下，出现观察值或更极端观察值的概率。通过计算p值，我们可以判断观察值是否落在了拒绝域内。\n做出结论：根据p值或统计量是否达到拒绝域，来判断是否拒绝原假设。如果拒绝原假设，则说明样本数据与总体存在显著差异；反之，则说明样本数据与总体相同。\n几种检验 t检验 $$ 单样本t检验 \\\\\\ \\\\ t = \\frac{X-\\mu}{\\sigma / \\sqrt{n}} \\\\\\ \\\\ 双样本t检验 \\\\\\ \\\\ 独立样本t检验 \\\\\\ \\\\ t = \\frac{X_1 -X_2}{\\sqrt{\\sigma^2_1/n_1 + \\sigma_2^2/n_2}} \\\\\\ \\\\ 配对样本t检验 \\\\\\ \\\\ t = \\frac{D}{\\sigma_D/\\sqrt n} \\\\\\ \\\\ 其中,D为配对样本的差值,\\sigma_D为D的标准差 $$\nF检验 ","date":"2022-12-10T23:58:47+08:00","permalink":"https://downeyflyfan.com/p/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/","title":"假设检验"},{"content":"一、瞬时功率 $$ p = vi \\\\\\ \\\\ v = V_mcos(\\omega t + \\theta_{v}) \\\\\\ \\\\ i = I_mcos(\\omega t + \\theta_i) \\\\\\ \\\\ 更换时刻，可以得到 \\\\\\ \\\\ v = V_m cos(\\omega t + \\theta_v - \\theta_i) \\\\\\ \\\\ i = I_mcos\\omega t \\\\\\ \\\\ \\therefore p = vi =V_mI_m cos(\\omega t + \\theta_v - \\theta_i)cos\\omega t \\\\\\ \\\\ 根据积化和差与和差化积公式 \\\\\\ \\\\ p =\\frac{V_mI_m}{2}cos(\\theta_v - \\theta_i) + \\frac{V_mI_m}{2} cos(\\theta_v - \\theta_i)cos2\\omega t - \\frac{V_mI_m}{2}sin(\\theta_v - \\theta_i)sin2\\omega t [1] $$\n二、平均功率与无功功率 2.1 定义 $$ 上述[1]式中 \\\\\\ \\\\ 令 P = \\frac{V_mI_m}{2}cos(\\theta_v -\\theta_i )， Q = \\frac{V_mI_m}{2} sin(\\theta_v-\\theta_i) \\\\\\ \\\\ 其中,P = \\frac{1}{T} \\int_{t_0}^{t_0+T} pd\\tau 被称为平均功率\\\\\\ \\\\ Q被称为无功功率 \\\\\\ \\\\ 这样一来，p = P + Pcos2\\omega t -Qsin2\\omega t $$\n2.2 纯电阻电路的功率 $$ p = P + Pcos2\\omega t \\\\\\ \\\\ 此时，无功功率为0 $$\n2.3 纯电感电路的功率 $$ 电压和电流的相位差为90^{\\circ}，即\\theta_v-\\theta_i = 90^{\\circ}\\\\\\ \\\\ p = -Qsin2\\omega t \\\\\\ \\\\ \\pmb{纯电感电路的电路的平均功率为0} \\\\\\ \\\\ $$\n2.4 纯电容电路 $$ 电流超前电压90^{\\circ} ，即\\theta_v- \\theta_i = - 90^{\\circ}\\\\\\ \\\\ p = -Qsin2\\omega t \\\\\\ \\\\ 同样，平均功率为0 $$\n2.5 功率因数 $$ 功率因数 pf = cos(\\theta_v - \\theta_i) \\\\\\ \\\\ 无功因数 rf(reactive \\ factor) = sin(\\theta_v - \\theta_i) $$\n三、均方根和功率计算 $$ 平均功率 P = \\frac{1}{T}\\int_{t_0}^{t_0+T}\\frac{V_m^2cos^2(\\omega t + \\phi_v)}{R}dt = \\frac{1}{R}\\Big[\\frac{1}{T}\\int_{t_0}^{t_0+T}V_m^2cos^2(\\omega t + \\phi_v)dt\\Big] \\\\\\ \\\\ 根据均方根公式 \\\\\\ \\\\ 我们知道P = \\frac{V_{rms}^2}{R} = I_{rms}^2R\\\\\\ \\\\ P = V_{eff}I_{eff}cos(\\theta_v - \\theta_i) \\\\\\ \\\\ Q = V_{eff}I_{eff}sin(\\theta_v - \\theta_i) $$\n四、复功率 4.1 功率三角形 4.2定义 $$ S = P + jQ \\\\\\ \\\\ tan(\\theta_v -\\theta_i) = \\frac{Q}{P} = tan\\theta\\\\\\ \\\\ |S| = \\sqrt{P^2 + Q^2} $$\n五、功率计算 $$ S = P + jQ \\\\\\ \\\\ 经过推导：S = V_{eff}I_{eff}e^{j(\\theta_v-\\theta_i)} [1]\\\\\\ \\\\ 也可以变为: S = V_{eff}I_{eff} e^{j(\\theta_v - \\theta_i)} = V_{eff}e^{j\\theta_v} \\cdot I_{eff}e^{-j\\theta_i} \\\\\\ \\\\ S = \\pmb V_{eff}\\cdot \\pmb I^{}_{eff}[2] \\\\\\ \\\\ 其中，I^{eff}是I{eff}的共轭复数 \\\\\\ \\\\ 同时S = \\frac{1}{2}VI [3] $$\n5.1 复功率的变换形式 5.1.1 图示 5.1.2 推导 $$ \\pmb V_{eff} = \\pmb I_{eff}\\cdot Z \\\\\\ \\\\ = \\pmb I_{eff}(R+jX) \\\\\\ \\\\ \\therefore S = \\pmb{V_{eff}I^*{eff}} \\\\\\ \\\\ = |\\pmb{I{eff}^2}| (R+jX) \\\\\\ \\\\ = |\\pmb{I_{eff}^2}|R+j|\\pmb{I_{eff}^2}|X\\\\\\ \\\\ \\therefore P = |\\pmb{I_{eff}^2}|R = \\frac{1}{2}I_m^2R \\\\\\ \\\\ Q = |\\pmb{I_{eff}^2}|X = \\frac{1}{2}I_m^2X $$\n5.2 最大功率传输定律 5.2.1 图示 5.2.2 推导 $$ \\pmb I = \\frac{V_{Th}}{R_{Th}+R_L+j(X_{Th}+X_L)} \\\\\\ \\\\ P_L = \\pmb I^2 \\cdot R \\\\\\ \\\\ \\pmb P_L = \\frac{V_{Th}^2}{(R_{Th}+R_L)^2+(X_{Th}+X_L)^2} \\\\\\ \\\\ 通过求导分析可得 \\\\\\ \\\\ \\pmb{当Z_L = Z^*{Th}时，负载功率最大} \\\\\\ \\\\ 此时\\pmb{P{max} = \\frac{1}{4}\\frac{V_{Th}^2}{R_L} = \\frac{1}{8}\\frac{V_m^2}{R_L}} $$\n5.2.3 限制Z时的最大功率传输 $$ |Z_L| = |Z_{Th}|时,负载平均功率最大 $$\n","date":"2022-12-08T23:54:44+08:00","image":"https://downeyflyfan.com/p/%E6%AD%A3%E5%BC%A6%E7%A8%B3%E6%80%81%E5%8A%9F%E7%8E%87%E8%AE%A1%E7%AE%97/1_hu3d03a01dcc18bc5be0e67db3d8d209a6_78765_120x120_fill_q75_box_smart1.jpg","permalink":"https://downeyflyfan.com/p/%E6%AD%A3%E5%BC%A6%E7%A8%B3%E6%80%81%E5%8A%9F%E7%8E%87%E8%AE%A1%E7%AE%97/","title":"正弦稳态功率计算"},{"content":"参数的点估计 矩估计法 用样本矩估计总体矩 以样本矩估计总体矩\n$$ 设 \\mu_k = E(X^k), k = 1, \u0026hellip; m存在, v_k = E{[X-E(X)]^k} \\\\\\ \\\\ 即\\hat{\\mu}k = A_k = \\frac{1}{n}\\sum{i=1}^nX_i ^k， \\hat{v}k = B_k = \\frac{1}{n}\\sum{i=1}^n(X_i - \\overline X)^k \\\\\\ \\\\ \\hat{g}(\\mu_1\u0026hellip;\\mu_m) = g(A_1 \u0026hellip; A_m)，其中g是连续函数 $$\n基本步骤 $$ 设总体X有m个未知参数\\theta_1 \u0026hellip;\\theta_m，\\mu_1\u0026hellip;\\mu_m 存在 $$\n求前$m$阶矩关于$m$个参数的函数 $$ \\mu_k = E(X^k) = g_k(\\theta_1,\u0026hellip;\\theta_m)，k=1,\u0026hellip;,m $$\n求各参数关于前m阶矩阵的反函数 $$ \\theta_k =h_k(\\mu_1,\u0026hellip;,\\mu_k)，k=1,\u0026hellip;,m $$\n用样本各阶矩$A_1,\u0026hellip;,A_m$代替总体各阶矩$\\mu_1\u0026hellip;,\\mu_m$ $$ \\hat{\\theta}_k = h_k(A_1,\u0026hellip;,A_k)，k=1,\u0026hellip;,m $$\n极大似然估计法(M.L.E.) 定义 选择参数$\\theta$的估计量，使得似然函数的值最大\n对于离散型变量 $$ L(\\theta) = P\\lbrace X_1=x_1,\u0026hellip;,X_n=x_n \\rbrace = p(x_1;\\theta)\u0026hellip;p(x_n;\\theta) = \\prod_{i=1} ^n p(x_i;\\theta)\\\\\\ \\\\ 极大似然原理为\\\\\\ \\\\ L(\\hat{\\theta}(x_1,\u0026hellip;,x_n)) = \\underset{\\theta \\in \\Theta}{max} L(\\theta) \\\\\\ \\\\ \\hat{\\theta}(x_1,\u0026hellip;,x_n)被称为极大似然估计值 \\\\\\ \\\\ 相应统计值\\hat{\\theta}(X_1,\u0026hellip;,X_n) 被称为\\theta 的极大似然估计量(MLE) $$\n对于连续型随机变量\n$$ f(x,\\theta)，\\theta \\in \\Theta \\\\\\ \\\\ 对于样本(X_1,X_2,\u0026hellip;,X_n)，其观察值(x_1,\u0026hellip;,x_n)，似然函数为L(\\theta) = \\prod_{i=1}^n f(x_i,\\theta) \\\\\\ \\\\ 极大似然原理：L(\\hat{\\theta}(x_1,\u0026hellip;,x_n)) = \\underset{\\theta \\in \\Theta}{max} \\ L(\\theta) \\\\\\ \\\\ 其中，\\theta = (\\theta_1,\u0026hellip;\\theta_k) $$\n极大似然估计的求解 记$ln L(\\theta) = l(\\theta)$，称为对然似然函数 $$ 利用\\frac{\\partial l(\\theta)}{\\partial \\theta}\\Big|_{\\hat{\\theta},1\\le i \\le k} = 0,i=1,2\u0026hellip;k解得\\hat{\\theta}，i=1,2\u0026hellip;k $$\n利用$L(\\theta)$关于某个$\\theta_i$单调，此时$\\hat{\\theta_i}$即为$\\theta_i$的极大似然估计值o\n若$\\hat{\\theta}(X_1,\u0026hellip;,X_n)$ 是$\\theta$的极大似然估计量，则$g(\\theta)$的极大似然估计量为$g(\\hat{\\theta}(X_1,\u0026hellip;X_n))$\n从Bernulli分布中取样 $$ 对于Bernulli 分布，极大似然函数为 \\\\\\ \\\\ f(\\pmb x|\\theta) = \\theta^{x_i}(1-\\theta)^{(1-x_i)} \\\\\\ \\\\ L(\\theta) =log f_n(\\pmb x|\\theta) = \\sum_{i=1}^n x_ilog(\\theta) + \\sum_{i=1}^n(1-x_i) log(1-\\theta) \\\\\\ \\\\ L(\\theta) = \\Big(\\sum_{i=1}^nx_i \\Big) \\ log(\\theta) + \\Big( n - \\sum_{i-1}^n x_i \\Big)log(1 - \\theta) $$\n从均值未知的正态函数中取样 $$ f(\\pmb x | \\mu) = \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{1}{2\\sigma^2}\\sum_{i=1}^n(x_i - \\mu)^2} \\\\\\ \\\\ 显然，当Q(\\mu) = \\sum_{i=1}^n(x_i - \\mu)^2最小时，上式最大 \\\\\\ \\\\ \\therefore 当\\widehat{\\mu} = \\overline{x_n}时，上式最大 $$\n从均值和方差均未知的正态函数中取样 $$ f_n(\\pmb x|\\mu,\\sigma^2) \\\\\\ \\\\ L(\\theta) = log f_n(\\pmb x|\\mu,\\sigma^2) \\\\\\ \\\\ L(\\theta) = -\\frac{n}{2} ln(2\\pi) - \\frac{n}{2} ln(\\sigma^2) - \\frac{1}{2\\sigma^2}\\sum_{i=1}^n (x_i-\\mu)^2 \\\\\\ \\\\ 首先找到\\widehat{\\mu}(\\sigma^2) = \\overline{x_n},如上所示,并代入上式 \\\\\\ \\\\ 然后求\\frac{dL(\\theta)}{d\\theta} = 0 \\\\\\ \\\\ 得到\\sigma^2 = \\frac{1}{n}\\sum_{i=1}^n\\Big( X_i - \\overline{X_n} \\Big) \\\\\\ \\\\ 所以\\widehat{\\theta} = (\\widehat{\\mu},\\sigma^2) = (\\overline{X_n},\\frac{1}{n}\\sum_{i=1}^n\\Big( X_i - \\overline{X_n} \\Big)) $$\n从均匀分布中取样 $$ 当均匀分布的范围是[0,\\theta] \\\\\\ \\\\ f(\\pmb x|\\theta) = \\begin{cases} \\frac{1}{\\theta} \u0026amp; 0 \\le x \\le \\theta \\\\ 0 \u0026amp; otherwise \\end{cases} \\\\\\ \\\\ \\therefore joint \\ p.d.f. \\\\\\ \\\\ f_n(\\pmb x|\\theta) = \\begin{cases} \\frac{1}{\\theta^n} \u0026amp; 0 \\le x_i \\le \\theta \\\\ 0 \u0026amp; otherwise \\end{cases} \\\\\\ \\\\ \\therefore joint \\ p.d.f. \\\\\\ \\\\ \\because \\theta \\ge x_i \\\\\\ \\\\ 所以为了使f_n(\\pmb x|b)最大 \\\\\\ \\\\ \\widehat{\\theta} = max(X_1,\u0026hellip;,X_n) $$\n缺点与性质 均匀分布的M.L.E.不存在\n有些时候，M.L.E.不唯一\n如果$\\widehat{\\theta}$是$\\theta$的极大似然估计量,那么$g(\\widehat{\\theta})$也是$g(\\theta)$的极大似然估计量\n估计量的评选准则 无偏性准则(unbiased) 定义 $$ \\delta是参数为\\theta的函数g的估计量 \\\\\\ \\\\ 那么若E_\\theta(\\delta(X)) = g(\\theta)对于所有\\theta都成立 \\\\\\ \\\\ 那么\\delta叫做\\pmb{无偏估计量} $$\n偏差 均方误差 $$ \\Big[E_\\theta(\\delta(X)) - g(\\theta)\\Big]叫做\\pmb{偏差} \\\\\\ \\\\ E_\\theta\\Big[(\\delta - g(\\theta)) \\Big]^2叫做\\pmb{均方误差 \\ M.S.E.} $$\n实例 均值的无偏估计 $$ X = (X_1,\u0026hellip;,X_n)的均值和方差有限 \\\\\\ \\\\ g(\\theta) = E_\\theta(X_i) \\\\\\ \\\\ 那么显然,\\overline{X_n}就是g(\\theta)的无偏估计\\\\\\ \\\\ 它的均方误差为\\frac{Var_\\theta(X_1)}{n} $$\n方差的无偏估计 $$ X = (X_1,\u0026hellip;,X_n)的方差有限 \\\\\\ \\\\ 那么X方差的无偏估计为 \\\\\\ \\\\ \\widehat{\\sigma}1^2 = \\frac{1}{n-1} \\sum{i=1}^n(X_i - \\overline{X_n})^2 $$\n从泊松分布中取样 $$ 假设一个泊松分布的均值\\theta未知 \\\\\\ \\\\ 那么\\overline{X_n}和\\hat{\\sigma}_1^2 都是它的无偏估计 \\\\\\ \\\\ 因为其均值和方差相等 \\\\\\ \\\\ 所以\\alpha \\overline X_n + (1-\\alpha)\\hat{\\sigma}_1^2也可以是\\theta的无偏估计 \\\\\\ \\\\ 因为上式的期望为\\theta $$\n有效性准则 定义 设$\\theta_1,\\theta_2$是$\\theta$的两个无偏估计，若$Var(\\hat{\\theta}_1)\\le Var(\\hat{\\theta}_2)$对于一切$\\theta \\in \\Theta$ 成立，且不等号至少对某一$\\theta\\in\\Theta$成立,则称$\\hat{\\theta}_1$比$\\hat{\\theta}_2$有效\n均方误差准则 $$ 设\\hat{\\theta}是参数\\theta的点估计，方差存在\\\\\\ \\\\ 则称E(\\hat{\\theta}-\\theta)^2是估计量的均方误差，记为Mse(\\hat{\\theta}) \\\\\\ \\\\ Mse(\\hat{\\theta}) = E(\\hat{\\theta} - \\theta)^2 = Var(\\hat{\\theta})+[E(\\hat{\\theta})-\\theta]^2 \\\\\\ \\\\ 若\\hat{\\theta}是\\theta的无偏估计 \\\\\\ \\\\ 则有Mse(\\hat{\\theta}) = Var(\\hat{\\theta}) \\\\\\ \\\\ 设\\hat{\\theta}_1 ,\\hat{\\theta}_2是\\theta的两个估计量 \\\\\\ \\\\ 如果Mse(\\hat{\\theta}_1) \\le Mse(\\hat{\\theta}_2)对一切\\theta \\in \\Theta 成立 \\\\\\ \\\\ 且不等号至少对某一\\theta \\in \\Theta成立，则称\\hat{\\theta}_1优于\\hat{\\theta}_2 $$\n相合性准则 $$ 设\\hat{\\theta}_n = \\hat{\\theta}(X_1,\u0026hellip;,X_n)为参数\\theta的估计量 \\\\\\ \\\\ 若对于任意\\theta \\in \\Theta，当n \\longrightarrow + \\infin时，\\hat{\\theta}_n \\overset{P}{\\longrightarrow} \\theta. \\\\\\ \\\\ 即\\forall \\varepsilon \\gt 0,有 \\underset{n \\longrightarrow + \\infin}{lim}P \\lbrace |\\hat{\\theta}_n - \\theta| \\ge \\varepsilon \\rbrace = 0成立 \\\\\\ \\\\ 则称\\hat{\\theta_n}为\\theta的\\pmb{相合估计量}或\\pmb{一致估计量} $$\n置信区间 定义 $$ X = (X_1,\u0026hellip;,X_n)是一个参数为\\theta的分布 \\\\\\ \\\\ g(\\theta)是一个关于\\theta的实值函数 \\\\\\ \\\\ Pr(A\\lt g(\\theta) \\lt B) \\ge \\gamma \\\\\\ \\\\ 区间(A,B)叫做系数\\gamma对于g(\\theta)的\\pmb{置信区间}\\\\\\ \\\\ 如果上述不等式对于所有\\theta都成立 \\\\\\ \\\\ 那么我们称这个置信区间是\\pmb{准确的} \\\\\\ \\\\ 当观察到A =a,B=b时，(a,b)叫做置信区间的\\pmb{观察值} $$\n正态分布均值的置信区间 $$ A = \\overline{X_n} - T_{n-1}^{-1}\\Big( \\frac{1 + \\gamma}{2} \\Big) \\frac{\\sigma\u0026rsquo;}{\\sqrt{n}} \\\\\\ \\\\ B = \\overline{X_n} + T_{n-1}^{-1}\\Big( \\frac{1 + \\gamma}{2} \\Big) \\frac{\\sigma\u0026rsquo;}{\\sqrt{n}} \\\\\\ \\\\ 其中, T ～ t(n-1) ， p = T_{n-1}(c) = P\\lbrace T \\le c \\rbrace，并且 c = T_{n-1}^{-1}(p) $$\n单侧置信区间 定义 $$ Pr(A \\lt g(\\theta)) \\ge \\gamma \\\\\\ \\\\ A叫做\\pmb{置信下限}, (A,+\\infin)叫做单侧置信区间 \\\\\\ \\\\ 相对的,Pr(g(\\theta) \\lt B) \\ge \\gamma \\\\\\ \\\\ B叫做\\pmb{置信上限}, (-\\infin,B)叫做单侧置信区间 \\\\\\ $$\n正态分布的单侧置信区间 $$ A = \\overline{X_n} - T_{n-1}^{-1} (\\gamma) \\frac{\\sigma\u0026rsquo;}{\\sqrt{n}} \\\\\\ \\\\ B = \\overline{X_n} + T_{n-1}^{-1}(\\gamma) \\frac{\\sigma\u0026rsquo;}{\\sqrt{n}} \\\\\\ \\\\ 其中, T ～ t(n-1) ， p = T_{n-1}(c) = P\\lbrace T \\le c \\rbrace，并且 c = T_{n-1}^{-1}(p) $$\nPivotal 枢轴变量 ","date":"2022-12-08T03:19:37+08:00","permalink":"https://downeyflyfan.com/p/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/","title":"参数估计"},{"content":"统计推断 统计量 一个布居有一个给定的分布：$X$\n从$X$中抽取的个体：$X_i$\n$X$的一个样本：$\\lbrace X_i \\rbrace$或者$\\lbrace X_1,X_2,\u0026hellip;,X_n \\rbrace$\n简单随机抽样产生独立同分布的样本：$\\lbrace X_1,.X_2,\u0026hellip;,X_n \\rbrace$\n样本值：$\\lbrace x_1,x_2, \u0026hellip; , x_n \\rbrace$\n统计量\n$$ X_i(i=1,2,\u0026hellip;,n)是一个被观察的随机变量 \\\\\\ \\\\ r是一个随机实值函数 \\\\\\ \\\\ 那么T = r(X_1,\u0026hellip;,X_n)叫做\\pmb{statistic} 统计量 $$\n参数空间 样本参数 反映样本特征的量，均值、方差\u0026hellip; 参数空间 构成参数的所有取值的集合$\\Omega$或向量$(\\theta_1,\u0026hellip; ,\\theta_n)$ 先验分布 后验分布 似然函数 先验分布 定义 未得到数据前对结果进行猜测的分布 解释 不考虑条件概率的分布 后验分布 定义 考虑条件概率的分布 定理 $$ 假设X_i(i=1,2\u0026hellip;)的分布为f(x|\\theta) \\\\ \\\\\\ 先验分布为\\xi(\\theta) \\\\ \\\\\\ \\xi(\\theta|\\pmb x) = \\frac{f(x_1|\\theta) \u0026hellip;f(x_n|\\theta) \\xi(\\theta)}{g_n(\\pmb x)} \\\\\\ \\\\ 其中，g_n(\\pmb x)为X_i的边缘分布函数 $$\n似然函数 $$ 将f(\\pmb x|\\theta)看成是\\theta的函数 \\\\\\ \\\\ 并且x_i 独立同分布 \\\\\\ \\\\ 那么f_n(\\pmb x|\\theta) = f(x_1,x_2,\u0026hellip;,x_n|\\theta) \\overset{i.i.d.}{=} \\prod_{i=1}^nf(x_i|\\theta) \\\\\\ \\\\ 被称作似然函数 $$\nBayes 估计量 Estimate / Estimator $$ 实值函数\\delta (X_1,\u0026hellip;,X_n)叫做X_1,\u0026hellip;,X_n的估计量 \\\\\\ \\\\ 若观察值为X_1 = x_1,\u0026hellip;X_n =x_n \\\\\\ \\\\ \\delta(x_1,\u0026hellip;,x_n)叫做\\theta的估计 $$\n损失函数 定义 $$ 实值函数L(\\theta,a), \\theta \\in \\Omega , a 是实数 $$\n解释 如果参数为$\\theta$,估计为a，那么会损失$L(\\theta,a)$ 分类 平方误差损失函数 $$ L(\\theta,a) = (\\theta -a)^2 $$\n绝对误差损失函数 $$ L(\\theta,a) = |\\theta -a| $$\nBayes估计量 定义 $$ 损失函数 \\\\\\ \\\\ E[L(\\theta, a) | X] = \\int_{\\Omega} L(\\theta,a)\\xi(\\theta | \\pmb x)d \\theta \\\\\\ \\\\ 使得E[L(\\theta, a) | X]最小的a = \\xi^*叫做Bayes估计量 \\\\\\ \\\\ 当X = x 被观察到时，\\xi^*就叫做Bayes估计 $$\n推论 平方误差损失函数 $$ 对于平方误差损失函数 \\\\\\ 假设\\theta是一个实值参数 \\\\\\ \\\\ 且后验平均值E(\\theta |X)有限，则 \\\\\\ \\\\ \\theta的Bayes估计量为 \\xi^*(X) = E(\\theta |X) $$\n绝对误差损失函数 $$ 对于绝对误差损失函数 \\\\\\ \\\\ \\xi^*(X) = \\theta后验分布的中位数 $$\n几个分布 $\\chi^2$分布 定义 $$ X_1 \u0026hellip; X_n相互独立，X_i ～N(0,1)，则 \\\\\\ \\\\ \\chi^2 ～ \\sum_{i=1}^nX_i^2 服从自由度为n的\\chi^2分布 \\\\\\ \\\\ 记为\\chi^2 ～\\chi^2(n) $$\n性质 设$\\chi^2 ～\\chi^2(n)$,则有$E(\\chi^2) =n,Var(\\chi^2) = 2n$\n$\\chi^2$分布可加性\n设$Y～\\chi^2(n),i=1,2\u0026hellip;$，且$Y_1,Y_2$相互独立，有$Y_1 + Y_2 ～\\chi^2(n_1+ n_2)$ t分布 定义 $$ 设 X ～N(0,1),Y～\\chi^2(n)，并且假设X,Y相互独立 \\\\\\ \\\\ 则称 T = \\frac{X}{\\sqrt{Y/n}} 服从自由度为n的t分布 \\\\\\ \\\\ 记为 T ～ t(n) \\\\\\ \\\\ t(n)分布的概率密度函数为 \\\\\\ \\\\ f(t) = \\frac{\\Gamma (\\frac{n+1}{n})}{\\sqrt{n\\pi}\\Gamma(\\frac{n}{2})} (1+\\frac{t^2}{n})^{-\\frac{n+1}{2}}，-\\infin \\lt t \\lt + \\infin $$\nF分布 定义 $$ X～\\chi^2(n_1)，Y～\\chi^2(n_2) \\\\\\ \\\\ 称随机变量F = \\frac{X/n_1}{Y/n_2}服从自由度(n_1,n_2)的F分布 \\\\\\ \\\\ 记为F～F(n_1,n_2) \\\\\\ \\\\ 其中，n_1为第一自由度，n_2为第二自由度 $$\n性质 $F～F(n_1,n_2)$，则$F^{-1}～F(n_2,n_1)$ 正态分布下的抽样分布 定理1 $$ 设 X_1 \u0026hellip; X_n是来自正态总体N(\\mu,\\sigma^2) 的简单随机样本，有 \\\\\\ \\\\ \\overline X ～ N\\Big(\\mu,\\frac{\\sigma^2}{n}\\Big) \\\\\\ \\\\ \\frac{(n-1)S^2}{\\sigma^2} ～ \\chi^2(n-1)\\\\\\ \\\\ \\overline X 与S^2 相互独立 \\\\\\ \\\\ \\frac{\\overline X - \\mu}{S/\\sqrt{n}} ～ t(n-1) $$\n","date":"2022-12-08T02:49:15+08:00","image":"https://downeyflyfan.com/p/%E7%BB%9F%E8%AE%A1%E6%8E%A8%E6%96%AD/1_hua1e7aca0572cc6cac23f9744770eccdd_7413_120x120_fill_q75_box_smart1.jpg","permalink":"https://downeyflyfan.com/p/%E7%BB%9F%E8%AE%A1%E6%8E%A8%E6%96%AD/","title":"统计推断"},{"content":"伽利略-牛顿相对论 传统思维\n狭义相对论与洛伦兹变换 狭义相对论的基本原理 光速不变原理 光速是绝对的，它相对于任何物体的速度都是不变的\n狭义相对论原理 物理规律在一切惯性参考系中都是等价的\n六大公式 钟慢效应(时间) 图示 推导 $$ 对于车外的人来说, \\Delta t = \\frac{2\\sqrt{d^2 + (\\frac{1}{2}v\\Delta t)^2}}{c} \\\\\\ \\\\ 对于车内的人来说：\\Delta t\u0026rsquo; = \\frac{2d}{c} \\\\\\ \\\\ 根据以上两式可得：\\Delta t = \\frac{\\Delta t\u0026rsquo; }{\\sqrt{1-v^2/c^2}} \\\\\\ $$\n尺短效应(长度) 图示 推导 $$ 对于车外的人来说: \\\\\\ \\\\ \\Delta t = \\frac{l}{c-v}+\\frac{l}{c+v} \\\\\\ \\\\ 对于车内的人来说 \\\\\\ \\\\ \\Delta t\u0026rsquo; = \\frac{2l_0}{c} \\\\\\ \\\\ 由以上两式可知: L = \\sqrt{1-v^2/c^2} \\cdot L_0 $$\n洛伦兹变换(速度) $$ \\begin{cases} x = \\gamma (x\u0026rsquo;+vt\u0026rsquo;) \\\\ y =y\u0026rsquo; \\\\ z = z\u0026rsquo; \\\\ t = \\gamma (t\u0026rsquo; + vx\u0026rsquo;/c^2)\\end{cases} \\Rightarrow\\begin{cases}dx =\\gamma(dx\u0026rsquo; + vdt\u0026rsquo;)\\\\ dy = dy\u0026rsquo; \\\\ dz = dz\u0026rsquo; \\\\ dt = \\gamma(dt\u0026rsquo; + vdx\u0026rsquo;/c^2) \\end{cases} \\\\\\ \\\\ 我们可以得出: \\frac{dx}{dt} = \\frac{dx\u0026rsquo;+vdt\u0026rsquo;}{dt\u0026rsquo;+vdx\u0026rsquo;/c^2} = \\frac{\\frac{dx\u0026rsquo;}{dt\u0026rsquo;}+v}{1+\\frac{v}{c^2}\\frac{dx\u0026rsquo;}{dt\u0026rsquo;}} \\\\\\ \\\\ 其中 u =\\frac{du}{dt}，u\u0026rsquo; =\\frac{dx\u0026rsquo;}{dt\u0026rsquo;} \\\\\\ \\\\ \\therefore u_x = \\frac{u_x\u0026rsquo;+ v}{1+u_x\u0026rsquo;v/c^2} \\\\\\ \\\\ 其中，v是坐标系S\u0026rsquo;相对于坐标系S的移动速度 \\\\\\ \\\\ u和u\u0026rsquo;分别是两个坐标系中移动物体的速度 $$\n相对论系数 第一个图示 $$ 如上图，黑色坐标系为一在原地不动的人，蓝色坐标系为一前进的火车 \\\\\\ \\\\ 对于静止不动的人来说，在t=0时刻，一光束从火车上反射到石头处(蓝色竖杠) \\\\\\ \\\\ 在t=t时刻，光束到达石头，火车前进了vt \\\\\\ \\\\ 此时，人离石头距离x = ct $$\n第二个图示 $$ 对于火车来说，在t=t时刻,石头离它的距离x\u0026rsquo;=ct\u0026rsquo; \\\\\\ \\\\ 由于两个时空因为引力产生的度量不同 \\\\\\ \\\\ \\therefore\\begin{cases} x = \\gamma(x\u0026rsquo;+vt\u0026rsquo;) \\\\ x\u0026rsquo; = \\gamma(x-vt)\\end{cases} \\\\\\ \\\\ 又\\begin{cases} x = ct \\\\ x\u0026rsquo;= ct\u0026rsquo; \\end{cases} \\\\\\ \\\\ \\Rightarrow \\gamma = \\frac{1}{\\sqrt{1-\\frac{c^2}{v^2}}} $$\n质量 $$ 在一次动量守恒的碰撞中，从撞击者和被撞击者的角度分别来看\\\\\\ \\\\ mv = (m+m_0)u [1] \\\\\\ \\\\ -mv = (m+ m_0)u\u0026rsquo; [2] \\\\\\ \\\\ u =\\frac{u\u0026rsquo;+v}{1+u\u0026rsquo;v/c^2} [3] \\\\\\ \\\\ 根据以上三式可得出： m=\\frac{m_0}{\\sqrt{1-v^2/c^2}} \\\\\\ \\\\ 此时，牛顿方程\\pmb F = \\frac{d\\pmb p}{dt} = \\frac{d(m\\pmb v)}{dt} = m\\frac{d\\pmb v}{dt} + \\pmb v\\frac{dm}{dt} \\pmb{不再成立} $$\n质能与动量 $$ E_k = \\int_0^v \\pmb F\\cdot d\\pmb r = \\int_0^v\\frac{d(m\\pmb v)}{dt}\\cdot d\\pmb r = \\int_0^r \\pmb v \\cdot d(m\\pmb v) \\\\\\ \\\\ \\because \\pmb v\\cdot d(m\\pmb v) = v^2 dm +m\\pmb v \\cdot d\\pmb v \\\\\\ \\\\ 并且，m=\\frac{m_0}{\\sqrt{1-v^2/c^2}} \\Rightarrow dm = \\frac{mvdv}{c^2-v^2} \\\\\\ \\\\ \\pmb{质能方程：E_k = \\int_{m_0}^mc^2dm= mc^2-m_0c^2} \\\\\\ \\\\ 动能方程是质能方程的特殊情况 \\\\\\ \\\\ E_k = mc^2 - m_0c^2 = m_0c^2(\\frac{1}{\\sqrt{1-v^2/c^2}}-1) 泰勒公式展开 \\\\\\ \\\\ = \\frac{1}{2}m_0v^2 + \\frac{3}{8}m_0 \\frac{v^4}{c^3} + \u0026hellip; $$\n相对论公式总结 六大方面: 质量、长度、速度、时间、能量、动量\n$$ m = \\frac{1}{\\sqrt{1-v^2/c^2}}m_0 \\\\\\ \\\\ L = \\sqrt{1-v^2/c^2} L_0 \\\\\\ \\\\ u = \\frac{u\u0026rsquo;+v}{1+u\u0026rsquo;v/c^2} \\\\\\ \\\\ t = \\frac{1}{\\sqrt{1-v^2/c^2}}t_0 \\\\\\ \\\\ \\pmb p = m\\pmb v = \\frac{m_0\\pmb v}{\\sqrt{1-v^2/c^2}} = \\frac{\\sqrt{K^2 + 2Kmc^2}}{c} \\\\\\ \\\\ E = \\Delta mc^2 $$\n","date":"2022-12-07T05:29:32+08:00","image":"https://downeyflyfan.com/p/%E7%8B%AD%E4%B9%89%E7%9B%B8%E5%AF%B9%E8%AE%BA/1_hu2de589d636666dff036e9f7186e7da49_5116_120x120_fill_q75_box_smart1.jpg","permalink":"https://downeyflyfan.com/p/%E7%8B%AD%E4%B9%89%E7%9B%B8%E5%AF%B9%E8%AE%BA/","title":"狭义相对论"},{"content":"并联RLC固有响应 图示 推导 $$ \\frac{v}{R} +\\frac{1}{L}\\int_0^t vd\\tau + I_0 + C\\frac{dv}{dt} = 0 \\\\\\ \\\\ 对t取微分得到:\\frac{1}{R}\\frac{dv}{dt} + \\frac{v}{L} + C\\frac{d^2v}{dt^2} = 0 \\\\\\ \\\\ 整理得: \\frac{d^2 v}{dt^2} + \\frac{1}{RC}\\frac{dv}{dt} +\\frac{v}{LC} = 0 [1] $$\n回顾二次微分方程的解法 $$ 假设 v = A e ^{st} \\\\\\ \\\\ 代入[1]式可以得到: Ae^{st} (s^2 + \\frac{s}{RC} + \\frac{1}{LC}) = 0 \\\\\\ \\\\ 解s^2 + \\frac{s}{RC} + \\frac{1}{LC} = 0 \\\\\\ \\\\ 得 s_1 = -\\frac{1}{2RC} + \\sqrt{(\\frac{1}{2RC})^2 - \\frac{1}{LC}} \\\\\\ \\\\ s_2 = -\\frac{1}{2RC} - \\sqrt{(\\frac{1}{2RC})^2 - \\frac{1}{LC}} \\\\\\ \\\\ 最终得到 v = A_1 e^{s_1 t}+A_2 e ^{s_2 t } \\\\\\ \\\\ 改写s_1,s_2 \\\\\\ \\\\ s_1 = -\\alpha + \\sqrt{\\alpha^2 - \\omega_0^2} \\\\\\ \\\\ s_2 = -\\alpha - \\sqrt{\\alpha^2 - \\omega_0^2} \\\\\\ $$\n固有响应参数 参数 名称 取值 $s_1,s_2$ 特征根 如上 $\\alpha$ 奈培频率 $1/2RC$ $\\omega_0$ 谐振角频率 $1/\\sqrt{LC}$ 响应分类 若为两个不同的实根，则为过阻尼响应\n若为两个相同的实根，则为临界阻尼响应\n若为两个共轭复数根，则为欠阻尼响应\n并联RLC电路固有响应的形式 过阻尼响应 通过解 $$ v(0^+) = A_1 + A_2 \\\\\\ \\\\ \\frac{dv(0^+)}{dt} = \\frac{i_C(0^+)}{C} = s_1A_1 + s_2 A_2 $$\n得到$A_1,A_2$的值，进而得到$v$的值 欠阻尼响应 求解 $$ 令\\omega_d = \\sqrt{\\omega_0^2 - \\alpha^2} \\\\\\ \\\\ v(t) = A_1 e^{(-\\alpha + j\\omega_d)t} + A_2e^{(-\\alpha - j\\omega_d)t} \\\\\\ \\\\ = e^{-\\alpha t}(A_1 cos\\omega_d t + j A_1 sin\\omega_d t + A_2cos\\omega_d t - jA_2 sin\\omega_d t) （使用欧拉公式）\\\\\\ \\\\ = e^{-\\alpha t} [(A_1 + A_2)cos\\omega_d t + (A_1-A_2)sin\\omega_d t] \\\\\\ \\\\ 令B_1 = A_1+A_2， B_2 = A_1 - A_2 \\\\\\ \\\\ v(t) = e^{-\\alpha t} (B_1cos\\omega_d t + B_ 2sin\\omega_d t) \\\\\\ \\\\ 进而得到 \\\\\\ \\\\ \\pmb{v(0^+)= B_1} \\\\\\ \\\\ \\pmb{\\frac{dv(0^+)}{dt} = \\frac{i_c(0^+)}{C} =-\\alpha B_1 + \\omega_d B_2} $$\n特性\n欠阻尼系统中，响应是振荡的\n过阻尼系统里，响应趋近于一个最终值\n临界阻尼响应 $$ \\because s_1 =s_2 =\\alpha \\\\\\ \\\\ \\therefore v(t) = D_1 t e^{-\\alpha t} + D_2 e^{-\\alpha t} \\\\\\ \\\\ v(0^+) = D_2 \\\\\\ \\\\ \\frac{dv(0^+)}{dt} = D_1 - \\alpha D_2 $$\n并联RLC阶跃响应 图示 电路的二次微分方程 $$ I = C\\frac{dv}{dt} + i_L + \\frac{v}{R} \\\\\\ \\\\ 其中, v =L\\frac{di}{dt}，\\frac{dv}{dt} = L\\frac{d^2 i }{dt^2} \\\\\\ \\\\ 代入上式并整理得 \\\\\\ \\\\ \\frac{d^2i_L}{dt^2} + \\frac{1}{RC} \\frac{di_L}{dt} + \\frac{i_L}{LC} = \\frac{I}{LC} $$\n串联RLC的固有响应和阶跃响应 固有响应 图示 结果 $$ 过阻尼： i(t) = A_1e^{s_1t} + A_2 e^{s_2 t} \\\\\\ \\\\ 欠阻尼: i(t) = B_1e^{-\\alpha t} cos\\omega_d t + B_ 2e^{-\\alpha t} sin\\omega_d t \\\\\\ \\\\ 临界阻尼: i(t) = D_1 t e^{-\\alpha t} + D_2 e^{-\\alpha t} \\\\\\ \\\\ 其中，奈培频率 \\alpha = \\frac{R}{2L} \\\\\\ \\\\ 谐振角频率 \\omega_0 =\\sqrt{\\frac{1}{LC}} $$\n双集成运放电路 两级联运算放大器 图示 输入输出电压关系 $$ 对于第一个反相输入端 \\\\\\ \\\\ \\frac{0-v_g}{R_1}+ C\\frac{d(0-v_{o1})}{dt} = 0 \\Rightarrow \\frac{dv_{o1}}{dt} = -\\frac{1}{R_1C_1}v_g \\\\\\ \\\\ 同理: \\frac{dv_{o2}}{dt} = - \\frac{1}{R_2C_2}v_g \\\\\\ \\\\ \\therefore \\frac{d^2v_{o2}}{dt^2} = \\frac{1}{R_1C_1}\\frac{1}{R_2C_2}v_g $$\n具有反馈电阻的两级运算放大电路 图示 输入输出电压关系 $$ 对于第一个反相输入端 \\\\\\ \\\\ \\frac{0-v_g}{R_a} + \\frac{0-v_{o1}}{R_1}+ C\\frac{d(0-v_{o1})}{dt} = 0 \\\\\\ \\\\ \\frac{dv_{o1}}{dt} + \\frac{v_{o1}}{C_1R_1}= -\\frac{v_g}{C_1R_a} \\\\\\ \\\\ 同理: \\frac{dv_o}{dt} +\\frac{v_{o}}{C_2R_2} =-\\frac{v_g}{C_1R_b} \\\\\\ \\\\ 令\\tau_1 = R_1C_1 ， \\tau_2 = R_2C_2 \\\\\\ \\\\ 对上式去微分，可以得到 \\\\\\ \\\\ \\frac{d^2v_o}{dt^2} + (\\frac{1}{\\tau_1}+\\frac{1}{\\tau_2})\\frac{dv_o}{dt} +\\frac{1}{\\tau_1\\tau_2}v_o = \\frac{v_g}{R_aC_1 R_bC_2} \\\\\\ \\\\ 解方程得其特征根为 \\\\\\ \\\\ s_1 = -\\frac{1}{\\tau_1}，s_2 = -\\frac{1}{\\tau_2} $$\n","date":"2022-12-05T04:19:53+08:00","permalink":"https://downeyflyfan.com/p/rlc%E7%94%B5%E8%B7%AF/","title":"RLC电路"},{"content":"基本概念 定义 树是n个节点的有限集，有且仅有一个特定的称为根的节点\n图示 特点\n根节点是唯一的 子树的个数没有限制，但他们一定是互不相交的 树中的概念 结点的度(Degree) 结点拥有的子树数 叶结点 度为0的结点 分支结点 度不为0的节点 内部结点 除了根节点以外的分支节点 树的度 树内各结点的度的最大值 结点的关系 Child 结点的子树 Parent 该结点 Sibing 同一个Parent的Child 其他概念 树的深度(Depth)\n结点的最大层次 有序树\n树中结点的各子树从左至右是有序的，则称其为有序树 森林\nm棵互不相交的树的集合 树的ADT 树的存储结构 Parent表示法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #define MAXSIZE 100 //具体数字依实际情况而定 typedef int TElemType; typedef struct PTNode { TElemType data; int parent; }PTNode; typedef struct { PTNode Nodes[MAXSIZE]; int r,n; }PTree; Child表示法 多重链表表示法 每个结点有多个指针域，每个指针域指向一棵子树的根节点\nChild表示法 把每个结点的孩子结点排列起来，以单链表作为存储结构将他们存储起来\n图示 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 typedef struct CTNode //定义孩子结点 { int child; struct CTNode *next; }*ChildPtr; typedef struct //定义头结点 { TElemType data; ChildPtr firstchild; }CTBox; typedef struct //定义树 { CTBox nodes[MAXSIZE]; int r,n; // 根的位置和结点数 }CTree; Sibling表示法 方法 设置两个指针，指向该结点的fristchild和rightsib\n结构定义 1 2 3 4 5 typedef struct CSNode { TElemType data; struct CSNode *firstchild,*rightsib; }CSNode,*CSTree; 图示 二叉树 定义 n个结点的有限集合，由一个根结点和两棵互不相交的、分别称为根结点的左子树和右子树的二叉树构成\n特点 每个结点最多两棵子树\n左子树和右子树是有顺序的,一定要区分开\n五种形态\n空二叉树\n只有一个根结点\n根结点只有左子树\n根结点只有右子树\n根结点既有左子树又有右子树\n特殊二叉树 斜树 左斜树和右斜树并称斜树 满二叉树 分支节点均有两个子树的二叉树 图示 完全二叉树 定义\n编号为$i(1\\le i\\le n)$的结点与满二叉树中相应位置编号相同的二叉树 特点\n叶子结点只出现在最下两层 最下层的子叶一定集中在左部连续位置 同样结点数的二叉树，完全二叉树的深度最小 图示 二叉树的性质 在二叉树的第$i$层上，最多只有$2^{i-1}$个结点\n深度为$k$的二叉树，至多有$2^k -1$个结点\n叶结点为$n_0$,度为2的结点数为$n_2$，则$n_0 = n_2 + 1$\n具有$n$个结点的完全二叉树的深度为$\\lfloor log_2 n\\rfloor + 1$\n对于完全二叉树的任意结点$i(1\\le i \\le n)$\n$i=1$，则为根结点 $i \\gt 1$，则parent结点为$\\lfloor i/2 \\rfloor$ $2i \\gt n$，则其无左孩子，否则其左孩子是结点$2i$ $2i+1 \\gt n$，则其无右孩子，否则其右孩子是结点$2i+1$ 二叉树的存储结构 顺序存储结构 一般只用于完全二叉树 二叉链表 结点结构 lchild data rchild 代码表示 1 2 3 4 5 typedef struct BiTNode { TElemType data; struct BiTNode *lchild,*rchild; }BiTNode,*BiTree; 遍历二叉树 定义 从根结点出发，依照某找次序，依次遍历结点，使得每个结点仅被访问一次\n方法 前序遍历 定义 若二叉树为空，则空操作返回;否则先访问根结点,再前序遍历左子树，最后前序遍历右子树\n代码实现 1 2 3 4 5 6 7 8 9 // 通过递归实现前序遍历 void PreOrderTranverse(BiTree *T) { if (T==NULL) return; printf(\u0026#34;%c\u0026#34;,T-\u0026gt;data); //显示结点数据 PreOrderTranverse(T-\u0026gt;lchild); PreOrderTranverse(T-\u0026gt;rchild); } 中序遍历 定义 若二叉树为空，则空操作返回;否则从根结点开始，先中序遍历左子树，再访问根结点，最后中序遍历右子树\n代码实现 1 2 3 4 5 6 7 8 void InOrderTranverse(BiTree *T) { if (T==NULL) return; InOrderTranverse(T-\u0026gt;lchild); printf(\u0026#34;%c\u0026#34;,T-\u0026gt;data); InOrderTranverse(T-\u0026gt;rchild); } 后序遍历 定义可根据上述自行推导\n代码实现\n1 2 3 4 5 6 7 8 void PostOrderTranverse(BiTree *T) { if (T==NULL) return; PostOrderTranverse(T-\u0026gt;lchild); PostOrderTranverse(T-\u0026gt;rchild); printf(\u0026#34;%c\u0026#34;,T-\u0026gt;data); } 二叉树遍历的性质 已知前序和中序遍历(后序和中序遍历)可以确定唯一的二叉树.\n已知前序和后序遍历，无法确定唯一的二叉树.\n二叉树的建立 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 void CreateBiTree(BiTree *T) { TElemType ch; scanf(\u0026#34;%c\u0026#34;,\u0026amp;ch); if (ch == \u0026#34;#\u0026#34;) *T = NULL; else { *T = (BiTree)malloc(sizeof(BiTNode)); if (!*T) exit(0); (*T)-\u0026gt;data = ch; CreateBiTree(\u0026amp;(*T)-\u0026gt;lchild); CreateBiTree(\u0026amp;(*T)-\u0026gt;rchild); } } 线索二叉树 线索 指向前驱和后继的指针被称为线索，加上线索的二叉链表就被称为二叉链表，相应的二叉树被称为线索二叉树(Threaded Binary Tree)\n线索化 定义 对于二叉树使用某种方式遍历使其成为线索二叉树\n结点结构 lchild ltag data rtag rchild ltag为0时，指向lchild;为1时，指向前驱\nrtag为0时，指向rchild;为1时，指向后继\n代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 typedef enum {Link, Thread} PointerTag; // Link == 0 代表指向child; // Link == 1 代表指向tag; typedef struct BiThrNode { TElemType data; struct BiThrNode *lchild,*rchild; PointerTag Ltag,Rtag; }BiThrNode,*BiThrNode; // 中序遍历进行中序线索化 void InThreading (BiThrTree p) { if (p) { InThreading(p-\u0026gt;lchild); InThreading(p-\u0026gt;rchild); } } ","date":"2022-12-05T03:16:42+08:00","permalink":"https://downeyflyfan.com/p/%E6%A0%91tree/","title":"树(Tree)"},{"content":"一些基本概念 定义的 一个或多个字符组成的有限序列，又叫字符串\n子串与主串 连续字符组成的子序列称为该串的子串 包含子串的串称为主串 串的比较 方法 通过在Unicode中的顺序（Unicode的前256个字符与ASCII相同）比较\n例子\n当给定两个串$s=\u0026ldquo;a_1a_2\u0026hellip;a_n\u0026rdquo;,t=\u0026ldquo;b_1b_2\u0026hellip;b_n\u0026rdquo;$时，当且仅当$a_i=b_i,i=1,2\u0026hellip;,n$时，我们认为$s=t$ 串的ADT 串的存储结构 顺序存储结构 \\0用来表示串的结束 链式存储结构 朴素的模式匹配算法 算法说明 对字串的每一个字符作为子串的开头，与目标进行匹配\n代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 int Index(String S, String T, int pos) { int i = pos; //主串当前位置下标 int j = 1; // 子串中当前位置下标 while(i \u0026lt;= StringLength(S) \u0026amp;\u0026amp; j \u0026lt;= StringLength(T)) { if(S[i] == T[j]) { i++; j++; } else { i = i-j+2; j=1; } } if (j \u0026gt; StringLength(T)) return i-T[0]; else return 0; } KMP模式匹配算法 原理 i、j分别为S和T的下标\n定义$next[j]$\n作用 反映$j$值的变化 公式 $$ next[j] =\\begin{cases} 0 \u0026amp; j =1 \\\\ Max \\lbrace k | 1\\lt k \\le (j-1) ，且 \u0026lsquo;p_1p_2\u0026hellip;p_{k-1}\u0026rsquo; = \u0026lsquo;p_{j-k+1}\u0026hellip;p_{j-1}\u0026rsquo; \\rbrace \u0026amp; 当此集合不空时 \\\\ 1 \u0026amp; 其他情况 \\end{cases} $$\n对于第二行公式的解释 从$1$到$j-1$相同的字符串\n$next$值推导的例子 $j$ 1 2 3 4 5 6 7 8 9 $T$ a a a a a a a a b $next[j]$ 0 1 2 3 4 5 6 7 8 代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 // Next数组的实现 void get_next(String T,int *next) { int i,j; i = 1; j = 0; next[1] = 0; while(i\u0026lt;StringLength(T)) { if (j==0 || T[i] == T[j]) { i++; j++; next[i] = j; } else j = next[j]; } } // 返回子串T在S中第pos个字符后的位置 int Index_KMP(String S, String T, int pos) { int i = pos; int j = 1; int next[255]; get_next(T,next); //对串T作分析，得到next数组 while(i \u0026lt;= StringLength(S) \u0026amp;\u0026amp; j \u0026lt;= StringLength(T)) { if (j == 0 || S[i] = T[j]) { i++; j++; } else { j = next[j]; } } if (j\u0026gt;StringLength(T)) return i-StringLength(T); else return 0; } KMP模式匹配算法的改进 设置$nextval[j]$ 数组 例 $j$ 1 2 3 4 5 6 7 8 9 $T$ a b a b a a a b a $next[j]$ 0 1 1 2 3 4 2 2 3 $nextval[j]$ 0 1 0 1 1 4 2 1 0 1 2 3 4 5 6 7 8 9 void get_nextval(String T, int *nextval) { if (j==0 || T[i] == T[j]) { i++; j++; if () } } ","date":"2022-12-04T04:45:14+08:00","permalink":"https://downeyflyfan.com/p/%E4%B8%B2/","title":"串"},{"content":"正弦信号源 正弦响应 表达 $$ v =V_mcos(\\omega t+\\phi) \\ [1] \\\\\\ \\\\ f =\\frac{1}{T} \\\\\\ \\\\ \\omega=2\\pi f =\\frac{2\\pi}{T} \\\\\\ \\\\ 均方根V_{rms} = \\sqrt{\\frac{1}{T} \\int_{t_0}^{t_0+T}V_m^2cos^2(\\omega t +\\phi)dt} \\\\\\ \\\\ 对于[1]，均方根为\\frac{V_m}{\\sqrt{2}} $$\n正弦响应 正弦电源激励下的RL电路 电流与时间 $$ L\\frac{di}{dt} + Ri = V_mcos(\\omega t + \\phi) \\Rightarrow \\\\\\ \\\\ i = \\frac{-V_m}{\\sqrt{R^2+\\omega^2L^2}}cos(\\phi -\\theta)e^{-(R/L)t}+\\frac{V_m}{\\sqrt{R^2+\\omega^2L^2}}cos(\\omega t + \\phi - \\theta) $$\n稳态响应的性质 稳态响应为一正弦函数\n响应频率与信号源频率相同\n稳态响应的最大值$\\neq$ 信号源的幅值\n稳态响应的相位角与信号源的不同\n相量 频域 正弦信号源的相量 $$ 欧拉定律: e^{\\pm j \\theta} = cos\\theta \\pm j\\cdot sin\\theta \\\\\\ \\\\ \\therefore v = V_mcos(\\omega t +\\phi) = V_m \\Re\\lbrace e^{j(\\omega t +\\phi)} \\rbrace = \\Re\\lbrace{V_me^{j\\omega t}\\cdot e^{j\\phi}}\\rbrace \\\\\\ \\\\ 相量\\pmb V = V_me^{j\\phi} =P\\lbrace{V_mcos(\\omega t + \\phi)}\\rbrace \\\\\\ \\\\ \\pmb V = V_mcos\\theta + jV_msin\\theta \\\\\\ \\\\ 注意, 1e^{j\\phi} = 1 \\angle{\\phi}^{\\circ} $$\n相量算术 $$ 加减法 \\\\\\ \\\\ 将向量转换为复数形式加减 \\\\\\ \\\\ \\pmb{乘除法} \\\\\\ \\\\ \\pmb{V_a\\angle{\\phi}^{\\circ} \\pm V_b\\angle{\\theta}^{\\circ} = V_aV_b\\angle({\\phi \\pm \\theta})^{\\circ}} $$\n反相量变换 定义 $$ P^{-1}\\lbrace V_me^{j\\phi}\\rbrace = \\Re \\lbrace V_m e^{j\\omega t} e^{j\\phi}\\rbrace $$\n相量法的特点 $$ 如果V = \\sum_{i=1}^n V_i\\Rightarrow \\pmb{V = \\sum_{i=1}^n V_i} $$\n频域下的无源电路元件 伏安特性 $$ i =I_mcos(\\omega t + \\phi) \\\\\\ \\\\ 对于电阻\\\\\\ \\\\ \\pmb V=R\\pmb I \\\\\\ \\\\ 对于电感 \\\\\\ \\\\ v = L\\frac{di}{dt} = -\\omega LI_msin(\\omega t + \\phi) = -\\omega L I_m cos(\\omega t +\\phi -\\frac{\\pi}{2}) \\\\\\ \\\\ \\pmb V = -\\omega L I_m e^{j(\\phi - \\frac{\\pi}{2})} = -\\omega L I_m e^{j\\phi}e^{j(-\\pi/2)} = j\\omega I_m L e^{j\\phi} = j\\omega L \\pmb I \\\\\\ \\\\ 对于电容 \\\\\\ \\\\ \\pmb V =\\frac{1}{j\\omega C} \\pmb I = -\\frac{j}{\\omega C} \\pmb I $$\n阻抗和电抗 定义 阻抗是一种电气参数，表示一个电路中电流和电压之间的相对关系，它是一个复数量，由实部和虚部组成。\n电抗是一种电气参数，表示一个电路中电流和电压之间的相对关系，但它只是一个实数量，只由实部组成。\n阻抗与导纳 $$ \\pmb V = Z\\pmb I \\\\\\ \\\\ Z = R + jX \\\\\\ \\\\ Z: Impedence \\ R: resistance \\ X: reactance \\\\\\ \\\\ Y = G +jB \\\\\\ \\\\ Y: Admittance \\ G: Conductance \\ B: susceptance $$\n阻抗和电抗 电路元件 阻抗 电抗 电阻 $R$ - 电感 $j\\omega L$ $\\omega L$ 电容 $\\frac{1}{j\\omega C}$ $-1/\\omega C$ 串并联 三角形-星形变换 并联阻抗与串联阻抗的合并 串联阻抗 $$ Z_{ab}=\\sum_{i=1}^n Z_i $$\n并联阻抗与串联阻抗的合并 公式 $$ 导纳 Y= \\frac{1}{Z_{ab}}=\\sum_{i=1}^n\\frac{1}{Z_i} \\\\\\ \\\\ Y = \\frac{1}{Z} = G +jB(S) $$\n导纳和电纳 电路参数 导纳 电纳 电阻 G - 电感 $j(-1/\\omega L)$ $-1/\\omega L$ 电容 $j\\omega C$ $\\omega C$ 三角形-星形变换 图示 关系 与时域下的关系一样一样 电源变换 戴维南-诺顿等效电路 具体情况与时域下的相同 变压器 线性变压器电路 电路图 推导 $$ 左边电路KVL方程: \\pmb {V_s} = \\pmb I_1(Z_s + R_1 + j\\omega L_1 ) - j\\omega M\\pmb I_2 \\\\\\ \\\\ 右边KVL方程 :\\pmb{I_2}(R_2+Z_L+j\\omega L_2) - j\\omega M \\pmb{I_1} = 0 \\\\\\ \\\\ 令 Z_{11} = Z_s+R_1+j\\omega L_1， Z_2 = Z_L+R_2 + j\\omega L_2 \\\\\\ \\\\ 我们可以得到 $$\n结论 $$ \\pmb I_1 =\\frac{Z_{22}}{Z_{11}Z_{22}+\\omega^2M^2} \\pmb V_s \\\\\\ \\\\ \\pmb I_2 = \\frac{j\\omega M}{Z_{11}Z_{22}+\\omega^2M^2}\\pmb V_s = \\frac{j\\omega M}{Z_{22}}\\pmb I_1 \\\\\\ \\\\ 对于电源内部, Z_{int} = \\frac{V_s}{I} = Z_{11}+ \\frac{\\omega^2M^2}{Z_{22}}\\\\\\ \\\\ Z_{ab} = Z_{11} + \\frac{\\omega^2 M^2}{Z_{22}}-Z_s = R_1+j\\omega L_1 + \\frac{\\omega^2 M^2}{(R_2+j\\omega L_2+Z_L)} [1] $$\n反射阻抗 $$ [1]式中的Z_r =\\frac{\\omega^2 M^2}{(R_2+j\\omega L_2+Z_L)}被称为\\pmb{反射阻抗} \\\\\\ \\\\ 将Z_L=R_L+jX_L \\\\\\ \\\\ 得到Z_r = \\frac{\\omega^2 M^2}{|Z_{22}|^2}[(R_2+R_L)-j(\\omega L_2 + X_L)] $$\n理想变压器 前提 耦合系数为1($k=1$)\n$L_1 = L_2 \\rightarrow +\\infin$\n寄生电阻造成的线圈损失忽略不计\n继续推导 $$ 当耦合为紧耦合时，两磁通相同 \\\\\\ \\\\ \\frac{L_1}{L_2} = (\\frac{N_1}{N_2})^2 \\\\\\ \\\\ \\because L_1 = L_2 \\rightarrow +\\infin \\\\\\ \\\\ \\therefore X_{ab} = (\\frac{N_1}{N_2})^2 X_L \\\\\\ \\\\ Z_{ab} = R_1 + (\\frac{N_1}{N_2})^2 R_2 + (\\frac{N_1}{N_2})^2 (R_L + jX_L) \\\\\\ \\\\ $$\n电流比与电压比 $$ \\frac{V_1}{N_1} = \\frac{V_2}{N_2} \\\\\\ \\\\ I_1N_1 = I_2N_2 $$\n理想电压器的阻抗匹配 图示 关系\n$$ 令 a = \\frac{N_1}{N_2} \\\\\\ \\\\ 易知\\frac{V_1}{I_1} = a^2 \\frac{V_2}{I_2} = a^2 Z_L\\\\\\ \\\\ Z_{IN} = \\frac{V_1}{V_2}= a^2Z_L \\\\\\ \\\\ 即：理想变压器的次级线圈的负载阻抗以水平因子a^2反映到了初级线圈上 $$\n","date":"2022-12-03T18:42:48+08:00","permalink":"https://downeyflyfan.com/p/%E6%AD%A3%E5%BC%A6%E7%A8%B3%E6%80%81%E5%88%86%E6%9E%90/","title":"正弦稳态分析"},{"content":"RL电路的固有响应 电路图 电流与时间 $$ 对于最右边的网孔列KVL方程 \\\\\\ \\\\ L\\frac{di}{dt}+iR = 0 \\\\\\ \\\\ \\pmb{i(t)=I_0e^{(-R/L)t}，t\\gt 0}\\\\\\ \\\\ 零时刻，电压产生突变 \\\\\\ \\\\ v(0^-) = 0，v(0^+) = I_0R ，v(0)位置 $$\n功率 能量 $$ p =i^2R = I_0^2Re^{(-2R/L)t} \\\\\\ \\\\ W = \\int_0^t p d\\tau = \\frac{1}{2}LI_0^2(1-e^{-2(R/L)t}), t\\ge 0 $$\n时间常数 定义 $\\tau =L/R$ 替换后 $$ i(t) = I_0e^{-(t/\\tau)} \\\\\\ \\\\ v(t)= I_0Re^{-(t/\\tau)} \\\\\\ \\\\ p =I_0^2 R e^{-2t/\\tau} \\\\\\ \\\\ W =\\frac{1}{2}LI_0^2(1-e^{-2t/\\tau}) $$\n总结 先求$I_0$\n再求$\\tau = L/R$\n最后求$i(t)$\nRC电路的固有响应 电路图 电压与时间 功率 能量 $$ 引入时间常数\\tau = RC \\\\\\ \\\\ 推导方式同RL电路 \\\\\\ \\\\ v(t)=V_0e^{-t/\\tau} \\\\\\ \\\\ i(t) = \\frac{V_0}{R} e^{-t\\tau} \\\\\\ \\\\ p = \\frac{V_0^2}{R} e^{-2(t/\\tau)}\\\\\\ \\\\ w = \\frac{1}{2}CV^2(1-e^{-2(t/\\tau)}) $$\nRL RC电路的阶跃响应 RL 电路的阶跃响应 图示 电流与时间 $$ V_s = Ri + L\\frac{di}{dt} \\\\\\ \\\\ i(t) = \\frac{V_s}{R} + (I_0-\\frac{V_s}{R})e^{-t/\\tau} \\\\\\ \\\\ \\Rightarrow \\pmb {i(t) = \\frac{V_s}{R}(1-e^{-t/\\tau})} \\\\\\ \\\\ i(t) \\rightarrow \\frac{V_s}{R} $$\n电流与时间的变化率 $$ \\frac{di}{dt} = \\frac{V_s}{R}e^{-t/\\tau}\\\\\\ \\\\ \\frac{di}{dt}(0) = \\frac{V_S}{R} \\\\\\ $$\n其他变量 $$ v = L\\frac{di}{dt} = (V_s-I_0R)e^{-t/\\tau} \\\\\\ \\\\ $$\nRC电路的阶跃响应 电路图 公式 $$ V = V_s + (V_0 - V_s)e^{-\\frac{t}{RC}} \\\\\\ \\\\ i =(I_S-\\frac{V_0}{R})e^{-t/\\tau},t\\ge 0 $$\n阶跃响应与固有响应的一般解法 公式表达 $$ 对于方程\\frac{dx}{dt}+\\frac{x}{\\tau} = K \\\\\\ \\\\ 终值x_f = K\\tau \\\\\\ \\\\ \\pmb{x(t) =x_f+[x(t_0)-x_f]e^{-(t-t_0)/\\tau}} $$\n步骤 确定电路的有关变量 对于RC电路，选择电容电压 对于RL电路，选择电感电流 决定初始量 对于电容电压或电感电流, 因为不能突变,,$x(t_0^-)=x(t_0)=x(t_0^+)$ 对于其他量，应当注意其突变 计算$x_f$\n计算$\\tau$\n按序换路 做题就行 无限响应 电路响应按照指数规律增长而不是衰减\n积分放大器 图示 推导 $$ v_n = v_p =0 \\\\\\ \\\\ i_n =i_f + i_ s = 0\\Rightarrow i_f = -i_s \\\\\\ \\\\ i_f=C_f\\frac{dv_0}{dt} \\\\\\ \\\\ \\frac{dv_0}{dt}=\\frac{1}{C_f}(-i_s)= -\\frac{1}{R_sC_f}v_S \\\\\\ \\\\ v_0(t) = -\\frac{1}{R_sC_f} \\int_{t_0}^t v_s d\\tau + v_0(t_0) $$\n","date":"2022-12-03T02:18:32+08:00","permalink":"https://downeyflyfan.com/p/rlrc%E7%94%B5%E8%B7%AF%E7%9A%84%E5%93%8D%E5%BA%94/","title":"RL,RC电路的响应"},{"content":"电感 电感的电压与电流 $$ 根据定义\\\\\\ \\\\ v=L\\frac{di}{dt} \\\\\\ \\\\ di = \\frac{v}{L}dt \\\\\\ \\\\ L\\int_{i(0)}^{i(t)} di = \\int_0^t vd\\tau \\\\\\ \\\\ i(t)=\\frac{1}{L}\\int_0^tvd\\tau +i(0) $$\n电感的功率和能量 $$ p = vi =Li\\frac{di}{dt} \\\\\\ \\\\ \\int_0^t p d\\tau = \\int_{i(0)}^{i(t)}Lidi \\\\\\ \\\\ pt = \\frac{1}{2}L(i(t)^2-i(0)^2) \\\\\\ \\\\ 当i(0)=0时,W=\\frac{1}{2}Li^2 $$\n特点 端电流不允许跃变\n端电压允许跃变\n端电流为常量时，短路\n电容 电压 电流 功率 能量 $$ 推导方式与电感相同，可以得出 \\\\\\ \\\\ i = C\\frac{dV}{dt} \\\\\\ \\\\ V =\\frac{1}{C} \\int_0^ti(\\tau) d\\tau + v(0) \\\\\\ \\\\ W =\\frac{1}{2}Cv^2 $$\n特点 端电压不能突变\n端电流可以突变\n当电压为常数时，相当于断路\n电容 电感 串并联 电感串并联 $$ 串联: L_{eq} =\\sum_{i=1}^n L_i \\\\ \\\\ 并联：\\frac{1}{L_{eq}}= \\sum_{i=1}^n \\frac{1}{L_i} \\\\\\ $$\n电容串并联 $$ 串联: \\frac{1}{C_{eq}} = \\sum_{i=1}^n \\frac{1}{C_i} \\\\ \\\\ 并联: C_{eq} = \\sum_{i=1}^n C_i \\\\\\ $$\n互感 详见物理学——电磁感应部分\n","date":"2022-12-03T01:56:41+08:00","permalink":"https://downeyflyfan.com/p/%E7%94%B5%E6%84%9F%E7%94%B5%E5%AE%B9%E4%B8%8E%E4%BA%92%E6%84%9F/","title":"电感、电容与互感"},{"content":"栈的定义和操作名称 定义 栈是限定仅可在表尾进行删除和插入的线性表 后进先出形(LIFO)的线性表 基本概念 栈顶(top) 栈可删除和插入的一端 栈底(bottom) 另一端为栈底 空栈 没有元素的栈 操作 插入 也叫进栈，压栈，入栈 删除 弹栈，出栈 栈的ADT 1 2 3 4 5 6 7 8 9 10 11 12 Data 同线性表 Operation IintStack(*S):初始化建立空栈 DestroyStack(*S): 摧毁一个栈 ClearStack(*S):清空栈 StackEmpty(S):栈为空，返回true,否则返回false GetTop(S,*e):若栈存在且非空，用e返回S的栈顶元素 Push(*S,e):插入 Pop(*S,*e):删除，并用e返回被删除的元素 StackLength:返回栈S的元素个数 endADT 栈的顺序存储结构 结构定义 1 2 3 4 5 6 typedef int SElemType; //根据实际情况确定栈的元素类型 typedef struct { SElemType data[MAXSIZE]; int top;//用于栈顶指针 }SqStack; 入栈\n1 2 3 4 5 6 7 8 Status Push(SqStack *S, SElemType e) { if (S-\u0026gt;top==MAXSIZE-1)//栈满 return -1; S-\u0026gt;top++; S-\u0026gt;data[S-\u0026gt;top]=e; return 0; } 出栈\n1 2 3 4 5 6 7 8 Status Pop(SqStack *S, SElemType *e) { if (S-\u0026gt;top==-1)//空栈 return -1; *e = S-\u0026gt;data[S-\u0026gt;top]; S-\u0026gt;top--; return -1; } 两栈共享空间 结构 将两栈的顶部接到一起 结构代码 1 2 3 4 5 6 typedef struct { SElemType data[MAXSIZE]; int top1; int top2; }SqDoubleStack 操作 插入 1 2 3 4 5 6 7 8 9 10 Status Push(SqDoubleStack *S, SElemType e, int StackNumber) //StackNumber 用来判断插入栈1还是栈2 { if(S-\u0026gt;top1++=S-\u0026gt;top2)//栈满 return -1; if(StackNumber == 1) S-\u0026gt;data[++S-\u0026gt;top1]=e; if(StackNumber == 2) S-\u0026gt;data[--S-\u0026gt;top2]=e; } 删除 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Status Pop(SqDoubleStack *S, SElemType *e,int StackNumber) { if (StackNumber == 1) { if (S-\u0026gt;top1==-1)//空栈 return -1; *e = S-\u0026gt;data[S-\u0026gt;top1]; top1++; } if (StackNumber == 2) { if (S-\u0026gt;top2 == MAXSIZE)//空栈 return -1; *e = S-\u0026gt;data[S-\u0026gt;top2]; top2--; } return 0; } 栈的链式存储结构 定义 简称链栈 特点 栈顶在头部 没有头结点 结构代码 1 2 3 4 5 6 7 8 9 10 11 typedef struct StackNode { SElemType data; struct StackNode *next; } StackNode,*LinkStackPtr; typedef struct LinkStack { LinkStackPtr top; int count; }LinkStack; 操作 进栈 1 2 3 4 5 6 7 8 Status Push(LinkStack *S, SElemType e) { LinkStackPtr s = (LinkStackPtr) malloc(sizeof(StackNode)); s-\u0026gt;data=e; s-\u0026gt;next=S-\u0026gt;top; S-\u0026gt;count++; return 0; } 出栈 1 2 3 4 5 6 7 8 9 10 11 12 Status Pop(LinkStack *S, SElemType *e) { LinkStackPtr p; if (StackEmpty(*S))//空栈 return -1; *e = S-\u0026gt;top-\u0026gt;data; p = S-\u0026gt;top; S-\u0026gt;top=S-\u0026gt;top-\u0026gt;next; free(p); S-\u0026gt;count--; return 0; } 栈的应用 递归 斐波那契数列 数学定义 $$ F(n)=\\begin{cases}0 \u0026amp; n=0 \\\\ 1 \u0026amp; n=1 \\\\ F(n-1)+F(n-2) \u0026amp; n \\ge 2\\end{cases} $$\n代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 int Fib(int n) { if (n == 0) return 0; else if (n==1) return 1; else return F(n-1)+F(n-2); } int main() { int i = 0; for(i=0;i\u0026lt;40;i++) { printf(\u0026#34;%d\u0026#34;,Fib(n)); } return 0; } 文字定义 调用自己的函数(包括直接和间接)称作递归函数\n四则运算表达式求值 后缀表达式 原则 数字依次进栈 有运算符号,出两个数字 下面的数字在运算符号前 上面的数字在运算符号后 例 9 3 1 - 3 * + 10 2 / + = 20\n中缀表达式转后缀表达式 中缀表达式就是平时用到的表达式\n转换\n数字按顺序输出\n符号依次进栈\n若下方的符号运算优先级高于上方，输出该符号及其上方的符号\n队列(FIFO) 定义 只允许在一端插入，另一端删除的线性表\n队尾 只允许插入的一端 队头 只允许删除的一端 ADT 1 2 3 4 Data 同线性表，有前驱和后继，元素类型相同 Operation 循环队列 定义 队列的头尾相连的顺序存储结构\n结构 初始化 长度 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // 结构定义 typedef int QElemType; typedef struct { QElemType data[MAXSIZE]; int front; int rear; }SqQueue; // 初始化 Status Sqinit(SqQueue *Q) { Q-\u0026gt;front = 0; Q-\u0026gt;rear = 0; return 0; } // 长度 int QueueLegnth(SqQueue Q) { return ((Q.rear - Q.front + MAXSIZE) % MAXSIZE); } 入列和出列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // 入列 Status EnQueue(SqQueue *Q,QElemType e) { if ((Q-\u0026gt;rear + 1) == Q-\u0026gt;front) return -1; Q-\u0026gt;data[Q-\u0026gt;rear] = e; Q-\u0026gt;rear = (Q-\u0026gt;rear+1)%MAXSIZE; return 0; } // 出列 Status DeQueue(SqQueue *Q, QElemType *e) { if (Q-\u0026gt;rear == Q-\u0026gt;front) return -1; *e=Q-\u0026gt;data[Q-\u0026gt;front]; Q-\u0026gt;front = (Q-\u0026gt;front + 1)% MAXSIZE; } 队列的链式存储结构 定义 线性表的单链表，称为链队列\n结构 1 2 3 4 5 6 7 8 9 10 typedef struct Node { QElemType data; struct Node *next; }QNode,*QueuePtr; typedef struct { QueuePtr front,rear; }LinkQueue; 入列 出列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // 入列 Status EnQueue (LinkQueue *Q, QElemType e) { QueuePtr s = (QueuePtr) malloc (sizeof(Node)); if(!s) exit(0); s-\u0026gt;data = e; s-\u0026gt;next = NULL; Q-\u0026gt;rear-\u0026gt;next = s; Q-\u0026gt;rear = s; return 0; } // 出列 Status DeQueue(LinkQueue *Q, QElemType *e) { QueuePtr p; if (Q-\u0026gt;front == Q-\u0026gt;rear) return -1; p = Q-\u0026gt;front-\u0026gt;next; *e = p-\u0026gt;data; Q-\u0026gt;front-\u0026gt;next = p-\u0026gt;next; if(Q-\u0026gt;rear = p) Q-\u0026gt;rear = Q-\u0026gt;free; free(p); return 0; } ","date":"2022-12-01T23:55:15+08:00","permalink":"https://downeyflyfan.com/p/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/","title":"栈和队列"},{"content":"运算放大器端子 重要的端子 反相输入\n同相输入\n输出\n正电源\n负电源\n图示 运放电路符号 运放简化电路符号 端电压和端电流 端电压变量 $$ 理想状态 \\\\\\ \\\\ v_p = v_n $$\n端电流变量 $$ 理想状态 \\\\\\ \\\\ i_p=i_n=0 \\\\\\ \\\\ i_0=-(i_{c^-}+i_{c^+}) $$\n运放的电压传输特性 图示 $$ 理想状态 \\\\\\ \\\\ A \\rightarrow \\infin $$\n公式 $$ v_0=\\begin{cases}+V_{CC} \u0026amp; A(v_p-v_n)\\gt V_{CC} \\\\ A(v_p-v_n) \u0026amp; -V_{CC}\\le A(v_p-v_n) \\le +V_{CC} \\\\ -V_{CC} \u0026amp; A(v_p-v_n) \\lt -V_{CC}\\end{cases} $$\n反相放大器电路 图示 推导 $$ i_f+i_s=i_n = 0 \\\\\\ \\\\ v_n=v_p=0 \\\\\\ \\\\ \\frac{v_0}{R_f}+\\frac{v_s}{R_s} = 0\\\\\\ \\\\ \\therefore v_0=-\\frac{R_f}{R_s}v_s \\\\\\ \\\\ |v_0|\\le V_{CC} $$\n求和放大器电路 图示 推导 $$ 通过节点电压法可以得到 \\\\\\ \\\\ v_0=-(\\frac{R_f}{R_a}v_a+\\frac{R_f}{R_b}v_b+\\frac{R_f}{R_c}v_c) \\\\\\ \\\\ 若R_a=R_b=R_c=R_s \\\\\\ \\\\ v_0=-\\frac{R_f}{R_s}(v_a+v_b+v_c) \\\\\\ \\\\ 若R_f=R_S \\\\\\ \\\\ v_0=v_a+v_b+v_c，输入与输出电压正好反相 $$\n同相放大器电路 图示 推导 $$ \\frac{v_0-v_n}{R_f}+\\frac{v_n}{R_s}=0\\\\\\ \\\\ v_0=\\frac{R_f+R_S}{R_s}v_n $$\n差分放大器 图示 推导 $$ 对于反相节点\\\\\\ \\\\ \\frac{v_n-v_a}{R_A}+\\frac{v_0-v_n}{R_b}= 0 \\\\\\ \\\\ 对于同相节点 \\\\\\ \\\\ v_p=\\frac{R_d}{R_c+R_d}v_b = v_n \\\\\\ \\\\ \\Rightarrow v_0=\\frac{R_d(R_a+R_b)}{R_a(R_c+R_d)}v_b-\\frac{R_b}{R_a}v_a\\\\\\ \\\\ 当\\frac{R_a}{R_b}=\\frac{R_c}{R_d} \\\\\\ \\\\ v_0=\\frac{R_b}{R_a}(v_b-v_a) $$\n关于差分放大器的其他问题 共模输入与差模输入 $$ v_{dm} = v_b-v_a \\\\\\ \\\\ v_{cm} = \\frac{v_a+v_b}{2} \\\\\\ \\\\ \\therefore v_0=A_{cm}v_{cm}+A_{dm}v_{dm} \\\\\\ \\\\ 当R_a=R_c，R_b=R_d \\\\\\ \\\\ v_0 = (o)v_{cm}+\\frac{R_b}{R_a}v_{dm} $$\n","date":"2022-12-01T20:47:09+08:00","permalink":"https://downeyflyfan.com/p/%E8%BF%90%E7%AE%97%E6%94%BE%E5%A4%A7%E5%99%A8/","title":"运算放大器"},{"content":"大数定律 总体表述 $$ E(X_i)=\\mu \\\\\\ \\\\ 在一定条件下 \\\\\\ \\\\ Y=\\frac{X_1+X_2+\u0026hellip;+X_n}{n}收敛到\\mu $$\n依概率收敛 定义 $$ 随机变量序列Y_i(i=1,2\u0026hellip;) \\\\\\ \\\\ 若存在某常数c，使得\\forall \\varepsilon \\gt 0,都有\\underset{n\\rightarrow \\infin}{lim} P \\lbrace |Y_n-c|\\ge \\varepsilon\\rbrace = 0 \\\\\\ \\\\ 则称\\lbrace Y_n,n\\ge 1 \\rbrace依概率收敛于常数c \\\\\\ \\\\ 记为 Y_n \\overset{P}{\\longrightarrow} c \\\\\\ $$\n这是一种概率意义上的收敛，而不是数学意义上的收敛 性质 若$X_n \\overset{P}{\\longrightarrow} a, Y_n\\overset{P}{\\longrightarrow} b$ , $g$在$(a,b)$上连续，则$g(X_n,Y_n)\\overset{P}{\\longrightarrow} g(a,b)$\n若$X_n \\overset{P}{\\longrightarrow} a$，$f(x)$在点$a$连续，则$f(X_n)\\rightarrow f(a)$\n马尔可夫不等式与切比雪夫不等式 马尔可夫不等式 定义 设随机变量$Y$的$k$阶矩存在$(k\\gt 1)$，则对于$\\forall \\varepsilon \\gt 0$，都有 $P\\lbrace |Y|\\ge \\varepsilon \\rbrace \\le \\frac{E(|Y^k|)}{\\varepsilon^k}$\n等价形式 $$ P\\lbrace |Y| \\le \\varepsilon \\rbrace \\ge 1-\\frac{E(|Y|^k)}{\\varepsilon^k} $$\n证明 $$ 对于\\forall \\varepsilon \\gt0 ，令Z =\\begin{cases}\\varepsilon \u0026amp; |Y|\\ge \\varepsilon \\\\ 0 \u0026amp; |Y| \\lt \\varepsilon \\end{cases} \\\\\\ \\\\ \\therefore Z \\le |Y| \\Rightarrow Z^k \\le |Y|^k \\Rightarrow E(Z^k) \\le E(|Y|^k) \\\\\\ \\\\ 根据Z的定义 \\\\\\ \\\\ E(Z^k) = \\varepsilon^k P\\lbrace |Y|\\ge \\varepsilon\\rbrace \\\\\\ \\\\ \\therefore P\\lbrace |Y|\\ge \\varepsilon\\rbrace = \\frac{E(Z^k)}{\\varepsilon^k} \\le \\frac{E(|Y|^k)}{\\varepsilon^k} $$\n切比雪夫不等式 —— 马尔可夫不等式的特殊情况 定义 对于$\\forall \\varepsilon \\gt 0$，都有 $P\\lbrace |X-E(X)| \\ge \\varepsilon \\rbrace \\le \\frac{Var(X)}{\\varepsilon^2}$\n等价形式 $$ P\\lbrace |X-E(X)| \\lt \\varepsilon \\rbrace = 1 - \\frac{Var(X)}{\\varepsilon^2} $$\n证明 $$ 在马尔可夫不等式中， 令Y = X -E(X)，k = 2 \\\\\\ \\\\ 有P(|X-E(X)|\\ge \\varepsilon ) = \\frac{E[(X-E(X))^2]}{\\varepsilon^2} = \\frac{Var(X)}{\\varepsilon^2} $$\n样本均值的均值和方差 $$ \\overline{X_n} = \\frac{1}{n} (X_1 + \u0026hellip; + X_n) \\\\\\ \\\\ 样本的均值为\\mu.方差为\\sigma^2 \\\\\\ \\\\ 那么 E(\\overline{X_n}) = \\mu,Var(\\overline{X_n}) = \\frac{\\sigma^2}{n} $$\n大数定律 (弱)大数定律 $$ 假设一随机样本中的X_i(i=1,2..)\\pmb{均值为\\mu,方差有限} \\\\\\ \\\\ 那么\\overline {X_n} \\overset{p}{\\longrightarrow }\\mu $$\n切比雪夫大数定律 $$ X_1, \u0026hellip; X_n 构成一个随机样本，且均值和方差都存在\\\\\\ \\\\ 并且Var(X_k) \\le C(常数) \\\\\\ \\\\ 那么随机变量\\lbrace X_k \\rbrace 服从大数定律 $$\n独立同分布大数定律 $$ 若X_i(i=1\u0026hellip;n)独立同分布 \\\\\\ \\\\ 那么X_i服从大数定律 \\\\\\ \\\\ 且\\underset{n \\rightarrow +\\infin}{lim}Pr(|\\overline{X_n} - \\mu| \\lt \\sigma) = 1 $$\n泊松大数定理 $$ 假设X_i独立同分布,且 \\\\\\ \\\\ Pr(X_k =1) = p_k,Pr(X_k=0) =1-p_k \\\\\\ \\\\ 那么X_i(i=1,2\u0026hellip;)服从大数定律 $$\nBernulli大数定律 $$ 假设X_i独立同分布,且 \\\\\\ \\\\ Pr(X_k =1) = p,Pr(X_k=0) =1-p \\\\\\ \\\\ 那么X_i(i=1,2\u0026hellip;)服从大数定律 $$\n辛倾大数定律 $$ X_i(i=1,2\u0026hellip;)独立同分布，且\\pmb{均值存在} \\\\\\ \\\\ 那么X_i服从大数定律 $$\n强大数定律 $$ \\underset{n \\longrightarrow \\infin} {lim}Pr(\\overline {X_n} = \\mu) = 1 $$\n中心极限定律 简单阐述 当样本数足够大时，分布接近于正态分布($～N(\\mu,\\sigma^2)$)\n变量的正态化 $$ 让X^* = \\frac{X-E(X)}{\\sqrt{Var(X)}} \\\\\\ \\\\ 可以证明得到 E(X^) = 0,Var(X^) = 1 \\\\\\ \\\\ 其中,\\pmb{X^*叫做X的正态化} $$\nLindeberg and Levy 中心定律 $$ 若\\overline{X_n}同分布，那么对于每一个x \\\\\\ \\\\ \\underset{n \\rightarrow \\infin}{lim}Pr\\Big[ \\frac{\\overline{X_n} - \\mu}{\\sigma / \\sqrt n} \\le x \\Big] = \\Phi(x) $$\n拉普拉斯中心极限定律 $$ 如果随机变量X_i(i=1,2,\u0026hellip;) \\\\\\ \\\\ Pr(X_k = 1) = p, Pr(X_k = 0) = 1-p \\\\\\ \\\\ \\underset{n \\rightarrow \\infin}{lim}Pr\\Big[ \\frac{\\overline{X_n} - \\mu}{\\sigma / \\sqrt n} \\le x \\Big] = \\Phi(x) $$\n分布收敛 渐进分布 $$ 如果\\underset{n \\longrightarrow \\infin}{lim} F_n(x) = F^(x) \\\\\\ \\\\ 那么X_n在分布上趋近于F^(x) $$\n","date":"2022-12-01T04:04:03+08:00","image":"https://downeyflyfan.com/p/%E5%A4%A7%E6%95%B0%E5%AE%9A%E5%BE%8B%E5%92%8C%E4%B8%AD%E5%BF%83%E6%9E%81%E9%99%90%E5%AE%9A%E7%90%86/1_hu3d03a01dcc18bc5be0e67db3d8d209a6_207802_120x120_fill_q75_box_smart1.jpg","permalink":"https://downeyflyfan.com/p/%E5%A4%A7%E6%95%B0%E5%AE%9A%E5%BE%8B%E5%92%8C%E4%B8%AD%E5%BF%83%E6%9E%81%E9%99%90%E5%AE%9A%E7%90%86/","title":"大数定律和中心极限定理"},{"content":"数学期望 定义 离散型 设离散型随机变量$X$的分布律为$P(X=x_k)=p_k,k=1,2\u0026hellip;$，若级数$\\sum_{k=1}^{+\\infin}|x_k|p_k\\lt + \\infin$，那么称该级数为$X$的数学期望, 记为\n$$ E(X)=\\sum_{k=1}^{+\\infin}x_kp_k $$\n连续型 $$ E(X)=\\int_{-\\infin}^{+\\infin}xf(x)dx $$\n随机变量函数的数学期望 一元随机变量函数 $Y=g(X)$,且级数收敛,则\n$$ 对于\\pmb{离散型} \\\\\\ \\\\ E(Y)=E[g(X)] = \\sum_{k=1}^{+\\infin}g(x_k)p_k \\\\\\ \\\\ 对于\\pmb{连续型} \\\\\\ \\\\ E(Y)=E(g(X)) = \\int_{-\\infin}^{+\\infin}g(x)f(x)dx $$\n二元随机变量函数 定义 $Z=h(X,Y)$ $$ 对于\\pmb{离散型} \\\\\\ \\\\ E(Z)=E[h(X,Y)] = \\sum_{i=1}^{+\\infin}\\sum_{j=1}^{+\\infin}h(x_i,y_j)p_{ij} \\\\\\ \\\\ 对于\\pmb{连续型} \\\\\\ \\\\ E(Z) = E(h(X,Y)) = \\int_{-\\infin}^{+\\infin}\\int_{-\\infin}^{+\\infin}h(x,y)f(x,y)dxdy $$\n没有期望的p.d.f 定义 $$ 当\\int_{-\\infin}^0 xf(x)dx和\\int_{0}^{\\infin}xf(x)dx\\pmb{都}是无穷的 \\\\\\ \\\\ 那么E(X)不存在 $$\n柯西分布 $$ f(x) = \\frac{1}{\\pi(1+x^2)} \\\\\\ \\\\ \\int_{-\\infin}^{\\infin}f(x)dx = 1 \\\\\\ \\\\ 但是 \\int_{-\\infin}^0 x f(x) dx = -\\infin \\\\\\ \\\\ \\int_{0}^{\\infin}xf(x)dx = \\infin \\\\\\ \\\\ \\therefore E(X)不存在 $$\n没有期望的分布 普通分布 $$ f(x) = \\begin{cases} \\frac{1}{2|x|(|x| + 1)} \u0026amp; x = \\pm1,\\pm2,\u0026hellip; \\\\ 0 \u0026amp; otherwise \\end{cases} \\\\\\ \\\\ E(X) = \\sum_{x=-1}^{-\\infin} x \\frac{}{}f(x) = -\\infin = \\sum_{x=1}^{\\infin}xf(x) = + \\infin \\\\\\ \\\\ \\therefore E(X)不存在 $$\n数学期望的特性 线性组合的数学期望 $$ E(c_0+\\sum_{i=1}^nc_ix_i) = c_0+\\sum_{i=1}^nc_iE(X_i) $$\n随机变量的独立性 $$ 满足E(\\prod_{i=1}^n X)=\\prod_{i=1}^nE(X_i)的随机变量\\\\\\ \\\\ X_i，i=1,2\u0026hellip; n 相互独立 $$\n函数的函数期望 $$ E(r(X)) = \\int_{-\\infin}^{\\infin}r(x)f(x) = \\sum r(x) f(x) $$\n$$ Pr(X\\ge a) = 1，那么E(X) \\ge a \\\\\\ \\\\ Pe(X\\le b) = 1，那么E(X) \\le b $$\n条件期望 $$ E(Y|x) = \\int_{-\\infin}^{\\infin} y g_2(y|x)dy \\\\\\ \\\\ E(X|y) = \\int_{-\\infin}^{\\infin} x g_2(x|y)dx \\\\\\ \\\\ 用h(x)表示 $$\n中位数(Median) 求法 $$ 已知 a \\le x \\le b \\\\\\ \\\\ \\int_0^mf(x)dx = \\int_m^1f(x) dx = \\frac{1}{2} $$\n性质 一对一函数 $$ x的中位数为m，r(x)是一个one-one-function \\\\\\ \\\\ 那么r(x)的中位数为r(m) $$\n方差 定义 方差 $$ Var(X)=E\\lbrace\\big [X-E(X)\\big ]^2\\rbrace $$ 记方差为$Var(X)$或$D(X)$\n标准差 记$\\sqrt{Var(X)}$为$\\sigma(x)$，称为标准差或均方差，与$X$有相同的量纲\n计算公式 $$ Var(X)=E\\lbrace X^2-2XE(X)+E^2(X) \\rbrace \\\\\\ \\\\ \\pmb {Var(X) =E(X^2)-E^2(X)} $$\n方差的性质 线性组合的方差(独立) $$ Var(c_0+\\sum_{i=1}^n c_iX_i) = \\sum_{i=1}^nc_i^2Var(X_i) $$\n方差=0 $$ Var(X)=0\\Leftrightarrow P(X=C)=1,C=E(X) $$\n$Var(X) \\ge 0$\n多项方差\n$$ Var(\\sum_{i=1}^n X_i) = \\sum_{i=1}^n Var(X_i) + 2\\underset{i \\lt j}{\\sum\\sum} Cov(X_i,X_j) \\\\\\ \\\\ 当X_i之间线性不相关时，Var(\\sum_{i=1}^n X_i) = \\sum_{i=1}^n Var(X_i) $$\n几种常见分布的均值和方差 分布 概率分布律或概率密度函数 数学期望 方差 0-1分布 $P(X=k)=p^k(1-p)^{1-k}$ $p$ $p(1-p)$ 二项分布 $P(X=k)=C_n^kp^k(1-p)^{1-k}$ $np$ $np(1-p)$ 泊松分布 $P(X=k)=\\frac{e^{-\\lambda}\\lambda^k}{k!}$ $\\lambda$ $\\lambda$ 均匀分布 $f(x) = \\begin{cases} 1/(b-a) \u0026amp; a\\lt x \\lt b \\\\ 0 \u0026amp; otherwise \\end{cases}$ $\\frac{a+b}{2}$ $\\frac{(b-a)^2}{12}$ 指数分布 $f(x) =\\begin{cases}\\lambda e^{-\\lambda x} \u0026amp; x \\gt 0\\\\ 0 \u0026amp; otherwise \\end{cases}$ $1/\\lambda$ $1/\\lambda^2$ 正态分布 $f(x)=\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}},x \\in R$ $\\mu$ $\\sigma^2$ 协方差和相关系数 协方差 定义 定义$E\\lbrace[X-E(X)][Y-E(Y)]\\rbrace$为协方差，记为$Cov(X,Y)$\n$$ Cov(X,Y) = E\\lbrace[X-\\mu_X][Y-\\mu_Y]\\rbrace $$\n计算公式 $$ 当\\sigma^2_X \\lt \\infin，\\sigma^2_Y \\lt \\infin时 \\\\\\ \\\\ Cov(X,Y)=E(XY)-E(X)E(Y) $$\n性质 $Cov(aX,bY)=ab\\cdot Cov(X,Y)$\n$Cov(X_1+X_2,Y)=Cov(X_1,Y)+Cov(X_2,Y)$\n当$Var(X)Var(Y)\\neq 0$，$(Cov(X,Y))^2\\le Var(X)Var(Y)$\n$Var(X+Y)=Var(X)+Var(Y)+2Cov(X,Y)$\n相关系数 定义 $$ \\rho_{XY}=\\frac{Cov(X,Y)}{\\sqrt{Var(X)Var(Y)}} \\\\\\ \\\\ \\rho_{XY}=Cov(\\frac{X-E(X)}{\\sqrt{Var(X)}},\\frac{X-E(Y)}{\\sqrt{Var(Y)}}) $$\n性质 $\\rho_{XY}^2 \\le 1$\n$Cov^2(X,Y) \\le \\sigma_X^2\\sigma_Y^2$，当且仅当X与Y有线性关系时，等号成立\n若$Y = aX + b , a\\neq 0$,那么\n若$a \\gt 0，\\rho(X,Y) = 1$ 若$a \\lt 0, \\rho(X,Y) = -1$ 作用 一个表征$X,Y$之间的线性关系紧密程度的量\n当$\\rho_{XY}\\gt 0$,$X与Y$正相关\n当$\\rho_{XY}\\lt 0$,$X与Y$负相关\n当$\\rho_{XY} = 0$,$X与Y$线性不相关(不代表没有非线性关系)\n施瓦茨不等式 $$ E^2(UV) \\le E(U^2)E(V^2) \\\\\\ \\\\ 若右式 \\lt \\infin,那么 \\\\\\ \\\\ 当且仅当\\pmb{U与V成线性关系时} \\\\\\ \\\\ \\pmb{等号成立} $$\n其他数字特征 k阶(原点)矩 定义 $$ E(X^k)，k=1,2,\u0026hellip; $$\n定理 如果$E(|X|^k) \\lt \\infin$,那么对于$\\forall j \\le k$,都有$E(|X|^j) \\lt \\infin$ k阶中心矩 定义 $$ E\\lbrace[X-E(X)]^k\\rbrace，k=1,2\u0026hellip; $$\n也叫做$X$关于均值的$k$阶矩 矩生成函数(m.g.f) 定义 $$ \\Psi(t) = E(e^{tx}) $$\n定理 $$ 若\\Psi(t)对于所有的t都是有限的 \\\\\\ \\\\ E(X^n) = \\Psi^{(n)}(0) $$\nk+l阶混合(原点)矩 $$ E\\lbrace X^kY^l\\rbrace, k,l=1,2 $$\nk+l阶混合中心矩 $$ E\\lbrace[X-E(X)]^k[Y-E(Y)]^k\\rbrace $$\n多元随机变量的数字特征 数学期望向量 设n元随机变量$\\pmb X =(X_1,X_2,\u0026hellip;X_n)^T$,则称\n$$ E(\\pmb X)= (E(X_1),E(X_2),\u0026hellip;E(X_n))^T $$\n为$n$元随机变量的数学期望向量 Quadratic Equation 以下是一个例子：假设我们有一个随机变量X，其分布为指数分布，其概率密度函数为$f(x)=\\lambda e^{-\\lambda x}$，其中$\\lambda$是正的常数。我们想要计算X的第p个百分位数。\n为了计算指数分布的分位函数，我们可以使用以下公式：\n$$Q(p)=-\\frac{\\ln(1-p)}{\\lambda}$$\n其中$0 \\leq p \\leq 1$。这个公式的意思是，我们要找到一个x，使得指数分布在0到x的区间内的累积概率为p。我们可以通过求解该方程来获得该值：\n$$\\int_0^{Q(p)} \\lambda e^{-\\lambda x}dx = p$$\n","date":"2022-11-30T22:10:32+08:00","permalink":"https://downeyflyfan.com/p/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E7%9A%84%E6%95%B0%E5%AD%97%E7%89%B9%E5%BE%81/","title":"随机变量的数字特征"},{"content":"静电的基本现象和规律 电荷守恒 场强叠加 库仑定律 $$ \\pmb F_{12}=k\\frac{q_1q_2}{r^2}\\pmb r_{12} \\\\\\ \\\\ 单位: C \\ \\ 1C=1A\\cdot s \\\\\\ \\\\ e = 1.602\\times 10^{-19} (C) \\\\\\ \\\\ 在MKSA单位制中，k=\\frac{1}{4\\pi \\varepsilon_0} \\\\\\ \\\\ \\varepsilon_0 = 8.85\\times 10^{-12} \\ C/(N\\cdot m^2)，k=8.99\\times 10^9(N\\cdot m^2/C^2) \\\\ $$\n电场 电场强度 电场强度的定义 $$ \\pmb E=\\frac{\\pmb F}{q_0}=\\frac{1}{4\\pi\\varepsilon_0}\\frac{q_0}{r^2}\\pmb{\\widehat r} \\\\\\ $$\n高斯定理 立体角(暂定) $$ d\\Omega=\\frac{dS}{r^2} \\Rightarrow d\\Omega = \\frac{\\widehat{\\pmb r}\\cdot d\\pmb S}{r^2} \\\\\\ $$\n高斯定理的表述和证明 表述 通过任意闭合曲面的电通量等于该面包围的所有电量的代数和除以$\\varepsilon_0$\n证明 $$ d\\Phi_E=\\pmb E\\cdot d \\pmb S=\\frac{q}{4\\pi\\varepsilon_0} \\frac{\\widehat{\\pmb r}\\cdot d\\pmb S}{r^2} = \\frac{q}{4\\pi\\varepsilon_0}d\\Omega \\\\\\ \\\\ \\oiint d\\Phi_E=\\frac{q}{4\\pi\\varepsilon_0}\\oiint d\\Omega = \\frac{q}{\\varepsilon_0} \\\\\\ \\\\ \\Phi_E = \\int \\pmb E \\cdot d\\pmb S = \\frac{Q_{in}}{\\varepsilon_0} \\\\\\ \\\\ $$\n","date":"2022-11-30T04:50:46+08:00","permalink":"https://downeyflyfan.com/p/%E9%9D%99%E7%94%B5%E5%9C%BA/","title":"静电场"},{"content":"[toc]\n一、术语 节点 两个或更多元件的连接点 基本节点 三个或更多元件的连接点 路径 基本元件相连的踪迹(相同元件不能重复出现) 支路 连接两个节点的路径 基本支路 连接两个基本节点的路径，不通过基本节点 回路 闭环路径 平面电路 画在平面上没有交叉的电路 超节点 当一个电压源在两个基本节点之间，这两个节点可以组合成一个超节点 超网孔 相邻网孔间只有电流源，可以合并为一个超网孔 二、方法 节点电压法 步骤 调整电路布局，使得电路没有交叉\n选择参考节点\n确定节点电压\n非参考节点到参考节点的电压升 在非参考节点处列$KCL$方程 注意可以合并形成的超节点 网孔电流法 寻找网孔电流\n在每个网孔中列$KCL$方程\n两种方法的选择 谁的方程最少\n是否包含超节点\n是否包含超网孔\n题目要求解的是什么\n电源变换 图示 方法 电压源串电阻 $\\Leftrightarrow$ 电流源并电阻 $$ i_s=\\frac{v_s}{R} $$\n戴维南-诺顿等效电路 图示 戴维南电阻推导 $$ 先计算开路电压V_{Th} \\\\\\ \\\\ 再计算短路电流 i_{sc}=\\frac{V_{Th}}{R_{Th}} \\\\\\ \\\\ R_{Th}=\\frac{V_{Th}}{i_{sc}} $$\n诺顿等效电路 最大功率传输 将电路简化为戴维南电阻连着负载$R_L$ $$ p = i^2R_L = (\\frac{V_{Th}}{R_{Th}+R_L})^2R_L \\\\\\ \\\\ 令\\frac{dp}{dR_L} = 0 \\Rightarrow R_L=R_{Th} \\\\\\ \\\\ p_{max} = \\frac{V_{Th}^2}{4R_L} $$\n叠加原理 当一个线性系统被一个以上的独立源激励或驱动时，总响应是单独响应的和\n总结 网孔电流法只适用于平面电路\n节点电压法适用于平面电路和非平面电路\n","date":"2022-11-29T04:29:48+08:00","permalink":"https://downeyflyfan.com/p/%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%90%E6%B3%95/","title":"电路分析法"},{"content":"[toc]\n一、麦克斯韦电磁理论 1.1 位移电流 理清四个概念 $$ 电场强度\\pmb E\\\\\\ \\\\ 电位移矢量(电感应强度) \\pmb D=\\varepsilon_0 \\pmb E+\\pmb P，单位:C/m^2\\\\\\ \\\\ 磁感应强度\\pmb B\\\\\\ \\\\ 磁场强度\\pmb H=\\frac{\\pmb B}{\\mu_0} $$\n库仑定律+场强叠加定律$\\Rightarrow$ $$ 电场的高斯定律\\\\\\ \\\\ \\oiint\\pmb D\\cdot d\\pmb S=q_0\\\\\\ \\\\ 静电场的环路定律\\\\\\ \\\\ \\oint\\pmb E\\cdot d\\pmb l=0 $$\nBio-Sarurt定律$\\Rightarrow$ $$ 磁场的高斯定律\\\\\\ \\\\ \\oiint \\pmb B\\cdot d\\pmb S=0\\\\\\ \\\\ 安培环路定律 \\\\\\ \\\\ \\oint \\pmb H\\cdot d\\pmb l=I_0 $$\n磁场变化的规律 $$ 法拉第电磁感应定律\\\\\\ \\\\ \\xi =-\\frac{\\partial \\Phi_B}{\\partial t} $$\n位移电流的推导 $$ \\\\ \\oint \\pmb H \\cdot d\\pmb l = I_0=\\oiint \\pmb j_0\\cdot d\\pmb S=-\\frac{dq_0}{dt}\\\\\\ \\\\ \\because \\oiint \\pmb D\\cdot d\\pmb S=q_0\\Rightarrow \\frac{dq_0}{dt}=\\oiint \\frac{\\partial \\pmb D}{\\partial t}d\\pmb S，代入上式\\\\\\ \\\\ \\oiint (\\pmb j_0+\\frac{\\partial \\pmb D}{\\partial t})d\\pmb S=0\\Rightarrow \\pmb j_0+\\frac{\\partial \\pmb D}{\\partial t}是个连续量\\\\\\ \\\\ 其中,\\frac{\\partial \\pmb \\Phi_0}{\\partial t}=\\iint \\frac{\\partial \\pmb D}{\\partial t}\\cdot d\\pmb S叫做\\pmb{位移电流}\\\\\\ \\\\ \\frac{\\partial \\pmb D}{\\partial t}叫做\\pmb{位移电流密度}\\\\\\ \\\\ I_0=\\iint \\pmb j_0\\cdot d\\pmb S叫做\\pmb{全电流}\\\\\\ \\\\ 故\\oint \\pmb H\\cdot d\\pmb l = I_0 + \\frac{\\partial \\pmb \\Phi_D}{\\partial t } $$\n位移电流与传导电流 位移电流是电场变化产生的 传导电流是电荷在导体中移动产生的 1.2 麦克斯韦方程组 积分形式 $$ \\oiint \\pmb D\\cdot d\\pmb S=q_0\\\\\\ \\\\ \\oint \\pmb E\\cdot d\\pmb l=-\\iint\\frac{\\partial \\pmb B}{\\partial t }\\cdot d\\pmb S\\\\\\ \\\\ \\oiint \\pmb B\\cdot d\\pmb S=0\\\\\\ \\\\ \\oint \\pmb H\\cdot d\\pmb l=I_0+\\iint\\frac{\\partial \\pmb D}{\\partial t}d\\pmb S\\\\\\ \\\\ $$\n微分形式 $$ \\nabla \\cdot \\pmb D=\\rho_0\\\\\\ \\\\ \\nabla\\times\\pmb E=-\\frac{d\\pmb B}{dt}\\\\\\ \\\\ \\nabla \\cdot \\pmb B=0\\\\\\ \\\\ \\nabla \\times \\pmb H=\\pmb j_0+\\frac{\\partial \\pmb D}{\\partial t} $$\n最基本形式 $$ \\nabla\\cdot \\pmb E=\\frac{\\rho_0}{\\varepsilon_0}\\\\\\ \\\\ \\nabla\\times\\pmb E=-\\frac{d\\pmb B}{dt}\\\\\\ \\\\ \\nabla \\cdot \\pmb B=0\\\\\\ \\\\ \\nabla\\times \\pmb B= \\varepsilon_0\\mu_0\\frac{\\partial \\pmb E}{\\partial t } +\\mu_0\\pmb j_0 $$\n1.3 边界条件(暂定) 二、电磁波理论 2.1 平面电磁波的解(暂定) 自由空间的麦克斯韦方程 $$ \\nabla\\cdot \\pmb D=0 \\\\\\ \\\\ \\nabla\\times \\pmb E=-\\mu_0\\frac{\\partial \\pmb H}{\\partial t}\\\\\\ \\\\ \\nabla\\cdot \\pmb H=0\\\\\\ \\\\ \\nabla\\times\\pmb H=\\varepsilon_0\\frac{\\partial \\pmb E}{\\partial t} $$\n电磁场中的位置关系 $$ \\pmb E\\perp\\pmb B\\perp 传播方向\\pmb k\\\\\\ \\\\ $$\n2.2 平面电磁波的性质 电磁波是横波\n$\\pmb E$和$\\pmb B$同相位\n$\\pmb{E\\times N}$与传播方向始终同向\n$\\pmb E$和$\\pmb B$的幅值成比例\n$$ \\varepsilon_0^2E_0=\\mu_0^2H_0^2 = B_0^2 $$\n电磁波的速率$v=\\frac{1}{\\sqrt{\\varepsilon_0\\mu_0}}=c$ 三、电磁场的能流密度矢量和动量 3.1 ","date":"2022-11-29T01:00:20+08:00","permalink":"https://downeyflyfan.com/p/%E9%BA%A6%E5%85%8B%E6%96%AF%E9%9F%A6%E7%94%B5%E7%A3%81%E7%90%86%E8%AE%BA%E4%B8%8E%E7%94%B5%E7%A3%81%E6%B3%A2/","title":"麦克斯韦电磁理论与电磁波"},{"content":"二元离散型随机变量 定义 设$X=X(e)$和$Y=Y(e)$是定义在$S$上的随机变量，由它们构成的向量$(X,Y)$叫做二元随机变量\n联合概率分布 定义 若二元随机变量的取值有限，则称$(X,Y)$是离散型随机变量\n概率分布律 $$ f(x,y) = P(X=x_i,Y=y_j)=p_{ij},i,j=1,2\u0026hellip; $$\n性质 $p_{ij}\\ge 0$ $\\sum_{i=1}^\\infin\\sum_{j=1}^\\infin p_{ij}=1$ 边际分布 $$ P(Y=y_j)=P(X\\le+\\infin,Y=y_j)=\\sum_{i=1}^\\infin p_{ij}=p_{\\cdot j},j=1,2\u0026hellip;\\\\\\ \\\\ P(X=x_i)= P(X=x_i,Y\\le+\\infin)=\\sum_{j=1}^{+\\infin}p_{ij}=p_{i\\cdot},i=1,2\u0026hellip; $$\n条件分布 $$ P(X=x_i|Y=y_j)=\\frac{p_{ij}}{p_{\\cdot j}},i=1,2\u0026hellip; $$\n二元随机变量的分布函数 联合分布函数 定义 $$ F(x,y)=P(X\\le x,Y\\le y) $$\n性质 $F(x,y)$关于$x,y$单调不减\n$F(x,y)\\le 1,F(+\\infin,+\\infin)=1$\n$F(x,y)$关于$x,y$右连续\n若$x_1\\le x_2,y_1\\le y_2$,$F(x_2,y_2)-F(x_2,y_1)-F(x_1,y_2)+F(x_1,y_1)\\ge0$\n边缘分布函数 定义 二元随机变量$(X,Y)$中$X$和$Y$的分布函数$F_X(x),F_Y(y)$被称为边缘分布函数\n$$ F_X(x)=F(x,+\\infin)\\\\\\ \\\\ F_Y(y)=F(+\\infin,y) $$\n条件分布函数 $$ F_{X|Y}(x|y)=P(X\\le x|Y=y)=\\frac{P(X\\le x,Y=y)}{P(Y=y)} $$\n二元连续型随机变量 (联合)概率密度函数 定义 若对于为二元随机变量$(X,Y)$,若存在$f(x,y)$ $$ F(x,y)=\\int_{-\\infin}^y\\int_{-\\infin}^xf(u,v)dudv $$ 称$(X,Y)$为二元随机变量的联合概率密度函数 性质 $\\int_{-\\infin}^{\\infin}\\int_{-\\infin}^{+\\infin}f(x,y)dxdy=1$\n对于$f(x,y)$上的连续点有\n$$ f(x,y) = \\frac{\\partial^2 F(x,y)}{\\partial x\\partial y} $$\n边缘概率密度函数 定义 $$ f_X(x)=\\int_{-\\infin}^{+\\infin}f(x,y)dy\\\\\\ \\\\ f_Y(y)=\\int_{-\\infin}^{+\\infin}f(x,y)dx $$\n边缘分布函数 $$ F_X(x)=\\int_{-\\infin}^xf_X(u)du \\\\\\ \\\\ F_Y(y)=\\int_{-\\infin}^yf_Y(v)dv $$\n条件概率密度函数 定义 $$ g_1(x|y) = \\frac{f(x,y)}{f_2(y)} $$\n性质 $g_1(x|y)=1$\n$P(a\\lt X\\lt b|Y=y)=\\int_a^bg_1(x,y)dx$\n全概率公式\n$$ f(x,y)=g_1(x|y)f(y)=g_2(y|x)f(x) $$\n贝叶斯公式 $$ g_1(x|y) = \\frac{g_2(y|x)f_1(x)}{f_2(y)} \\\\\\ \\\\ g_2(y|x) = \\frac{g_1(x|y)f_2(y)}{f_1(x)} $$\n二元均匀分布 定义 $$ f(x,y)\\begin{cases} \\frac{1}{D的面积} \u0026amp; (x,y)\\in D\\\\ 0 \u0026amp; otherwise\\end{cases} $$\n性质 二元均匀分布的条件分布仍为均匀分布 多元随机变量 c.d.f $$ F(X_1,\u0026hellip;,X_n) = Pr(X_1\\le x_1, X_2\\le x_2,\u0026hellip;,X_n\\le x_n) $$\n条件分布 把$\\pmb X = (X_1,\u0026hellip;,X_n)$分成两个子向量$Y,Z$，使得$\\pmb X = (Y,Z)$，其中$Y$有$k$个元素,$Z$有$n-k$个元素，那么有\n$$ g_1(y|z) = \\frac{f(y,z)}{f_2(z)} \\ \\ \\ y \\in \\pmb R^k \\\\\\ \\\\ g_2(z|y) = \\frac{f(y,z)}{f_1(y)} \\\\\\ \\\\ f_1(y) = \\underset{n-k个}{\\int_{-\\infin}^{\\infin} \u0026hellip;\\int_{-\\infin}^{\\infin}} g_2(y|z)f_2(z) dz $$\n随机变量的独立性 定义 若对所有实数$x,y$，有$F(x,y)=F_X(x)F_Y(y)$,称随机变量$X,Y$相互独立\n分类 若为离散型随机变量 $$ X,Y相互独立\\Leftrightarrow p_{ij}=p_i\\cdot p_j对于一切i,j成立 $$\n若为连续型随机变量 $$ X,Y相互独立\\Leftrightarrow f(x,y)=f(x)f(y) $$\n二元随机变量的函数的分布 $Z=X+Y$分布函数 推导 $$ F_Z(z)=P(Z\\le z)=\\underset{x+y\\le z}\\iint f(x,y)dxdy\\\\\\ \\\\ = \\int_{-\\infin}^{+\\infin}[\\int_{-\\infin}^{z-y} f(x,y)dx]dy \\\\\\ \\\\ = \\int_{-\\infin}^{+\\infin}[\\int_{-\\infin}^zf(u-y,y)du]dy \\ (u=x+y) \\\\\\ \\\\ = \\int_{-\\infin}^z[\\int_{-\\infin}^{+\\infin}f(u-y,y)dy]du \\\\\\ \\\\ 又根据定义有: F_Z(z)=\\int_{-\\infin}^z f_Z(u)du\\\\\\ \\\\ \\therefore f_Z(z)=\\int_{-\\infin}^{+\\infin}f(z-y,y)dy \\\\\\ \\\\ f_Z(z)=\\int_{-\\infin}^{+\\infin}f(x,z-x)dx $$\n注意，此处的积分范围要根据$\\pmb z$的定义域范围划分 定义卷积公式 当$X$和$Y$独立时 $$ f_Z(z)=\\int_{-\\infin}^{+\\infin}f_X(z-y)f_Y(y)dy=\\int_{-\\infin}^{+\\infin}f_X(x)f_Y(z-x)dx $$\n","date":"2022-11-29T00:55:01+08:00","permalink":"https://downeyflyfan.com/p/%E5%A4%9A%E5%85%83%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83/","title":"多元随机变量及其分布"},{"content":"随机变量 定义 设随机试验的样本空间为$S={e}$，若$X=X(e)$定义为S上的实值单值函数，则称$X=X(e)$为随机变量\n一般采用大写字母$X,Y,Z$表示随机变量\n引入随机变量是为了描述随机变量\n分类 一般的，若$I$是一个实数集合，则$X\\in I$为事件${e:X(e)\\in I}$\n离散型随机变量 连续型随机变量 解释 某随机变量的随机分布是该随机变量能够取到某些值的一系列概率的集合\n离散型随机变量及其分布 定义 取值至多可数的随机变量称为离散型随机变量\n概率分布律 $X$ $x_1$ $x_2$ \u0026hellip; $x_n$ $P$ $p_1$ $p_2$ \u0026hellip; $p_n$ 性质 $p_i\\geq 0$\n$\\sum_{i=1}^np_i=1$\n几个重要的随机变量分布 0-1分布（两点分布） 若X的分布律为： $X$ $0$ $1$ $p$ $q$ $1-q$ 称$X ～ 0-1(P)$，或$B(1,p)$\n分布律还可以写成 $P(X=k)=p^k(1-p)^{1-k},k=0,1$ 二项分布 n重贝努利试验 设试验E只有两个可能的结果，将E独立、重复进行n次，称这一串独立重复试验为n重贝努利试验\n二项分布的定义 设$A$在$n$重贝努力试验中发生X次，称$X$服从参数为$n,p$的二项分布\n记为$X～B(n,p)$ 概率分布律 二项分布与0-1分布的关系 一次实验: Bernoulli distribution 多次实验: Bernoulli trials $$ P(X=k)=C_n^kp^k(1-p)^{n-k},k=0,1,\u0026hellip;n $$\n均匀分布 离散型函数的均匀分布 设$a$和$b$是两个整数,$X$可能是它们之间的任何一个整数，那么我们说$X$在整数$a,\u0026hellip;,b$中具有均匀分布\n$$ f(x) = \\begin{cases} \\frac{1}{b-a+1} \u0026amp; a \\le x \\le b \\\\ 0 \u0026amp; otherwise \\end{cases} $$\n连续型函数的均匀分布 $$ f(x) = \\begin{cases} \\frac{1}{b-a} \u0026amp; a \\le x \\le b \\\\ 0 \u0026amp; otherwise \\end{cases} $$\n泊松分布 服从概率分布律为 $$ P(X=k)=\\frac{\\lambda^ke^{-\\lambda}}{k!},k=0,1,2\u0026hellip;,\\lambda\\ge0 $$\n的随机变量$X$服从参数为$\\lambda$的泊松分布 记为 $X～P(\\lambda)$ 泊松定理 $$ 当n\\gt 10,p\\lt0.1时\\\\\\ \\\\ C_n^kp^k(1-p)^{1-k}\\approx \\frac{e^{\\lambda}\\lambda^k}{k!},\\lambda = np $$\n超几何分布 满足 $$ P(X=k)=\\frac{C_a^kC_b^{n-k}}{C_N^n},k=l_1,l_1+1\u0026hellip;l_2\\\\\\ \\\\ l_1=max(0,n-b),l_2=min(a,n) $$ 则称$X$服从超几何分布 记为$X～H(N,n,M)$,N是总数，n是样本量，M是A或B 几何分布 满足 $$ P(X=k)=p(1-p)^{1-k},k=1,2,3\u0026hellip;,0\\lt p\\lt 1 $$\n称$X$服从参数$p$的几何分布 记为$X～GE(p)$ 帕斯卡分布 定义 满足 $$ P(X=k)=C_{k-1}^{r-1}p^r(1-p)^{k-r},k=r,r+1\u0026hellip;,0\\lt p\\lt 1 $$\n称为帕斯卡分布 含义 每次试验成功概率为p,进行到成功r次为止的分布即位帕斯卡分布\n其中，几何分布是帕斯卡分布中$r=1$的特殊情况 分布函数 概率质量函数(概率函数) 分布函数(c.d.f) 定义 $X$为一随机变量，对任意实数$x$，函数$F(x)=P(X\\le x)$记为$X$的分布函数\n任何随机变量都有相应的分布函数 性质 $0\\le F(x)\\le 1$\n$F(x)$单调不减\n$F(-\\infin)=0，F(+\\infin)=1$\n$F(x)$右连续，即$F(x+0^+)=F(x)$\n定理 $P(X=x)=F(x)-F(x^-0)$\n$P(x_1 \\lt x \\le x_2) = F(x_2) - F(x_1)$\n$P(X \\gt x) = 1 - F(x)$\n概率质量函数(p.f.) 定义 $$ f(x) = P(X=x) \\\\\\ \\\\ 其中,\\lbrace x:f(x)\\gt 0 \\rbrace 叫做support \\ of \\ distribution \\ of \\ X $$\n性质 $\\sum_{i=1}^\\infin f(x_i) =1$\n$f(x) \\ge 0$\n$Pr(X\\in C) = \\sum_{x_i\\in C} f(x_i)$\n连续型随机变量及其概率密度函数 定义 对于随机变量$X$的分布函数$F(X)$,若存在非负的函数$f(x)$，使对于任意实数$x$\n$$ F(x)=\\int_{-\\infin}^{\\infin}f(t)dt $$\n$X$为连续型随机变量 $f(x)$为概率密度函数($p.d.f$)，简称密度函数 $f(x)$的性质 $f(x)\\ge 0$\n$\\int_{-\\infin}^{+\\infin}f(x)dx=1$\n对于任意实数$x_1,x_2(x_2\\gt x_1)$ $$ P{x_1\\lt X\\lt x_2}=F(x_2)-F(x_1)=\\int_{x_1}^{x_2}f(t)dt $$\n$P(X=a)=0,a\\in R$\n在$f(x)$的连续点，$F\u0026rsquo;(x)=f(x)$\n几个重要的连续型随机变量分布 正态分布（高斯分布） 定义 满足 $$ f(x)=\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}, -\\infin \\lt x \\lt +\\infin, \\\\\\ \\\\ -\\infin \\lt \\mu \\lt +\\infin，\\sigma \\gt 0 $$\n称$X$服从参数为$\\mu,\\sigma$的正态分布 记为 $X～N(\\mu,\\sigma^2)$ 性质 $f(x)$关于$x=\\mu$对称\n$f_{max}=f(\\mu)=\\frac{1}{\\sqrt{2\\pi}\\sigma}$\n$\\underset{|x-\\mu|\\rightarrow\\infin}{lim}f(x)=0$\n独立的$n$个正态变量的线性组合仍然服从正态分布\n标准正态分布 推导 $$ 令t=\\frac{x-\\mu}{\\sigma}，dx=\\sigma dt\\\\\\ \\\\ f(x) = \\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{t^2}{2}},-\\infin\\lt t \\lt +\\infin \\\\\\ \\\\ $$\n上述概率密度函数记为标准正态分布\n$$ 密度函数\\varphi(x)=\\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{t^2}{2}}\\\\\\ \\\\ 分布函数\\Phi(x)=\\int_{-\\infin}^x\\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{t^2}{2}}dt\\\\\\ \\\\ 且\\pmb{\\Phi(x)+\\Phi(-x)=1} $$\n定理 前提 $$ 如果多个变量X_i相互独立,且均服从(\\mu_i,\\sigma_i^2)的正态分布 $$\n定理1 $$ X_1 + \u0026hellip; +X_n服从正态分布 \\\\\\ \\\\ 均值为\\sum_{i=1}^n\\mu_i,方差为\\sum_{i=1}^n\\sigma_i^2 $$\n定理2 $$ a_1,\u0026hellip;,a_n至少有一个不为0 \\\\\\ \\\\ 那么X_1 + \u0026hellip; + X_n 服从正态分布 \\\\\\ \\\\ 均值为\\sum_{i=1}^na_iX_i + b \\\\\\ \\\\ 方差为\\sum_{i=1}^n a_i^2X_i^2 $$\n指数分布 定义 满足 $$ f(x)=\\begin{cases} \\lambda e^{-\\lambda x} \u0026amp;x\\gt 0 \\\\ 0 \u0026amp; x \\le 0 \\end{cases} $$\n的$X$服从参数为$\\lambda$的指数分布 记为$X～E(\\lambda)$ 性质 分布函数 $$ F(x)= \\begin{cases} 1 - e^{-\\lambda x} \u0026amp; x\\gt 0\\\\ 0 \u0026amp; x\\le 0\\end{cases} $$\n无记忆性 $$ For \\ t_0 \\gt 0,t\\gt 0\\\\\\ \\\\ P(X\\gt t_0+t|X\\gt t_0)=\\frac{P(X\\gt t_0+t)}{P(X\\gt t_0)}\\\\\\ \\\\ =\\frac{1-F(t_0+t)}{1-F(t_0)} = e^{-\\lambda t}=P(X\\gt t) $$\n随机变量函数的分布 定理1 设$X～f_X(x)，-\\infin \\lt x\\lt +\\infin，g\u0026rsquo;(x)\\neq 0. \\ Y=g(X)，x=h(y)$,则$Y$的概率密度函数为\n$$ f_Y(y)=\\begin{cases}f_x(h(y))\\cdot|h\u0026rsquo;(y)| \u0026amp; \\alpha \\lt x\\lt \\beta \\\\ 0 \u0026amp; otherwise\\end{cases} $$\n注意，此定理在$h(y)$不确定时不适用 定理2 一般的，若$X～N(\\mu,\\sigma^2)，Y=aX+b\\Rightarrow Y～ N(a\\mu+b,a^2\\sigma^2)$\n总结 对于$F(x)$,概率是函数值；对于$f(x)$，概率是面积\n概率为1不一定是必然事件,概率为0不一定是不可能事件,积事件为0不一定为互斥事件\n无记忆性说明在结束之前，变量$X$始终服从指数分布\n","date":"2022-11-28T23:12:50+08:00","permalink":"https://downeyflyfan.com/p/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83/","title":"随机变量及其分布"},{"content":"样本空间 随机事件 随机试验 可重复 结果的可能性已知 结果未知 样本空间 定义 随机试验E的所有结果构成的集合称为E的样本空间，记为$S={e}$\n特征 exhaustive\n必须包含所有的元素 mutually exclusive\n不能有相同的元素 随机事件 定义 我们称样本空间$S$的子集$A$为$E$的随机事件$A$,简称事件$A$,当且仅当$A$所包含一个样本点发生，称事件$A$发生\n特征 A是相应的样本空间S的一个子集 当且仅当A的一个样本的出现A才发生 事件的分类 基本事件 由一个样本点组成的单点集 必然事件 每次试验S总是发生，则S被称为必然事件 不可能事件 空集$\\Phi$为不可能事件 事件的关系与运算 $$ \\pmb{包含关系}\\\\\\ \\\\ A \\subset B: A发生\\Rightarrow B一定发生\\\\\\ \\\\ \\begin{cases} A\\subset B\\\\ B\\subset A \\end{cases} \\Rightarrow A = B\\\\\\ \\\\ \\pmb{积事件与和事件}\\\\\\ \\\\ 和事件:\\bigcup^n_{i=1}A_i: A_i中至少有一个发生\\\\\\ \\\\ 积事件: \\bigcap_{i=1}^nA_i:A_i同时发生\\\\\\ \\\\ A\\bigcap B可以简写成AB,以此类推\\\\\\ \\\\ \\pmb{互斥事件/互不相容 \\ \\ disjoint \\ event \\ or \\ mutually \\ exclusive}\\\\\\ \\\\ 当AB=\\phi时，A,B互斥\\\\\\ \\\\ \\pmb{逆事件/对立事件}\\overline A\\\\\\ \\\\ 记\\overline A为A的逆事件,有\\begin{cases} A\\bigcup \\overline A =S \\\\ A\\overline A = \\phi \\end{cases}\\\\\\ \\\\ 上述定理 的逆定理也成立\\\\\\ \\\\ \\pmb{差事件} \\\\\\ \\\\ A\\overline B = A - B \\Leftrightarrow {x|x\\in A ,x\\notin B}\\\\\\ \\\\ \\pmb{补集} \\\\\\ \\\\ A^C = {{s \\in S|s \\notin A}} $$\n和、积关系式 —— 德摩根定律 $$ (A \\bigcup B)^c = A^c \\bigcap B^c \\\\\\ \\\\ (A \\bigcap B)^c = A^c \\bigcup B^c \\\\\\ \\\\ 推广 \\\\\\ \\\\ \\overline{\\bigcap_{i=1}^n A_i}=\\bigcup_{i=1}^n\\overline {A_i}=\\overline {A_1}\\bigcup \\overline {A_2}\u0026hellip;\\overline {A_n}\\\\\\ \\\\ \\overline{\\bigcup_{i=1}^n A_i} = \\bigcap_{i=1}^n \\overline{A_i}= \\overline{A_1} \\ \\overline{A_2}\u0026hellip;\\overline{A_n}\\\\\\ \\\\ $$\n其他公式 $$ P(A\\overline B) = P(A)-P(AB) \\\\\\ \\\\ A\\bigcap \\Big(B\\bigcup C\\Big) = AB\\bigcup AC $$\n频率与概率 频率 定义 $$ f_n(A)=\\frac{n_A}{n} $$\n$n_A$为事件出现的次数 n为试验的总次数 性质 $0\\leq f_n(A)\\leq 1$\n$f_n(S) = 1$\n若$A_1,A_2\u0026hellip;A_n$两两互斥,则$f_n(\\bigcup_{i=1}^k A_i) = \\sum_{i=1}^kf_n(A_i)$\n$f_n(A)$随n的增大稳定，稳定值记为p\n概率 定义 非负, $P(A)\\ge 0$\n规范, $P(S)=1$\n可列可加性\n若$A_1,A_2\u0026hellip;A_n$两两互斥(disjoint events),则$P(\\bigcup_{i=1}^k A_i) = \\sum_{i=1}^kP(A_i)$ 性质 $P(\\phi)=0$\n若$A_1,A_2\u0026hellip;A_n$两两互斥,则$P(\\bigcup_{i=1}^k A_i) = \\sum_{i=1}^kP(A_i)$\n$P(A)=1-P(\\overline A)$\n概率的减法公式\n$$ 若A\\subset B，则P(B-A)=P(B)-P(A) \\Rightarrow P(B) \\gt P(A)\\\\\\ \\\\ 一般情况下,P(B-A)= P(B)-P(AB) $$\n概率的加法公式 $$ 对于两个事件A和B\\\\\\ \\\\ P(A\\bigcup B) =P(A)+P(B)-P(AB)\\\\\\ \\\\ 对于三个事件A,B,C\\\\\\ \\\\ P(A\\bigcup B\\bigcup C) = P(A)+P(B)+P(C)-P(AB)-P(AC)-P(BC)+P(ABC)\\\\\\ \\\\ 一般情况\\\\\\ \\\\ P(\\bigcup_{i=1}^n A_i)=\\sum_{i=1}^nP(A_i)-\\underset{1\\leq i\\lt j\\leq n}\\sum P(A_iA_j)+\u0026hellip;+(-1)^{n-1}P(A_1 A_2\u0026hellip; A_n) $$\n等可能概型(古典概型) 定义 满足 S中样本点有限,出现每一样本点的概率相同的试验被称为等可能概型\n等可能性 有限性 组合数 $$ A_n^m = \\frac{n!}{(n-k)!} $$\n选择数 定义 $$ C_m^n = \\tbinom{m}{n} =\\frac{n!}{m!(n-m)!} $$\n二项式系数 $$ (x + y)^n = \\sum_{k=1}^n \\tbinom{n}{k} x^ky^{n-k} $$\n放回抽样总结 有序:$n^k$\n无序:$C_{n+k-1}^k$\n多项式系数 含义 从$n$个数中选$k$组，每一组的个数分别为$n_1,\u0026hellip;,n_k$\n公式 $$ \\tbinom{n}{n_1,n_2,\u0026hellip;,n_k} = \\frac{n!}{n_1!\u0026hellip;n_k!} \\\\\\ \\\\ 其中: \\sum_{i=0}^k n_i = n $$\n条件概率 定义 $$ P(B|A)=\\frac{P(AB)}{P(A)} = \\frac{N(AB)}{N(A)},P(A)\\neq 0 $$\n性质 $$ P(B|A)具有概率所具有的性质\\\\\\ \\\\ 乘法公式\\\\\\ \\\\ P(AB) = P(A)\\cdot P(B|A)=P(B)\\cdot P(A|B)\\\\\\ \\\\ P(ABC) = P(A)P(B|A)P(C|AB)\\\\\\ \\\\ P(A_1 A_2 \u0026hellip;A_n)=P(A_1)P(A_2|A_1)P(A_3|A_1A_2)\u0026hellip;P(A_n|A_1A_2 \u0026hellip; A_{n-1}) $$\n全概率公式与Bayes公式 划分 不漏: $B_1\\bigcup B_2\u0026hellip;\\bigcup B_n= S$ 不重: $B_i B_j= \\phi,i\\neq j$ 则称$B_1,B_2\u0026hellip;B_n$为S的一个划分\n全概率公式 $$ P(A)=\\sum_{i=1}^nP(B_j)\\cdot P(A|B_j) $$\nBayes公式 定义式 $$ P(B_i|A)=\\frac{P(B_i)P(A|B_i)}{\\sum_{j=1}^nP(B_j)\\cdot P(A|B_j)}=\\frac{P(AB_i)}{P(A)} $$\n条件概率形式 $$ P(B_i|A\\bigcap C) = \\frac{P(B_i|C)\\cdot P(A|B_i\\bigcap C)}{\\sum_{j=1}^n P(B_j|C)\\cdot P(A|B_j\\bigcap C)} $$\nPrior Probability 和 Posterior Probability 事件独立性与独立试验 两两独立 定义 若$P(AB)=P(A)P(B)$，则A与B相互独立\n性质 性质1 $$ 对于独立事件A,B\\\\\\ \\\\ P(A|B)=P(A),P(B|A)=P(B) $$\n性质2 如果$A$和$B$相互独立，那么 $A$和$B^c$;$A^c$和$B^c$ 也相互独立\n相互独立 定义 $$ 若P(A_1A_2\u0026hellip;A_n) = P(A_1)P(A_2)\u0026hellip;P(A_n) \\\\\\ \\\\ 那么称A_1,A_2,\u0026hellip;,A_n相互独立 $$\n数量 $$ 若以上事件两两独立，则有C_n^2+C_n^3 + \u0026hellip;+C_n^n \\\\\\ \\\\ = (2^n -n - 1)个算式得到满足 $$\n不相容 $\\neq$ 独立 条件独立 定义 $$ 当P(A_1A_2\u0026hellip;A_n|B) = P(A_1|B)P(A_2|B)\u0026hellip;P(A_n|B)时 \\\\\\ \\\\ 事件A_1,A_2,\u0026hellip;,A_n对于B条件独立 $$\n定理 $$ 若P(C|B) \\ge 0 \\\\\\ \\\\ 则当P(A|C\\bigcap B) = P(A|B)时 \\\\\\ \\\\ A与C关于B条件独立 $$\n注意 两两独立不等于相互独立 实际问题可以根据事情情况检验独立性 在大量重复实验中，小概率事件必然发生 ","date":"2022-11-28T05:08:00+08:00","permalink":"https://downeyflyfan.com/p/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","title":"基本概念"},{"content":"[toc]\n一、基尔霍夫定理 1.1 基尔霍夫电流定律 定义 在电路中，任何节点上的所有电流的代数和为0\n其中，基尔霍夫电流方程被称为KCL方程 1.2 基尔霍夫电压定律 定义 在电路中，环绕任何闭合路径的电压为0\n1.3 应用 1.3.1 含源受控电路的分析 二、常见的特殊电路 2.1 惠斯通电桥 图示 推导 $$ 当电路平衡，即i_g = 0时，有以下推导:\\\\\\ \\\\ KCL\\begin{cases}i_1=i_3 \\\\ i_2=i_x\\end{cases} \\\\\\ \\\\ KVL\\begin{cases} i_1R_1=i_2R_2\\\\ i_3R_3=i_xR_x\\end{cases}\\\\\\ \\\\ \\Rightarrow R_1R_x=R_2R_3\\Leftrightarrow R_x=\\frac{R_2}{R_1}R_3 $$\n2.2 $\\Delta - Y(\\pi-T)$等效电路 $\\Delta$与$\\pi$结构的转换 $Y$和$T$的转换 $\\Delta-Y$变换\n图示 公式\n$$ 通过串并联的简单计算可以得到\\\\\\ \\\\ R_1=\\frac{R_bR_c}{R_a+R_b+R_C} \\\\\\ \\\\ R_2=\\frac{R_aR_c}{R_a+R_b+R_C} \\\\\\ \\\\ R_3=\\frac{R_aR_b}{R_a+R_b+R_C} \\\\\\ \\\\ 反过来\\\\\\ \\\\ R_a=\\frac{R_1R_2+R_2R_3+R_1R_3}{R_1}\\\\\\ \\\\ R_b=\\frac{R_1R_2+R_2R_3+R_1R_3}{R_2} \\\\\\ \\\\ R_c=\\frac{R_1R_2+R_2R_3+R_1R_3}{R_3} $$\n三、补充 3.1 电流 电压 功率 功 电流 单位时间、单位面积内穿过的电荷数 $$ i(t) = \\frac{dq}{dt} $$\n电压 移动一个电荷所需要的功 $$ v(t)= \\frac{dw}{dq} $$\n功率 $$ vi = \\frac{dw}{dt} = p $$\n功 $$ w = \\int p dt = \\int vi dt $$\n3.2 独立源 非独立源 分类 按流动频率分 AC DC 按独立性分 独立源 电压控制的电流源(VCCS) 电流控制的电压源(CCVS) 电压控制的电压源(VCVS) 电流控制的电流源(CCCS) 电流源相当于开路，电压源相当于短路\n电阻 电容 电感 都属于被动元件(Passive Component)\n一定要注意单位\n3.3 电阻和电导 电阻 $$ R = \\frac{U}{I} = \\frac{\\rho L}{S} $$\n","date":"2022-11-27T06:07:17+08:00","permalink":"https://downeyflyfan.com/p/%E7%94%B5%E9%98%BB%E5%85%83%E4%BB%B6%E4%B8%8E%E7%AE%80%E5%8D%95%E7%94%B5%E9%98%BB%E7%94%B5%E8%B7%AF/","title":"电阻元件与简单电阻电路"},{"content":"[toc]\n一、电磁感应定律 1.1 法拉第电磁感应定律 $$ \\xi=-k\\frac{d\\phi}{dt}\\\\\\ \\\\ 当\\phi的单位为Wb,\\xi 的单位为V,k=1\\\\\\ \\\\ 当有多匝线圈时,\\xi=-N\\frac{d\\phi}{dt}\\\\\\ $$\n1.2 楞次定律 闭合回路中感应电流的方向总是使得它所激发的电场阻碍引起感应电流的磁通量的变化\n1.3 电磁阻尼 二、动生电动势和感生电动势 定义 动生电动势 恒磁场内导体运动所产生的电动势 感生电动势 导体不动，磁场变化产生的电动势 动生电动势 图示 推导 $$ \\\\ 自由电子受到的力\\pmb F=-e(\\pmb{v\\times B})\\\\\\ \\\\ 单位正电荷的非静电“力”\\pmb K=\\frac{\\pmb F}{-e}=\\pmb{v\\times B}\\\\\\ \\\\ \\xi = \\int_C^D\\pmb K\\cdot d\\pmb l=\\int_C^D (\\pmb{v\\times B})d\\pmb l\\\\\\ \\\\ \\xi = \\int vBdl\\ $$\n交流发电机原理 图示 推导 $$ \\\\ 设AB长为l,CD长为s\\\\\\ \\\\ \\xi_{AB} = \\xi_{CD} = \\int_A^B(\\pmb{v\\times B})d\\pmb l=vBlcos\\theta\\\\\\ \\\\ \\xi = 2\\xi_{AB} = 2vBlcos\\theta\\\\\\ \\\\ \\theta = \\omega t, v = \\frac{s}{2}\\omega\\\\\\ \\\\ \\pmb{\\xi =\\omega BS cos\\omega t}\\ $$\n感生电动势和涡旋电场 $$ \\\\ \\xi = \\int\\pmb K\\cdot d\\pmb l\\\\\\ \\\\ \\xi = -\\frac{d\\phi}{dt}=-\\frac{d}{dt}\\int \\pmb B\\cdot d\\pmb S = -\\frac{d}{dt}\\int \\pmb A\\cdot d\\pmb l = -\\oint \\frac{\\partial A}{\\partial t}d\\pmb l\\\\\\ \\\\ \\therefore \\pmb K=-\\frac{\\partial \\pmb A}{\\partial t}\\\\\\ \\\\ 麦克斯韦发现,\\pmb K=\\pmb E_旋\\\\\\ \\\\ \\therefore \\pmb E_旋=-\\frac{\\partial \\pmb A}{\\partial t}\\\\\\ \\\\ 又\\because \\pmb E_势 = -\\nabla U\\\\\\ \\\\ \\therefore \\pmb E = \\pmb E_势 + \\pmb E_旋 = -\\nabla U - \\frac{\\partial \\pmb A}{\\partial t}\\ $$\n电子加速器 $$ 设轨道处的磁场为B(R),运动轨道内的平均磁场为\\overline B\\\\\\ \\\\ 有evB(R) = \\frac{mv^2}{R}\\longrightarrow B(R)=\\frac{mv}{eB}\\\\\\ \\\\ \\xi = -\\frac{d\\phi}{dt}=\\int \\pmb E_旋\\cdot d\\pmb l \\\\\\ \\\\ \\therefore \\pmb E_旋 = -\\frac{1}{2\\pi R}\\frac{d\\phi}{dt}\\\\\\ \\\\ 根据牛顿第二定律 \\frac{d(mv)}{dt}=F=-e E_旋 = \\frac{e}{2\\pi R}\\frac{d\\phi}{dt}\\\\\\ \\\\ d(mv) = \\frac{e}{2\\pi R}d\\phi\\\\\\ \\\\ 设v_0=0,\\phi_0=0,有\\\\\\ \\\\ mv = \\frac{e}{2\\pi R}\\phi = \\frac{e}{2\\pi R}\\pi R^2 \\overline B\\longrightarrow \\overline B = \\frac{2mv}{eB}\\\\\\ \\\\ \\therefore B(R) = \\frac{1}{2}\\overline B\\ $$\n三、互感和自感 3.1 互感系数 图示 推导 $$ 易知: \\Phi_{12}=M_{12}I_1,\\Phi_{21}=M_{21}I_2]\\\\\\ \\\\ \\Phi_{12}=\\oint \\pmb A\\cdot d\\pmb l=\\oint\\frac{\\mu_0I_1}{4\\pi}\\oint\\frac{d\\pmb l_1}{r_{12}}d\\pmb l_2\\\\\\ \\\\ \\Phi_{12}=\\frac{\\mu_0I_1}{4\\pi}\\oint\\oint\\frac{d\\pmb l_1\\cdot d\\pmb l_2}{r_{12}}\\\\\\ \\\\ \\therefore M_{12}=\\frac{\\Phi_{12}}{I_1}=\\frac{\\mu_0}{4\\pi}\\oint\\oint\\frac{d\\pmb l_1\\cdot d\\pmb l_2}{r_{12}}\\\\\\ \\\\ 同理：M_{12}=M_{21} $$\n单位 $$ 1H=\\frac{1Wb}{1A}=\\frac{1V\\cdot 1s}{1A}\\\\\\ \\\\ 1mH=10^{-3}H,1\\mu H=10^{-6}H $$\n3.2 自感 定义 电生磁，磁再生电，影响原电动势 推导 $$ 我们知道: \\Phi=LI \\\\\\ \\\\ 根据电磁感应定理: \\xi = -\\frac{d\\Phi}{dt}=-L\\frac{dI}{dt}\\\\\\ \\\\ $$\n其中比例系数L与线圈的大小、几何形状、匝数有关 互感与自感的关系(无漏磁) $$ 根据(1)式：M=\\frac{N_1\\Phi_{21}}{I_2}=\\frac{N_2\\Phi_{12}}{I_1}\\\\\\ \\\\ 又\\because L_1=\\frac{N_1\\Phi_1}{I_1},L_2=\\frac{N_2\\Phi_2}{I_2}\\\\\\ \\\\ \\therefore M^2=L_1L_2\\longrightarrow \\pmb{M=\\sqrt{L_1L_2}}\\\\\\ \\\\ 在有漏磁的情况下，M\\lt \\sqrt{L_1L_2} $$\n3.3 两个线圈串联的自感系数 顺接与反接 产生的磁场方向相同为顺接，相反为反接 推导 $$ 顺接时\\\\\\ \\\\ \\xi_1+\\xi_{21}=-L_1\\frac{dI}{dt}-M\\frac{dI}{dt}\\\\\\ \\\\ \\xi_2+\\xi_{12}=-L_2\\frac{dI}{dt}-M\\frac{dI}{dt}\\\\\\ \\\\ 总电动势\\xi=-(L_1+L_2+2M)\\frac{dI}{dt}\\\\\\ \\\\ \\therefore 总自感\\pmb{L = L_1+L_2+2M}\\\\\\ \\\\ 反接时 \\\\\\ \\\\ \\pmb{L = L_1+L_2-2M} $$\n3.4 自感磁能与互感磁能 自感磁能 $$ 对于一个线圈来说,在电压增大过程中抵抗其自感电动势所做的功为\\\\\\ \\\\ dW = -\\xi_i i dt\\\\\\ \\\\ 其中 \\xi_i=-L\\frac{dI}{dt}\\\\\\ \\\\ \\therefore dW = Lidi\\\\\\ \\\\ \\pmb{W=\\int dW=\\int_0^I Lidi=\\frac{1}{2}LI^2},称为自感磁能 $$\n互感磁能 $$ 同理，互感磁能应为\\pmb{W=MI_1I_2}\\\\\\ \\\\ 因此互感线圈 的总磁能为\\\\\\ \\\\ \\pmb{W=\\frac{1}{2}L_1I^2+\\frac{1}{2}L_2I^2+MI_1I_2} $$\n","date":"2022-11-26T18:45:06+08:00","permalink":"https://downeyflyfan.com/p/%E7%94%B5%E7%A3%81%E6%84%9F%E5%BA%94/","title":"电磁感应"},{"content":"概述 建模总思路 + 子任务 + 难点\n方法合理性 = 模型过检验 + 结果可解释\n敏感性分析\n步骤 数据预处理(必须!!!) 难点与方案 数据丑 解决方案 样本量小 数据增强(通过变换和平移样本，获得更多数据) 缺失值多 1. 若缺失值的样本很少，删除含有缺失值的样本 2. 删除缺失值很多的特征 3. 插值(用机器学习补差) 定类变量 样本量非常小 正向化 要点 补全 \u0026gt; 剔除 $2/3$页作为预处理 指标的选择!!!(非常重要) 平均值\n稳定性\n用方差、标准差衡量 连续性 用ACF(自相关函数)描述，并可视化 频率(根据具体题目而言)\n比例(根据具体题目而言)\n必须要详细\n模型的选择 慎重选择的模型 神经网络、遗传算法，不要选!!\n主成分分析要慎重\n可用的模型列举 回归\n拟合\n基于TOPSIS的熵权法\n结果 预测精度要说明\n一定要检验!\n解释模型 数学公式解释\n并指出具体的指标\n写作 摘要 总体写法 摘要总体结构 = 总述*1 + 子任务 *n + 优势*1\n总述 = 总目的/总流程(本文解决的核心问题是\u0026hellip;)\n每段子任务 = 子目的 + 方法 + 数字结果(如果有) + **难点解决 + 评论}\n一句话总结 + 优势\n细节 第一次出现的术语要写全称\n重点加粗, 不要太多\n不重复使用词汇\n描述方式 图 算法 表格 参考文献 公式 附件 引用时要指出引用图片 通过伪代码或自然语言描述!! 统一风格 5-15个之间 重要公式要加编号 指出是题目所给附件 不要连续给多个图 描述完算法后，再指出使用附录中的代码 在表格上方编号 公式符号不使用英文单词，容易引起歧义 一定要解释图像 算法的介绍和解释一定不能泛，要具体 用三线表 图表一定要具体引用 其他 非技术性报告要图文并茂\n启发式算法、遗传算法\u0026hellip; 不容易得高分\n建模过程中会出现分段拟合的情况，分段进行建模\n确定模型后，要将模型的定义和方法再结合题意复述一遍\n模型假设时可以考虑的两个角度：一是对数据的可靠性，二是对其他影响因素忽略不计\n数据预处理时用到的理论也要进行说明\n列表简化数据的表述\n赛前准备 看往年题，分析思路\n去中国大学生在线看对应的优秀论文\n","date":"2022-11-25T17:18:37+08:00","permalink":"https://downeyflyfan.com/p/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/","title":"经验总结"},{"content":"什么是git 定义\n开源的分布式版本控制系统 特点\n分布式 按元数据方式存储数据 内容完整性高 工作流程 stateDiagram 资源库 --\u003e 工作副本:clone 工作副本 --\u003e 修改工作副本: 编辑、添加、删除 资源库 --\u003e 修改工作副本: 更新 修改工作副本 --\u003e 检查修改: 查看status, change 检查修改 --\u003e 提交修改: push 提交修改 --\u003e 修改错误: push,change 修改错误 --\u003e 资源库: push 提交修改 --\u003e 资源库: push 创建仓库 创建 git init \u0026lt;repo\u0026gt;创建仓库repo\n生成.git目录\n纳入版本控制 git add \u0026lt;file\u0026gt;让git对文件进行跟踪\n该操作支持正则表达式 git commit -m \u0026lt;file\u0026gt; 提交文件\n复制 git clone \u0026lt;repo\u0026gt; (\u0026lt;dir\u0026gt;)将仓库repo拷贝到dir目录 配置 git config显示当前的git配置信息\ngit config -e针对当前仓库编辑文件\ngit config -e --global针对系统中所有的仓库\n设置全局用户信息\n1 2 git config --global user.name \u0026lt;name\u0026gt; git config --global user.email \u0026lt;email\u0026gt; 基本操作 示意图 stateDiagram workspace --\u003e staging_area: add staging_area --\u003e lcoal_repository: commit lcoal_repository --\u003e remote_repository: push remote_repository --\u003e lcoal_repository: fetch/clone lcoal_repository --\u003e workspace: checkout remote_repository --\u003e workspace: pull 简单的操作步骤 1 2 3 git init # 初始化仓库 git add . # 将文件添加到暂存区 git commit # 将暂存区内容添加到仓库 提交和修改 git add git add [file1] [file2] \u0026hellip; 添加多个文件到暂存区 git add [dir] 添加目录到暂存区 git add . 添加当前目录下所有文件到暂存区 git diff git diff [file] 显示暂存区和工作区的差异 git diff \u0026ndash;cache(staged 也可) [file] 显示暂存区和上一次提交的差异 git diff [first-branch]\u0026hellip;[second branch] 显示两次提交之间的差异 git commit git commit -m [message] 提交暂存区到本地仓库 git commit [file1] [file2] \u0026hellip; -m [message] 提交暂存区的指定文件到本地仓库 git commit -a 不需要git add直接提交 git reset git reset HEAD 回退所有内容到上一个版本 git reset HEAD [file] 回退文件file到上一个版本 git reset \u0026ndash;soft HEAD~n 回退到前n个版本 git reset \u0026ndash;hard HEAD 撤销工作区中所有未提交的修改内容 HEAD^中^的个数表示前几个版本\nHEAD~n可以取代上面的方式\nmessage为备注信息\n其他指令 git status 查看仓库状况，显示有变更的文件 git rm 从暂存区和工作区中删除文件 git mv 移动或重命名工作区文件 提交日志 git log git log \u0026ndash;oneline 查看历史提交记录的简洁形式 git log \u0026ndash;graph 拓朴图形式查看历史提交记录 git blame \u0026lt;file\u0026gt;查看指定文件的修改记录 远程操作 git remote git remote -v 显示所有远程仓库 git remote show [remote] 显示某个远程仓库信息 git remote add [shortname] [url] 添加远程版本库 git remote rm name 删除远程仓库 git remote rename [old_name] [new_name] 修改仓库名 git fetch git fetch [alias]提取更新数据\n执行完后需要git merge branch从远程仓库提取数据并尝试合并到当前分支\ngit pull 1 git pull [远程主机名] [远程分支名]:[本地分支名] 将远程主机的分支拉过来与本地分支合并\n若远程分支与当前分支合并，则冒号后可以省略\ngit push 1 git push [远程主机名] [本地分支名]:[远程分支名] 将本地分支推送到远程主机\n参数\n\u0026ndash;force 强制推送 \u0026ndash;delete 删除主机分支 分支管理 创建分支 git branch \u0026lt;name\u0026gt;创建分支\ngit branch列出分支\n切换分支 git checkout \u0026lt;name\u0026gt; 分支合并 git merge \u0026lt;branch\u0026gt; 将分支branch合并到当前所在分支中 合并冲突 删除分支 git branch -d \u0026lt;name\u0026gt; 查看提交历史记录 git log查看历史提交记录\ngit blame \u0026lt;file\u0026gt;以列表形式查看指定文件的历史修改记录\nGit与Github 添加远程仓库 1 2 git remote add [远程仓库名称] [url] # 名称自取，url可以是https,也开始是ssh等其他格式 生成SSH Key 1 2 ssh-keygen -t rsa -C “Email@example.com” # 邮箱为注册github的邮箱 待定 ","date":"2022-11-25T05:07:46+08:00","permalink":"https://downeyflyfan.com/p/git/","title":"Git"},{"content":"算法 定义 解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列\n特性 有穷性 确定性 可行性 算法效率的度量 运行时间 取决于算法的好坏与问题的输入规模（输入量） 算法时间复杂度 $T(n)=O(f(n))$\nT(n)增长最慢的为最优算法 分类与排序\n$O(1) \u0026lt; O(log(n))\u0026lt; O(n) \u0026lt; O(nlog(n)) \u0026lt; O(n^2) \u0026lt; O(n^3) \u0026lt; O(n!) \u0026lt; O(n^n)$ 最坏情况与平均情况\n一般运行时间为最坏运行时间 平均运行时间是一个期望值 算法空间复杂度 $S(n)=O(f(n))$ 线性表(List) 线性表(List)定义 零个或多个数据元素的有限序列 每个元素都有一个直接前驱和直接后继元素 数据元素是一对一的关系 抽象数据类型 Operation IintList(*L); ListEmpty(L); GetElem(L,i,*e); LocateELem(L,e); ListInsert(*L,i,e); ListDelete(*L,i,*e); ListLength(L); endADT 顺序存储结构 定义 用一段地址连续的存储单元依次存放线性表的数据元素\n三个属性 最大长度 当前长度 起始位置 结构代码 1 2 3 4 5 6 7 #define MAXSIZE 20 typedef int ElemType typedef struct { ElemType data[MAXSIZE]; //数组存取数据元素 int length; //线性表当前长度 }SqList; 插入与删除 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 //插入 Status ListInsert(SqList *L,int i, ElemType e) { int k; if (L-\u0026gt;length==MAXSIZE) return -1; else if (i\u0026lt;1 || i\u0026gt;L-\u0026gt;length) return -1; else { for(k=L-\u0026gt;Length-1;k-\u0026gt;i-1;k--) L-\u0026gt;data[k+1]=L-\u0026gt;data[k]; } L-\u0026gt;data[i-1]=e; L-\u0026gt;length++; return 0; } //删除 Status ListDelete(SqList *L, int i, ElemType e) { int k; if (L-\u0026gt;length==0) return -1; else if (i\u0026lt;1 || i\u0026gt;L-\u0026gt;length) return -1; *e=L-\u0026gt;data[i-1]; if (i\u0026lt;L-\u0026gt;length) { for(k=i;k\u0026lt;L-\u0026gt;length;k++) L-\u0026gt;data[k+1]=L-\u0026gt;data[k]; } L-\u0026gt;length--; return 0; } 链式存储结构 结点 数据域 存储数据元素信息的域 指针域 存储直接后继的域 存储的信息称指针(链) 最后一个结点指针为空 头指针 链表中第一个结点的存储位置 头结点 在第一个结点前加一个头结点 数据域可以为空 对第一个结点进行的操作可以统一 单链表(每个结点只包含一个指针域的链表)操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 //定义 typedef struct Node { ElemType data; struct Node *next; }Node; typedef struct Node *LinkList; //读取 Status GetElem(LinkList L,int i,ElemType *e) { int j; LinkList p; p = L-\u0026gt;next; j = 1; while (p \u0026amp;\u0026amp; j\u0026lt;i) //p不为空且j小于i的时候 { p = p\u0026gt;-next; j++; } if (!p || j\u0026gt;i) return -1; //第i个元素不存在 *e = p-\u0026gt;data; // 取第i个元素的数据 return 0; } //插入 Status ListInsert(LinkList L,int i,ELemType e) { int j; LinkList,p,s; p =*L; j=1; while(p\u0026amp;\u0026amp;j\u0026lt;i) { p=p-\u0026gt;next; ++j; } if (!p||j\u0026gt;i) return -1; s = (LinkList)malloc(sizeof(Node)); //生成新结点 s-\u0026gt;data=e; s-\u0026gt;next=p-\u0026gt;next; p-\u0026gt;next=s; return 0; } //删除 Status ListDelete(LinkList L,int i,ElemType e) { int j; LinkList p,q; p =*L; j=1; while(p=p-\u0026gt;next\u0026amp;\u0026amp;j++\u0026lt;i) ; if (!(p-\u0026gt;next) || j \u0026gt; i) return -1; q = p-\u0026gt;next; p -\u0026gt;next = q-\u0026gt;next; *e = q-\u0026gt;data //回收删除数据 free(q); return 0; } //整表创建 //头插法 void CreateListHead(LinkList *L, int n) { LinkList p; int i; srand(time(0)); *L = (LinkList)malloc(sizeof(Node)); (*L)-\u0026gt;next = NULL; for (i=0;i\u0026lt;n;i++) { p = (LinkList)malloc(sizeof(Node)); p-\u0026gt;data = rand()%100+1; p-\u0026gt;next = (*L) -\u0026gt;next; (*L)-\u0026gt;next = p; } } //尾插法 void CreateListTail(LinkList *L, int n) { LinkList p,r; int i; srand(time(0)); *L = (LinkList)malloc(sizeof(Node)); r = *L; for(i=0;i\u0026lt;n;i++) { p = (Node *)malloc(sizeof(Node)); p-\u0026gt;data = rand()%100+1; r-\u0026gt;next = p; r = p; } r-\u0026gt;next = NULL; } //整表删除 Status ClearList(LinkList *L) { LinkList p,q; *p=(*L)-\u0026gt;next; while(p) { q=p-\u0026gt;next; free(q); p=q; } (*L)-\u0026gt;next=NULL; return 0; } 单链表结构和顺序存储结构的优缺点 对比/分类 顺序存储结构 单链表 查找 O(1) O(n) 插入和删除 O(n) O(1) 空间 需要预分配，灵活性和安全性低 非常棒 静态链表 定义 用数组描述的链表\n组成 数据域\n游标(cur)\n第一个游标存放备用链表第一个结点的下标 最后一个游标存放第一个插入元素的下标 特殊称呼 —— 备用链表 未被使用的数组元素 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 //定义 #define MAXSIZE 1000 typedef struct { ELemType data; int cur; }Component,StaticLinkList[MAXSIZE]; //初始化 Status InitList(StaticLinkList space) { int i; for(i=0;i\u0026lt;MAXSIZE-1;i++) space[i].cur=i+1; space[MAXSIZE-1].cur=0; return 0; } //插入 Status ListInsert(StaticLinkList L,int i, Elemtype e) { int j,k,l; k=MAXSIZE-1; } 循环链表 定义 将单链表的最后一个指针指向头结点,形成循环链表\n合并循环链表 代码 1 2 3 p = rearA-\u0026gt;next; //将A的头结点存起来 rearA-\u0026gt;next = rearB-\u0026gt;next-next;//让A的尾结点指向B的第二个结点，B的头结点被抛弃 rearB-\u0026gt;next = p;//让B的结尾指向A的头结点 双向链表 定义 在每一个结点中设置一个指向其前驱结点的指针的单链表 存储结构 1 2 3 4 5 6 typedef struct DulNode { Elemtype data; struct DulNode *prior; struct DulNode *next; } DulNode,*DulLinkList; 有趣的事实 后继的前驱 = 前驱的后继 = 自己 1 p-\u0026gt;next-\u0026gt;prior = p-\u0026gt;prior-\u0026gt;next = p 代码 1 2 3 4 5 6 7 8 9 10 // 插入 s-\u0026gt;prior = p; s-\u0026gt;next = p-\u0026gt;next; p-\u0026gt;next-\u0026gt;prior=s; p-\u0026gt;next=s; //删除 p-\u0026gt;prior-\u0026gt;next=p-\u0026gt;next; p-next-\u0026gt;prior=p-\u0026gt;prior; free(p); ","date":"2022-11-25T00:38:32+08:00","permalink":"https://downeyflyfan.com/p/%E7%BA%BF%E6%80%A7%E8%A1%A8/","title":"线性表"},{"content":"一、磁的基本现象和规律 1.1 磁的库仑定律 $$ 引入磁场强度的概念\\\\\\ \\\\ 定义\\pmb H=\\frac{F}{q_{m0}}\\\\\\ \\\\ \\pmb H=-\\nabla U_{m0}，U_{m0}被称为磁势\\\\\\ \\\\ 与静电学相对应有:\\\\\\ \\\\ \\oint \\pmb H\\cdot d\\pmb l=0\\\\\\ \\\\ \\pmb H=\\frac{\\tau_m}{4\\pi \\mu_0}\\nabla \\Omega\\\\\\ \\\\ \\pmb L=\\pmb{p_m\\times H} $$\n1.2 安培定律 推理\n$$ 对于两段载流导线上的电流元来说\\\\\\ \\\\ dF_{12}\\propto\\frac{I_1dl_1\\cdot I_2dl_2}{r_{12}^2}\\\\\\ \\\\ 其中:d\\pmb l_1=dl_1\\cdot sin\\theta_1，d\\pmb l_2=dl_2\\cdot sin\\theta_2\\\\\\ \\\\ \\therefore dF_{12}=k\\frac{I_1I_2dl_1dl_2sin\\theta_1sin\\theta_2}{r_{12}^2}（其中k取决于单位）\\\\\\ \\\\ d\\pmb F_{12}=k\\frac{I_1I_2d\\pmb l_2\\times(d\\pmb l_1\\times\\pmb r_{12})}{r_{12}^2}(1)\\\\\\ \\\\ 经实验得出:k=\\frac{\\mu_0}{4\\pi} $$\n二、磁感应强度 毕奥萨格尔定律 2.1 磁感应强度B 定义\n根据MSKA单位制 $$ \\pmb B=\\mu_0\\pmb H $$\n表达式和单位\n$$ 根据上述(1)式: d\\pmb F_{12}=\\frac{\\mu_0}{4\\pi}\\frac{I_2d\\pmb l_2\\times(I_1d\\pmb l_1\\times \\pmb r_{12})}{r_{12}^2}\\\\\\ \\\\ 又\\because d\\pmb F_{12}=I_2d\\pmb l_2d\\pmb B\\\\\\ \\\\ \\therefore d\\pmb B=\\frac{\\mu_0}{4\\pi}\\frac{I_1d\\pmb l_1\\times \\pmb r_{12}}{r_{12}^2}\\\\\\ \\\\ 线圈1对于电偶元2的作用力\\\\\\ \\\\ d\\pmb F_2=\\frac{\\mu_0}{4\\pi}I_2d\\pmb l_2\\oint \\frac{I_1d\\pmb l_1\\times\\pmb r_{12}}{r_{12}^2}\\\\\\ \\\\ \\therefore \\pmb B=\\frac{\\mu_0}{4\\pi}\\oint\\frac{I_1d\\pmb l_1\\times\\pmb r_{12}}{r_{12}^2}\\\\\\ \\\\ 其中\\pmb B叫做磁感应强度矢量\\\\\\ \\\\ \\therefore B=\\frac{(dF_{12})_{max}}{I_2dl_2}\\\\\\ \\\\ B的单位为N/A\\cdot m,称为T\\\\\\ \\\\ 1T=10^4Gs $$\n2.2 毕奥萨格尔定律 表达式\n$$ \\pmb B=\\frac{\\mu_0}{4\\pi}\\oint\\frac{I_1d\\pmb l_1\\times\\pmb {\\overrightarrow r}[^1]}{r_{12}^2} $$\n应用\n1.载流直导线\n图示 推导 $$ B = \\int_{A_{1}}^{A_2}\\frac{\\mu_0}{4\\pi}\\frac{Idlsin\\theta}{r^2}\\\\\\ \\\\ 根据几何关系:tan(\\pi-\\theta)=\\frac{r_0}{l}\\\\\\ \\\\ \\therefore dl=\\frac{r_0d\\theta}{sin^2\\theta}\\\\\\ \\\\ \\therefore B=\\frac{\\mu_0}{4\\pi}\\int_{\\theta_1}^{\\theta_2}\\frac{Isin\\theta d\\theta}{r_0}\\\\\\ \\\\ \\pmb{B=\\frac{\\mu_0I}{4\\pi r}(cos\\theta_1-cos\\theta_2)}\\\\\\ \\\\ 当直线无限长时:\\pmb{B=\\frac{\\mu_0 I}{2\\pi r}}\\\\\\ $$\n2.载流圆线圈\n图示 推导 $$ \\\\ dB=\\frac{\\mu_0}{4\\pi}\\frac{Idl}{r^2}=\\frac{\\mu_0}{4\\pi}\\frac{Idl}{r_0^2}sin^2\\alpha\\\\\\ \\\\ B=\\oint dBcos\\alpha=\\oint\\frac{\\mu_0}{4\\pi}\\frac{Idl}{r_0^2}sin^2\\alpha cos\\alpha\\\\\\ \\\\ \\therefore \\pmb {B=\\frac{\\mu_0R^2I}{2(R^2+r_0^2)^{3/2}}}\\\\\\ \\\\ 当P点在球心时:\\pmb{B=\\frac{\\mu_0I}{2R}}\\\\\\ \\\\ 当P点在无穷远处:\\pmb{B=\\frac{\\mu_0R^2I}{2r_0^3}} $$\n载有环向电流的圆筒 图示\n推导\n$$ \\\\ 设半径为R，总长度为L,电流的线密度为\\iota\\\\\\ \\\\ 取轴线为x轴，中点为原点\\\\\\ \\\\ 对于x处的P点\\\\\\ \\\\ dB=\\frac{\\mu_0R\\iota \\cdot dl}{2(R^2+(x-l)^2)^{3/2}}\\\\\\ \\\\ B = \\int_{-L/2}^{L/2}dB\\\\\\ \\\\ 其中: 距离r=\\sqrt{R^2+(x-l)^2}\\\\\\ \\\\ \\frac{x-l}{R}=cot\\beta\\longrightarrow dl=\\frac{Rd\\beta}{sin^2\\beta}\\\\\\ \\\\ \\therefore \\pmb{B=\\frac{\\mu_0\\iota}{2}(cos\\beta_1-cos\\beta_2)}\\\\\\ \\\\ cos\\beta_1=\\frac{x+L/2}{\\sqrt{R^2+(x+L/2)^2}}，cos\\beta_2=\\frac{x-L/2}{\\sqrt{R^2+(x-L/2)^2}}\\\\\\ \\\\ 当螺线管无限长:\\pmb{B=\\mu_0\\iota}\\\\\\ \\\\ 在无限长螺线管的 一端:\\pmb {B=\\frac{\\mu_0\\iota}{2}}\\\\\\ \\\\ 其中，电流线密度\\iota=nI\\\\\\ \\\\ \\therefore 对于无限长螺线管有:B=\\mu_0nI\\\\\\ $$\n2.3 安培环路定律(暂定) 结论\n$$ \\oint \\pmb B\\cdot d\\pmb l=\\mu_0I\\\\\\ \\\\ 或\\pmb B=\\frac{\\mu_0I}{4\\pi}\\nabla\\Omega $$\n三、磁场对载流导线的作用 3.1 安培力与无限长直导线之间的作用 安培力\n$$ d\\pmb F=Id\\pmb l\\times\\pmb B $$\n无限长直导线\n图像\n推导\n$$ \\\\ dF_{12}= I_2dl_2B_1=\\frac{\\mu_0I_1I_2}{2\\pi a}dl_2\\\\\\ \\\\ 同理: dF_{21}=\\frac{\\mu_0I_1I_2}{2\\pi a}dl_1\\\\\\ \\\\ \\therefore 单位作用力f=\\frac{dF_{12}}{dl_2}=\\frac{\\mu_0I_1I_2}{2\\pi a} $$\n3.2 矩形载流线圈所受力矩 图示\n推导\n$$ \\\\ F_{AB}=F_{CD}相互抵消\\\\\\ \\\\ L = F_{BC}\\frac{a}{2}sin\\theta+F_{AD}\\frac{a}{2}sin\\theta\\\\\\ \\\\ L = BIbasin\\theta=IBSsin\\theta\\\\\\ \\\\ \\therefore\\pmb L=IS(\\pmb{n\\times B})\\\\\\ $$\n3.3 载流线圈的磁矩 图示\n推导\n$$ \\\\ dl_1sin\\theta_1=dl_2sin\\theta_2=dh\\\\\\ \\\\ dF_{12}=Idl_1Bsin\\theta_1;dF_{21}=Idl_2Bsin\\theta_2\\\\\\ \\\\ \\therefore dF_{12}=dF_{21}=IBdh\\\\\\ \\\\ \\therefore dL=dF_{12}\\cdot x_1+dF_{21}\\cdot x_2=IBdh(x_1+x_2)\\\\\\ \\\\ L = IBS\\\\\\ \\\\ 其中，m=IS\\longrightarrow\\pmb m=IS\\pmb n\\\\\\ \\\\ \\\\\\therefore\\pmb{\\pmb L = m\\times B}\\\\\\ $$\n3.4 磁偶极子和载流线圈的等价性(待定) 四、带电粒子在磁场中的运动 4.1 洛伦兹力 定义\n根据实验有 $$ \\pmb F=q\\ \\pmb{v\\times B}\\\\\\ \\\\ F = |q|\\ vB\\ sin\\theta $$\n洛伦兹力和安培力的关系\n$$ \\\\ 设自由电子移动速度为u,单位体积的自由电子数为n\\\\\\ \\\\ 在时间\\Delta t内通过面S的电子数为n\\Delta V = nSu\\Delta t\\\\\\ \\\\ 电量\\Delta q = enSu\\Delta t\\\\\\ \\\\ I = \\frac{\\Delta q}{\\Delta t}= enSu\\\\\\ \\\\ 每个电子的洛伦兹力为\\\\\\ \\\\ F=evB\\\\\\ \\\\ F_{总}=nS\\Delta l F=(ensv)\\Delta l B=BI\\Delta l $$\n4.2 带电粒子在磁场中的运动 当 $\\pmb{v\\perp B}$\n$$ qvB=m\\frac{v^2}{R}\\\\\\ \\\\ \\pmb{R=\\frac{mv}{qB}}，\\pmb{T=\\frac{2\\pi m}{qB}} $$\n普遍情形\n图示 推导 $$ h=v_{//}T=\\frac{2\\pi mv}{qB} $$\n磁聚焦 由于$v_{//}$相同，一段时间后这些粒子又会聚集在一起 4.3 荷质比 汤姆孙法\n图示 推导 $$ \\\\ eE=evB\\longrightarrow v=\\frac{E}{B}\\\\\\ \\\\ R=\\frac{mv}{eB}\\\\\\ \\\\ \\frac{e}{m}=\\frac{v}{RB}=\\frac{E}{RB^2}\\\\\\ \\\\ 实验结果:\\frac{e}{m}=1.759\\times 10^{11}C/kg $$\n磁聚焦法\n图示 推导\n$$ \\\\ \\frac{1}{2}mv^2=e\\Delta U\\\\\\ \\\\ v = \\sqrt{\\frac{2e\\Delta U}{m}}\\\\\\ \\\\ h = \\frac{2\\pi m v}{eB}\\\\\\ \\\\ \\therefore \\frac{e}{m}=\\frac{8\\pi^2\\Delta U}{l^2B^2} $$\n","date":"2022-11-24T23:25:35+08:00","permalink":"https://downeyflyfan.com/p/%E6%81%92%E7%A3%81%E5%9C%BA/","title":"恒磁场"}]